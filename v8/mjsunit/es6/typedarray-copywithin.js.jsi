var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<201,211,6>",(Uint8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<215,224,7>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<228,239,8>",(Uint16Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<243,253,9>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<257,268,10>",(Uint32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<272,282,11>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<286,303,12>",(Uint8ClampedArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<307,319,13>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<323,335,14>",(Float64Array)); Inst9++; } } catch(e) {}
var typedArrayConstructors = [
  Uint8Array,
  Int8Array,
  Uint16Array,
  Int16Array,
  Uint32Array,
  Int32Array,
  Uint8ClampedArray,
  Float32Array,
  Float64Array];
try { if (Inst0 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<172,194,5>",(typedArrayConstructors)); Inst0++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<348,367,16>",(CheckEachTypedArray)); Inst10++; } } catch(e) {}
function CheckEachTypedArray(fn) {
try { if (Inst11 <= 1000 && typeof (fn) != "undefined") {_RecordType("<368,370,16>",(fn)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (typedArrayConstructors.forEach) != "undefined") {_RecordType("<376,406,17>",(typedArrayConstructors.forEach)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<376,398,17>",(typedArrayConstructors)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (fn) != "undefined") {_RecordType("<407,409,17>",(fn)); Inst14++; } } catch(e) {}
  typedArrayConstructors.forEach(fn);
}

try { if (Inst15 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<415,434,20>",(CheckEachTypedArray)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (copyWithinArity) != "undefined") {_RecordType("<444,459,20>",(copyWithinArity)); Inst16++; } } catch(e) {}
CheckEachTypedArray(function copyWithinArity(constructor) {
try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<460,471,20>",(constructor)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<477,489,21>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (new constructor([]).copyWithin.length) != "undefined") {_RecordType("<490,527,21>",(new constructor([]).copyWithin.length)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (new constructor([]).copyWithin) != "undefined") {_RecordType("<490,520,21>",(new constructor([]).copyWithin)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<494,505,21>",(constructor)); Inst21++; } } catch(e) {}
  assertEquals(new constructor([]).copyWithin.length, 2);
});


try { if (Inst22 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<539,558,25>",(CheckEachTypedArray)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (copyWithinTargetAndStart) != "undefined") {_RecordType("<568,592,25>",(copyWithinTargetAndStart)); Inst23++; } } catch(e) {}
CheckEachTypedArray(function copyWithinTargetAndStart(constructor) {
try { if (Inst24 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<593,604,25>",(constructor)); Inst24++; } } catch(e) {}
  // works with two arguments
try { if (Inst25 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<640,657,27>",(assertArrayEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<695,738,28>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<699,710,28>",(constructor)); Inst27++; } } catch(e) {}
  assertArrayEquals([4, 5, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0, 3));
try { if (Inst28 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<749,766,29>",(assertArrayEquals)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<804,847,30>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<808,819,30>",(constructor)); Inst30++; } } catch(e) {}
  assertArrayEquals([1, 4, 5, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(1, 3));
try { if (Inst31 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<858,875,31>",(assertArrayEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<913,956,32>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<917,928,32>",(constructor)); Inst33++; } } catch(e) {}
  assertArrayEquals([1, 3, 4, 5, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(1, 2));
try { if (Inst34 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<967,984,33>",(assertArrayEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1022,1065,34>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1026,1037,34>",(constructor)); Inst36++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(2, 2));
});


try { if (Inst37 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<1080,1099,38>",(CheckEachTypedArray)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (copyWithinTargetStartAndEnd) != "undefined") {_RecordType("<1109,1136,38>",(copyWithinTargetStartAndEnd)); Inst38++; } } catch(e) {}
CheckEachTypedArray(function copyWithinTargetStartAndEnd(constructor) {
try { if (Inst39 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1137,1148,38>",(constructor)); Inst39++; } } catch(e) {}
  // works with three arguments
try { if (Inst40 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1186,1203,40>",(assertArrayEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1204,1247,40>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1208,1219,40>",(constructor)); Inst42++; } } catch(e) {}
  assertArrayEquals(new constructor([1, 2, 3, 4, 5]).copyWithin(0, 3, 4),
                                    [4, 2, 3, 4, 5]);
try { if (Inst43 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1314,1331,42>",(assertArrayEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1332,1375,42>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1336,1347,42>",(constructor)); Inst45++; } } catch(e) {}
  assertArrayEquals(new constructor([1, 2, 3, 4, 5]).copyWithin(1, 3, 4),
                                    [1, 4, 3, 4, 5]);
try { if (Inst46 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1442,1459,44>",(assertArrayEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1460,1503,44>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1464,1475,44>",(constructor)); Inst48++; } } catch(e) {}
  assertArrayEquals(new constructor([1, 2, 3, 4, 5]).copyWithin(1, 2, 4),
                                    [1, 3, 4, 4, 5]);
});


try { if (Inst49 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<1574,1593,49>",(CheckEachTypedArray)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (copyWithinNegativeRelativeOffsets) != "undefined") {_RecordType("<1603,1636,49>",(copyWithinNegativeRelativeOffsets)); Inst50++; } } catch(e) {}
CheckEachTypedArray(function copyWithinNegativeRelativeOffsets(constructor) {
try { if (Inst51 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1637,1648,49>",(constructor)); Inst51++; } } catch(e) {}
  // works with negative arguments
try { if (Inst52 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1689,1706,51>",(assertArrayEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1744,1787,52>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1748,1759,52>",(constructor)); Inst54++; } } catch(e) {}
  assertArrayEquals([4, 5, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0, -2));
try { if (Inst55 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1799,1816,53>",(assertArrayEquals)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1854,1897,54>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1858,1869,54>",(constructor)); Inst57++; } } catch(e) {}
  assertArrayEquals([4, 2, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0, -2, -1));
try { if (Inst58 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1913,1930,55>",(assertArrayEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<1968,2011,56>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1972,1983,56>",(constructor)); Inst60++; } } catch(e) {}
  assertArrayEquals([1, 3, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(-4, -3, -2));
try { if (Inst61 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2028,2045,57>",(assertArrayEquals)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<2083,2126,58>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2087,2098,58>",(constructor)); Inst63++; } } catch(e) {}
  assertArrayEquals([1, 3, 4, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(-4, -3, -1));
try { if (Inst64 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2143,2160,59>",(assertArrayEquals)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<2198,2241,60>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2202,2213,60>",(constructor)); Inst66++; } } catch(e) {}
  assertArrayEquals([1, 3, 4, 5, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(-4, -3));
  // test with arguments equal to -this.length
try { if (Inst67 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2301,2318,62>",(assertArrayEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<2356,2399,63>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2360,2371,63>",(constructor)); Inst69++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(-5, 0));
});


try { if (Inst70 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<2415,2434,67>",(CheckEachTypedArray)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (mustBeTypedArray) != "undefined") {_RecordType("<2444,2460,67>",(mustBeTypedArray)); Inst71++; } } catch(e) {}
CheckEachTypedArray(function mustBeTypedArray(constructor) {
try { if (Inst72 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2461,2472,67>",(constructor)); Inst72++; } } catch(e) {}
  // throws on non-TypedArray values
try { if (Inst73 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2515,2527,69>",(assertThrows)); Inst73++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2608,2617,71>",(TypeError)); Inst78++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst74 <= 1000 && typeof (constructor.prototype.copyWithin.call) != "undefined") {_RecordType("<2552,2589,70>",(constructor.prototype.copyWithin.call)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (constructor.prototype.copyWithin) != "undefined") {_RecordType("<2552,2584,70>",(constructor.prototype.copyWithin)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<2552,2573,70>",(constructor.prototype)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2552,2563,70>",(constructor)); Inst77++; } } catch(e) {}
    return constructor.prototype.copyWithin.call(null, 0, 3);
  }, TypeError);
try { if (Inst79 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2622,2634,72>",(assertThrows)); Inst79++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2720,2729,74>",(TypeError)); Inst85++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst80 <= 1000 && typeof (constructor.prototype.copyWithin.call) != "undefined") {_RecordType("<2659,2696,73>",(constructor.prototype.copyWithin.call)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (constructor.prototype.copyWithin) != "undefined") {_RecordType("<2659,2691,73>",(constructor.prototype.copyWithin)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<2659,2680,73>",(constructor.prototype)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2659,2670,73>",(constructor)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2697,2706,73>",(undefined)); Inst84++; } } catch(e) {}
    return constructor.prototype.copyWithin.call(undefined, 0, 3);
  }, TypeError);
try { if (Inst86 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2734,2746,75>",(assertThrows)); Inst86++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2825,2834,77>",(TypeError)); Inst91++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst87 <= 1000 && typeof (constructor.prototype.copyWithin.call) != "undefined") {_RecordType("<2771,2808,76>",(constructor.prototype.copyWithin.call)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (constructor.prototype.copyWithin) != "undefined") {_RecordType("<2771,2803,76>",(constructor.prototype.copyWithin)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<2771,2792,76>",(constructor.prototype)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2771,2782,76>",(constructor)); Inst90++; } } catch(e) {}
    return constructor.prototype.copyWithin.call(34, 0, 3);
  }, TypeError);
try { if (Inst92 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2839,2851,78>",(assertThrows)); Inst92++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2943,2952,80>",(TypeError)); Inst97++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst93 <= 1000 && typeof (constructor.prototype.copyWithin.call) != "undefined") {_RecordType("<2876,2913,79>",(constructor.prototype.copyWithin.call)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (constructor.prototype.copyWithin) != "undefined") {_RecordType("<2876,2908,79>",(constructor.prototype.copyWithin)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<2876,2897,79>",(constructor.prototype)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2876,2887,79>",(constructor)); Inst96++; } } catch(e) {}
    return constructor.prototype.copyWithin.call([1, 2, 3, 4, 5], 0, 3);
  }, TypeError);
});


try { if (Inst98 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<2961,2980,84>",(CheckEachTypedArray)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (copyWithinStartLessThanTarget) != "undefined") {_RecordType("<2990,3019,84>",(copyWithinStartLessThanTarget)); Inst99++; } } catch(e) {}
CheckEachTypedArray(function copyWithinStartLessThanTarget(constructor) {
try { if (Inst100 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3020,3031,84>",(constructor)); Inst100++; } } catch(e) {}
  // test with target > start on 2 arguments
try { if (Inst101 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<3082,3099,86>",(assertArrayEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<3137,3180,87>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3141,3152,87>",(constructor)); Inst103++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 1, 2],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(3, 0));

  // test with target > start on 3 arguments
try { if (Inst104 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<3237,3254,90>",(assertArrayEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<3292,3335,91>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3296,3307,91>",(constructor)); Inst106++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 1, 2],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(3, 0, 4));
});

try { if (Inst107 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<3352,3371,94>",(CheckEachTypedArray)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (copyWithinNonIntegerRelativeOffsets) != "undefined") {_RecordType("<3381,3416,94>",(copyWithinNonIntegerRelativeOffsets)); Inst108++; } } catch(e) {}
CheckEachTypedArray(function copyWithinNonIntegerRelativeOffsets(constructor) {
try { if (Inst109 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3417,3428,94>",(constructor)); Inst109++; } } catch(e) {}
  // test on fractional arguments
try { if (Inst110 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<3468,3485,96>",(assertArrayEquals)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<3523,3566,97>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3527,3538,97>",(constructor)); Inst112++; } } catch(e) {}
  assertArrayEquals([4, 5, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0.2, 3.9));
});


try { if (Inst113 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<3585,3604,101>",(CheckEachTypedArray)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (copyWithinNegativeZeroTarget) != "undefined") {_RecordType("<3614,3642,101>",(copyWithinNegativeZeroTarget)); Inst114++; } } catch(e) {}
CheckEachTypedArray(function copyWithinNegativeZeroTarget(constructor) {
try { if (Inst115 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3643,3654,101>",(constructor)); Inst115++; } } catch(e) {}
  // test with -0
try { if (Inst116 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<3678,3695,103>",(assertArrayEquals)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<3733,3776,104>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3737,3748,104>",(constructor)); Inst118++; } } catch(e) {}
  assertArrayEquals([4, 5, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(-0, 3));
});


try { if (Inst119 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<3792,3811,108>",(CheckEachTypedArray)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (copyWithinTargetOutsideStart) != "undefined") {_RecordType("<3821,3849,108>",(copyWithinTargetOutsideStart)); Inst120++; } } catch(e) {}
CheckEachTypedArray(function copyWithinTargetOutsideStart(constructor) {
try { if (Inst121 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3850,3861,108>",(constructor)); Inst121++; } } catch(e) {}
  // test with arguments more than this.length
try { if (Inst122 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<3914,3931,110>",(assertArrayEquals)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<3969,4012,111>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3973,3984,111>",(constructor)); Inst124++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0, 7));

  // test with arguments less than -this.length
try { if (Inst125 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<4072,4089,114>",(assertArrayEquals)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<4127,4170,115>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4131,4142,115>",(constructor)); Inst127++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(-7, 0));
});


try { if (Inst128 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<4186,4205,119>",(CheckEachTypedArray)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (copyWithinEmptyArray) != "undefined") {_RecordType("<4215,4235,119>",(copyWithinEmptyArray)); Inst129++; } } catch(e) {}
CheckEachTypedArray(function copyWithinEmptyArray(constructor) {
try { if (Inst130 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4236,4247,119>",(constructor)); Inst130++; } } catch(e) {}
  // test on empty array
try { if (Inst131 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<4278,4295,121>",(assertArrayEquals)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (new constructor([]).copyWithin) != "undefined") {_RecordType("<4300,4330,121>",(new constructor([]).copyWithin)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4304,4315,121>",(constructor)); Inst133++; } } catch(e) {}
  assertArrayEquals([], new constructor([]).copyWithin(0, 3));
});


try { if (Inst134 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<4345,4364,125>",(CheckEachTypedArray)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (copyWithinTargetCutOff) != "undefined") {_RecordType("<4374,4396,125>",(copyWithinTargetCutOff)); Inst135++; } } catch(e) {}
CheckEachTypedArray(function copyWithinTargetCutOff(constructor) {
try { if (Inst136 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4397,4408,125>",(constructor)); Inst136++; } } catch(e) {}
  // test with target range being shorter than end - start
try { if (Inst137 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<4473,4490,127>",(assertArrayEquals)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof ([1, 2, 3, 4, 5].copyWithin) != "undefined") {_RecordType("<4508,4534,127>",([1, 2, 3, 4, 5].copyWithin)); Inst138++; } } catch(e) {}
  assertArrayEquals([1, 2, 2, 3, 4], [1, 2, 3, 4, 5].copyWithin(2, 1, 4));
});


try { if (Inst139 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<4552,4571,131>",(CheckEachTypedArray)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (copyWithinOverlappingRanges) != "undefined") {_RecordType("<4581,4608,131>",(copyWithinOverlappingRanges)); Inst140++; } } catch(e) {}
CheckEachTypedArray(function copyWithinOverlappingRanges(constructor) {
try { if (Inst141 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4609,4620,131>",(constructor)); Inst141++; } } catch(e) {}
  // test overlapping ranges
  var arr = [1, 2, 3, 4, 5];
try { if (Inst142 <= 1000 && typeof (arr) != "undefined") {_RecordType("<4659,4662,133>",(arr)); Inst142++; } } catch(e) {}
try { if (Inst143 <= 1000 && typeof (arr.copyWithin) != "undefined") {_RecordType("<4684,4698,134>",(arr.copyWithin)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (arr) != "undefined") {_RecordType("<4684,4687,134>",(arr)); Inst144++; } } catch(e) {}
  arr.copyWithin(2, 1, 4);
try { if (Inst145 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<4711,4728,135>",(assertArrayEquals)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (arr.copyWithin) != "undefined") {_RecordType("<4746,4760,135>",(arr.copyWithin)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (arr) != "undefined") {_RecordType("<4746,4749,135>",(arr)); Inst147++; } } catch(e) {}
  assertArrayEquals([1, 2, 2, 2, 3], arr.copyWithin(2, 1, 4));
});


try { if (Inst148 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<4778,4797,139>",(CheckEachTypedArray)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (copyWithinDefaultEnd) != "undefined") {_RecordType("<4807,4827,139>",(copyWithinDefaultEnd)); Inst149++; } } catch(e) {}
CheckEachTypedArray(function copyWithinDefaultEnd(constructor) {
try { if (Inst150 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4828,4839,139>",(constructor)); Inst150++; } } catch(e) {}
  // undefined as third argument
try { if (Inst151 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<4878,4895,141>",(assertArrayEquals)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<4933,4976,142>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4937,4948,142>",(constructor)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4983,4992,142>",(undefined)); Inst154++; } } catch(e) {}
  assertArrayEquals([4, 5, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0, 3, undefined));
});


try { if (Inst155 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<5002,5021,146>",(CheckEachTypedArray)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (copyWithinLargeArray) != "undefined") {_RecordType("<5031,5051,146>",(copyWithinLargeArray)); Inst156++; } } catch(e) {}
CheckEachTypedArray(function copyWithinLargeArray(constructor) {
try { if (Inst157 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<5052,5063,146>",(constructor)); Inst157++; } } catch(e) {}
  var large = 10000;
try { if (Inst158 <= 1000 && typeof (large) != "undefined") {_RecordType("<5073,5078,147>",(large)); Inst158++; } } catch(e) {}

  // test on a large array
try { if (Inst160 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<5132,5143,150>",(constructor)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (large) != "undefined") {_RecordType("<5144,5149,150>",(large)); Inst161++; } } catch(e) {}
  var arr = new constructor(large);
try { if (Inst159 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5122,5125,150>",(arr)); Inst159++; } } catch(e) {}
try { if (Inst162 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<5154,5171,151>",(assertArrayEquals)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5172,5175,151>",(arr)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (arr.copyWithin) != "undefined") {_RecordType("<5177,5191,151>",(arr.copyWithin)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5177,5180,151>",(arr)); Inst165++; } } catch(e) {}
  assertArrayEquals(arr, arr.copyWithin(45, 9000));

try { if (Inst167 <= 1000 && typeof (Array) != "undefined") {_RecordType("<5226,5231,153>",(Array)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (large) != "undefined") {_RecordType("<5232,5237,153>",(large)); Inst168++; } } catch(e) {}
  var expected = new Array(large);
try { if (Inst166 <= 1000 && typeof (expected) != "undefined") {_RecordType("<5211,5219,153>",(expected)); Inst166++; } } catch(e) {}
  // test on numbers
  for (var i = 0; i < large; i++) {
try { if (Inst169 <= 1000 && typeof (i) != "undefined") {_RecordType("<5272,5273,155>",(i)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (i) != "undefined") {_RecordType("<5279,5280,155>",(i)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (large) != "undefined") {_RecordType("<5283,5288,155>",(large)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (i) != "undefined") {_RecordType("<5290,5291,155>",(i)); Inst172++; } } catch(e) {}
try { if (Inst175 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<5310,5321,156>",(Math.random)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (Math) != "undefined") {_RecordType("<5310,5314,156>",(Math)); Inst176++; } } catch(e) {}
    arr[i] = Math.random() * 100;  // May be cast to an int
try { if (Inst173 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<5301,5307,156>",(arr[i])); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5301,5304,156>",(arr)); Inst174++; } } catch(e) {}
try { if (Inst179 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<5375,5381,157>",(arr[i])); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5375,5378,157>",(arr)); Inst180++; } } catch(e) {}
    expected[i] = arr[i];
try { if (Inst177 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<5361,5372,157>",(expected[i])); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (expected) != "undefined") {_RecordType("<5361,5369,157>",(expected)); Inst178++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (i) != "undefined") {_RecordType("<5391,5392,158>",(i)); Inst181++; } } catch(e) {}
    if (i >= 9000) {
try { if (Inst185 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<5438,5444,159>",(arr[i])); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5438,5441,159>",(arr)); Inst186++; } } catch(e) {}
      expected[(i - 9000) + 45] = arr[i];
try { if (Inst182 <= 1000 && typeof (expected[(i - 9000) + 45]) != "undefined") {_RecordType("<5410,5435,159>",(expected[(i - 9000) + 45])); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (expected) != "undefined") {_RecordType("<5410,5418,159>",(expected)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (i) != "undefined") {_RecordType("<5420,5421,159>",(i)); Inst184++; } } catch(e) {}
    }
  }
try { if (Inst187 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<5458,5475,162>",(assertArrayEquals)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (expected) != "undefined") {_RecordType("<5476,5484,162>",(expected)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (arr.copyWithin) != "undefined") {_RecordType("<5486,5500,162>",(arr.copyWithin)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5486,5489,162>",(arr)); Inst190++; } } catch(e) {}
  assertArrayEquals(expected, arr.copyWithin(45, 9000));

  // test array length remains same
try { if (Inst191 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5552,5564,165>",(assertEquals)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (large) != "undefined") {_RecordType("<5565,5570,165>",(large)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (arr.length) != "undefined") {_RecordType("<5572,5582,165>",(arr.length)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (arr) != "undefined") {_RecordType("<5572,5575,165>",(arr)); Inst194++; } } catch(e) {}
  assertEquals(large, arr.length);
});


try { if (Inst195 <= 1000 && typeof (CheckEachTypedArray) != "undefined") {_RecordType("<5591,5610,169>",(CheckEachTypedArray)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (copyWithinNullEnd) != "undefined") {_RecordType("<5620,5637,169>",(copyWithinNullEnd)); Inst196++; } } catch(e) {}
CheckEachTypedArray(function copyWithinNullEnd(constructor) {
try { if (Inst197 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<5638,5649,169>",(constructor)); Inst197++; } } catch(e) {}
  // test null on third argument is converted to +0
try { if (Inst198 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<5707,5724,171>",(assertArrayEquals)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (new constructor([1, 2, 3, 4, 5]).copyWithin) != "undefined") {_RecordType("<5762,5805,172>",(new constructor([1, 2, 3, 4, 5]).copyWithin)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<5766,5777,172>",(constructor)); Inst200++; } } catch(e) {}
  assertArrayEquals([1, 2, 3, 4, 5],
                    new constructor([1, 2, 3, 4, 5]).copyWithin(0, 3, null));
});

