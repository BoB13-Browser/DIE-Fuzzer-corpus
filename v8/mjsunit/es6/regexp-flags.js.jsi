var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --harmony-unicode-regexps

var r1 = /abc/gi;
try { if (Inst0 <= 1000 && typeof (r1) != "undefined") {_RecordType("<209,211,7>",(r1)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<223,235,8>",(assertEquals)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (r1.source) != "undefined") {_RecordType("<243,252,8>",(r1.source)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (r1) != "undefined") {_RecordType("<243,245,8>",(r1)); Inst3++; } } catch(e) {}
assertEquals("abc", r1.source);
try { if (Inst4 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<255,265,9>",(assertTrue)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (r1.global) != "undefined") {_RecordType("<266,275,9>",(r1.global)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (r1) != "undefined") {_RecordType("<266,268,9>",(r1)); Inst6++; } } catch(e) {}
assertTrue(r1.global);
try { if (Inst7 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<278,288,10>",(assertTrue)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (r1.ignoreCase) != "undefined") {_RecordType("<289,302,10>",(r1.ignoreCase)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r1) != "undefined") {_RecordType("<289,291,10>",(r1)); Inst9++; } } catch(e) {}
assertTrue(r1.ignoreCase);
try { if (Inst10 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<305,316,11>",(assertFalse)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r1.multiline) != "undefined") {_RecordType("<317,329,11>",(r1.multiline)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (r1) != "undefined") {_RecordType("<317,319,11>",(r1)); Inst12++; } } catch(e) {}
assertFalse(r1.multiline);
try { if (Inst13 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<332,343,12>",(assertFalse)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (r1.sticky) != "undefined") {_RecordType("<344,353,12>",(r1.sticky)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (r1) != "undefined") {_RecordType("<344,346,12>",(r1)); Inst15++; } } catch(e) {}
assertFalse(r1.sticky);
try { if (Inst16 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<356,367,13>",(assertFalse)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (r1.unicode) != "undefined") {_RecordType("<368,378,13>",(r1.unicode)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (r1) != "undefined") {_RecordType("<368,370,13>",(r1)); Inst18++; } } catch(e) {}
assertFalse(r1.unicode);

// Internal slot of prototype is not read.
try { if (Inst20 <= 1000 && typeof (r1) != "undefined") {_RecordType("<447,449,16>",(r1)); Inst20++; } } catch(e) {}
var r2 = { __proto__: r1 };
try { if (Inst19 <= 1000 && typeof (r2) != "undefined") {_RecordType("<429,431,16>",(r2)); Inst19++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<453,465,17>",(assertThrows)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (r2.source) != "undefined") {_RecordType("<479,488,17>",(r2.source)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (r2) != "undefined") {_RecordType("<479,481,17>",(r2)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<493,502,17>",(TypeError)); Inst24++; } } catch(e) {}
assertThrows(function() { r2.source; }, TypeError);
try { if (Inst25 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<505,517,18>",(assertThrows)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (r2.global) != "undefined") {_RecordType("<531,540,18>",(r2.global)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (r2) != "undefined") {_RecordType("<531,533,18>",(r2)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<545,554,18>",(TypeError)); Inst28++; } } catch(e) {}
assertThrows(function() { r2.global; }, TypeError);
try { if (Inst29 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<557,569,19>",(assertThrows)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (r2.ignoreCase) != "undefined") {_RecordType("<583,596,19>",(r2.ignoreCase)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (r2) != "undefined") {_RecordType("<583,585,19>",(r2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<601,610,19>",(TypeError)); Inst32++; } } catch(e) {}
assertThrows(function() { r2.ignoreCase; }, TypeError);
try { if (Inst33 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<613,625,20>",(assertThrows)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (r2.multiline) != "undefined") {_RecordType("<639,651,20>",(r2.multiline)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (r2) != "undefined") {_RecordType("<639,641,20>",(r2)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<656,665,20>",(TypeError)); Inst36++; } } catch(e) {}
assertThrows(function() { r2.multiline; }, TypeError);
try { if (Inst37 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<668,680,21>",(assertThrows)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (r2.sticky) != "undefined") {_RecordType("<694,703,21>",(r2.sticky)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (r2) != "undefined") {_RecordType("<694,696,21>",(r2)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<708,717,21>",(TypeError)); Inst40++; } } catch(e) {}
assertThrows(function() { r2.sticky; }, TypeError);
try { if (Inst41 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<720,732,22>",(assertThrows)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (r2.unicode) != "undefined") {_RecordType("<746,756,22>",(r2.unicode)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (r2) != "undefined") {_RecordType("<746,748,22>",(r2)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<761,770,22>",(TypeError)); Inst44++; } } catch(e) {}
assertThrows(function() { r2.unicode; }, TypeError);

var r3 = /I/;
try { if (Inst45 <= 1000 && typeof (r3) != "undefined") {_RecordType("<778,780,24>",(r3)); Inst45++; } } catch(e) {}
var string = "iIiIi";
try { if (Inst46 <= 1000 && typeof (string) != "undefined") {_RecordType("<792,798,25>",(string)); Inst46++; } } catch(e) {}
var expected = "iXiIi";
try { if (Inst47 <= 1000 && typeof (expected) != "undefined") {_RecordType("<814,822,26>",(expected)); Inst47++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<834,845,27>",(assertFalse)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (r3.global) != "undefined") {_RecordType("<846,855,27>",(r3.global)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (r3) != "undefined") {_RecordType("<846,848,27>",(r3)); Inst50++; } } catch(e) {}
assertFalse(r3.global);
try { if (Inst51 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<858,869,28>",(assertFalse)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (r3.ignoreCase) != "undefined") {_RecordType("<870,883,28>",(r3.ignoreCase)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (r3) != "undefined") {_RecordType("<870,872,28>",(r3)); Inst53++; } } catch(e) {}
assertFalse(r3.ignoreCase);
try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<886,898,29>",(assertEquals)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (r3.flags) != "undefined") {_RecordType("<903,911,29>",(r3.flags)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (r3) != "undefined") {_RecordType("<903,905,29>",(r3)); Inst56++; } } catch(e) {}
assertEquals("", r3.flags);
try { if (Inst57 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<914,926,30>",(assertEquals)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (expected) != "undefined") {_RecordType("<927,935,30>",(expected)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<937,951,30>",(string.replace)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (string) != "undefined") {_RecordType("<937,943,30>",(string)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (r3) != "undefined") {_RecordType("<952,954,30>",(r3)); Inst61++; } } catch(e) {}
assertEquals(expected, string.replace(r3, "X"));

var get_count = 0;
try { if (Inst62 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<968,977,32>",(get_count)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<983,1004,33>",(Object.defineProperty)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Object) != "undefined") {_RecordType("<983,989,33>",(Object)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1005,1007,33>",(r3)); Inst65++; } } catch(e) {}
Object.defineProperty(r3, "global", {
try { if (Inst66 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1041,1050,34>",(get_count)); Inst66++; } } catch(e) {}
  get: function() { get_count++; return true; }
});
try { if (Inst67 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1073,1094,36>",(Object.defineProperty)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1073,1079,36>",(Object)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1095,1097,36>",(r3)); Inst69++; } } catch(e) {}
Object.defineProperty(r3, "ignoreCase", {
try { if (Inst70 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1135,1144,37>",(get_count)); Inst70++; } } catch(e) {}
  get: function() { get_count++; return true; }
});

try { if (Inst71 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1168,1178,40>",(assertTrue)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (r3.global) != "undefined") {_RecordType("<1179,1188,40>",(r3.global)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1179,1181,40>",(r3)); Inst73++; } } catch(e) {}
assertTrue(r3.global);
try { if (Inst74 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1191,1203,41>",(assertEquals)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1207,1216,41>",(get_count)); Inst75++; } } catch(e) {}
assertEquals(1, get_count);
try { if (Inst76 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1219,1229,42>",(assertTrue)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (r3.ignoreCase) != "undefined") {_RecordType("<1230,1243,42>",(r3.ignoreCase)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1230,1232,42>",(r3)); Inst78++; } } catch(e) {}
assertTrue(r3.ignoreCase);
try { if (Inst79 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1246,1258,43>",(assertEquals)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1262,1271,43>",(get_count)); Inst80++; } } catch(e) {}
assertEquals(2, get_count);
// Overridden flag getters affects the flags getter.
try { if (Inst81 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1327,1339,45>",(assertEquals)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (r3.flags) != "undefined") {_RecordType("<1346,1354,45>",(r3.flags)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1346,1348,45>",(r3)); Inst83++; } } catch(e) {}
assertEquals("gi", r3.flags);
try { if (Inst84 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1357,1369,46>",(assertEquals)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1373,1382,46>",(get_count)); Inst85++; } } catch(e) {}
assertEquals(4, get_count);
// Overridden flag getters affect string.replace
// TODO(adamk): Add more tests here once we've switched
// to use [[OriginalFlags]] in more cases.
try { if (Inst86 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1533,1545,50>",(assertEquals)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1546,1554,50>",(expected)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (string.replace) != "undefined") {_RecordType("<1556,1570,50>",(string.replace)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (string) != "undefined") {_RecordType("<1556,1562,50>",(string)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (r3) != "undefined") {_RecordType("<1571,1573,50>",(r3)); Inst90++; } } catch(e) {}
assertEquals(expected, string.replace(r3, "X"));
try { if (Inst91 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1582,1594,51>",(assertEquals)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (get_count) != "undefined") {_RecordType("<1598,1607,51>",(get_count)); Inst92++; } } catch(e) {}
assertEquals(5, get_count);


try { if (Inst93 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1621,1629,54>",(testName)); Inst93++; } } catch(e) {}
function testName(name) {
try { if (Inst94 <= 1000 && typeof (name) != "undefined") {_RecordType("<1630,1634,54>",(name)); Inst94++; } } catch(e) {}
  // Test for ES2017 RegExp web compatibility semantics
  // https://github.com/tc39/ecma262/pull/511
try { if (Inst95 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1742,1754,57>",(assertEquals)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (name) != "undefined") {_RecordType("<1755,1759,57>",(name)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1784,1793,57>",(undefined)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (RegExp.prototype[name]) != "undefined") {_RecordType("<1810,1832,58>",(RegExp.prototype[name])); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1810,1826,58>",(RegExp.prototype)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1810,1816,58>",(RegExp)); Inst100++; } } catch(e) {}
  assertEquals(name === "source" ? "(?:)" : undefined,
               RegExp.prototype[name]);
try { if (Inst101 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1837,1849,59>",(assertEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (name) != "undefined") {_RecordType("<1866,1870,60>",(name)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, name).get.name) != "undefined") {_RecordType("<1878,1942,61>",(Object.getOwnPropertyDescriptor(RegExp.prototype, name).get.name)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Object.getOwnPropertyDescriptor(RegExp.prototype, name).get) != "undefined") {_RecordType("<1878,1937,61>",(Object.getOwnPropertyDescriptor(RegExp.prototype, name).get)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1878,1909,61>",(Object.getOwnPropertyDescriptor)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1878,1884,61>",(Object)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<1910,1926,61>",(RegExp.prototype)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1910,1916,61>",(RegExp)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (name) != "undefined") {_RecordType("<1928,1932,61>",(name)); Inst109++; } } catch(e) {}
  assertEquals(
      "get " + name,
      Object.getOwnPropertyDescriptor(RegExp.prototype, name).get.name);
}

try { if (Inst110 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1948,1956,64>",(testName)); Inst110++; } } catch(e) {}
testName("global");
try { if (Inst111 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1968,1976,65>",(testName)); Inst111++; } } catch(e) {}
testName("ignoreCase");
try { if (Inst112 <= 1000 && typeof (testName) != "undefined") {_RecordType("<1992,2000,66>",(testName)); Inst112++; } } catch(e) {}
testName("multiline");
try { if (Inst113 <= 1000 && typeof (testName) != "undefined") {_RecordType("<2015,2023,67>",(testName)); Inst113++; } } catch(e) {}
testName("source");
try { if (Inst114 <= 1000 && typeof (testName) != "undefined") {_RecordType("<2035,2043,68>",(testName)); Inst114++; } } catch(e) {}
testName("sticky");
try { if (Inst115 <= 1000 && typeof (testName) != "undefined") {_RecordType("<2055,2063,69>",(testName)); Inst115++; } } catch(e) {}
testName("unicode");


RegExp.prototype.flags = 'setter should be undefined';
try { if (Inst116 <= 1000 && typeof (RegExp.prototype.flags) != "undefined") {_RecordType("<2078,2100,72>",(RegExp.prototype.flags)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<2078,2094,72>",(RegExp.prototype)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2078,2084,72>",(RegExp)); Inst118++; } } catch(e) {}

try { if (Inst119 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2134,2146,74>",(assertEquals)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (RegExp('').flags) != "undefined") {_RecordType("<2151,2167,74>",(RegExp('').flags)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2151,2157,74>",(RegExp)); Inst121++; } } catch(e) {}
assertEquals('', RegExp('').flags);
try { if (Inst122 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2170,2182,75>",(assertEquals)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (/./.flags) != "undefined") {_RecordType("<2187,2196,75>",(/./.flags)); Inst123++; } } catch(e) {}
assertEquals('', /./.flags);
try { if (Inst124 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2199,2211,76>",(assertEquals)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (RegExp('', 'yugmi').flags) != "undefined") {_RecordType("<2221,2246,76>",(RegExp('', 'yugmi').flags)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2221,2227,76>",(RegExp)); Inst126++; } } catch(e) {}
assertEquals('gimuy', RegExp('', 'yugmi').flags);
try { if (Inst127 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2249,2261,77>",(assertEquals)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (/foo/yumig.flags) != "undefined") {_RecordType("<2271,2287,77>",(/foo/yumig.flags)); Inst128++; } } catch(e) {}
assertEquals('gimuy', /foo/yumig.flags);

try { if (Inst130 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2308,2339,79>",(Object.getOwnPropertyDescriptor)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2308,2314,79>",(Object)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<2340,2356,79>",(RegExp.prototype)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2340,2346,79>",(RegExp)); Inst133++; } } catch(e) {}
var descriptor = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');
try { if (Inst129 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2295,2305,79>",(descriptor)); Inst129++; } } catch(e) {}
try { if (Inst134 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2368,2378,80>",(assertTrue)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (descriptor.configurable) != "undefined") {_RecordType("<2379,2402,80>",(descriptor.configurable)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2379,2389,80>",(descriptor)); Inst136++; } } catch(e) {}
assertTrue(descriptor.configurable);
try { if (Inst137 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2405,2416,81>",(assertFalse)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (descriptor.enumerable) != "undefined") {_RecordType("<2417,2438,81>",(descriptor.enumerable)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2417,2427,81>",(descriptor)); Inst139++; } } catch(e) {}
assertFalse(descriptor.enumerable);
try { if (Inst140 <= 1000 && typeof (assertInstanceof) != "undefined") {_RecordType("<2441,2457,82>",(assertInstanceof)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<2458,2472,82>",(descriptor.get)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2458,2468,82>",(descriptor)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2474,2482,82>",(Function)); Inst143++; } } catch(e) {}
assertInstanceof(descriptor.get, Function);
try { if (Inst144 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2485,2497,83>",(assertEquals)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2498,2507,83>",(undefined)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (descriptor.set) != "undefined") {_RecordType("<2509,2523,83>",(descriptor.set)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2509,2519,83>",(descriptor)); Inst147++; } } catch(e) {}
assertEquals(undefined, descriptor.set);

try { if (Inst148 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2536,2552,85>",(testGenericFlags)); Inst148++; } } catch(e) {}
function testGenericFlags(object) {
try { if (Inst149 <= 1000 && typeof (object) != "undefined") {_RecordType("<2553,2559,85>",(object)); Inst149++; } } catch(e) {}
try { if (Inst150 <= 1000 && typeof (descriptor.get.call) != "undefined") {_RecordType("<2572,2591,86>",(descriptor.get.call)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (descriptor.get) != "undefined") {_RecordType("<2572,2586,86>",(descriptor.get)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (descriptor) != "undefined") {_RecordType("<2572,2582,86>",(descriptor)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (object) != "undefined") {_RecordType("<2592,2598,86>",(object)); Inst153++; } } catch(e) {}
  return descriptor.get.call(object);
}

try { if (Inst154 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2604,2616,89>",(assertEquals)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2621,2637,89>",(testGenericFlags)); Inst155++; } } catch(e) {}
assertEquals('', testGenericFlags({}));
try { if (Inst156 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2644,2656,90>",(assertEquals)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2662,2678,90>",(testGenericFlags)); Inst157++; } } catch(e) {}
assertEquals('i', testGenericFlags({ ignoreCase: true }));
try { if (Inst158 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2703,2715,91>",(assertEquals)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2722,2738,91>",(testGenericFlags)); Inst159++; } } catch(e) {}
assertEquals('uy', testGenericFlags({ global: 0, sticky: 1, unicode: 1 }));
try { if (Inst160 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2779,2791,92>",(assertEquals)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2797,2813,92>",(testGenericFlags)); Inst161++; } } catch(e) {}
assertEquals('m', testGenericFlags({ __proto__: { multiline: true } }));
try { if (Inst162 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2852,2864,93>",(assertThrows)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2878,2894,93>",(testGenericFlags)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2901,2910,93>",(TypeError)); Inst164++; } } catch(e) {}
assertThrows(function() { testGenericFlags(); }, TypeError);
try { if (Inst165 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2913,2925,94>",(assertThrows)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<2939,2955,94>",(testGenericFlags)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2956,2965,94>",(undefined)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2971,2980,94>",(TypeError)); Inst168++; } } catch(e) {}
assertThrows(function() { testGenericFlags(undefined); }, TypeError);
try { if (Inst169 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2983,2995,95>",(assertThrows)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3009,3025,95>",(testGenericFlags)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3036,3045,95>",(TypeError)); Inst171++; } } catch(e) {}
assertThrows(function() { testGenericFlags(null); }, TypeError);
try { if (Inst172 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3048,3060,96>",(assertThrows)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3074,3090,96>",(testGenericFlags)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3101,3110,96>",(TypeError)); Inst174++; } } catch(e) {}
assertThrows(function() { testGenericFlags(true); }, TypeError);
try { if (Inst175 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3113,3125,97>",(assertThrows)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3139,3155,97>",(testGenericFlags)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3167,3176,97>",(TypeError)); Inst177++; } } catch(e) {}
assertThrows(function() { testGenericFlags(false); }, TypeError);
try { if (Inst178 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3179,3191,98>",(assertThrows)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3205,3221,98>",(testGenericFlags)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3230,3239,98>",(TypeError)); Inst180++; } } catch(e) {}
assertThrows(function() { testGenericFlags(''); }, TypeError);
try { if (Inst181 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3242,3254,99>",(assertThrows)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3268,3284,99>",(testGenericFlags)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3293,3302,99>",(TypeError)); Inst183++; } } catch(e) {}
assertThrows(function() { testGenericFlags(42); }, TypeError);

var counter = 0;
try { if (Inst184 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3310,3317,101>",(counter)); Inst184++; } } catch(e) {}
var map = {};
try { if (Inst185 <= 1000 && typeof (map) != "undefined") {_RecordType("<3327,3330,102>",(map)); Inst185++; } } catch(e) {}
try { if (Inst187 <= 1000 && typeof (global) != "undefined") {_RecordType("<3358,3364,104>",(global)); Inst187++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (ignoreCase) != "undefined") {_RecordType("<3403,3413,107>",(ignoreCase)); Inst191++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (multiline) != "undefined") {_RecordType("<3452,3461,110>",(multiline)); Inst195++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (unicode) != "undefined") {_RecordType("<3500,3507,113>",(unicode)); Inst199++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (sticky) != "undefined") {_RecordType("<3546,3552,116>",(sticky)); Inst203++; } } catch(e) {}
var object = {
  get global() {
try { if (Inst190 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3381,3388,105>",(counter)); Inst190++; } } catch(e) {}
    map.g = counter++;
try { if (Inst188 <= 1000 && typeof (map.g) != "undefined") {_RecordType("<3373,3378,105>",(map.g)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (map) != "undefined") {_RecordType("<3373,3376,105>",(map)); Inst189++; } } catch(e) {}
  },
  get ignoreCase() {
try { if (Inst194 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3430,3437,108>",(counter)); Inst194++; } } catch(e) {}
    map.i = counter++;
try { if (Inst192 <= 1000 && typeof (map.i) != "undefined") {_RecordType("<3422,3427,108>",(map.i)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (map) != "undefined") {_RecordType("<3422,3425,108>",(map)); Inst193++; } } catch(e) {}
  },
  get multiline() {
try { if (Inst198 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3478,3485,111>",(counter)); Inst198++; } } catch(e) {}
    map.m = counter++;
try { if (Inst196 <= 1000 && typeof (map.m) != "undefined") {_RecordType("<3470,3475,111>",(map.m)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (map) != "undefined") {_RecordType("<3470,3473,111>",(map)); Inst197++; } } catch(e) {}
  },
  get unicode() {
try { if (Inst202 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3524,3531,114>",(counter)); Inst202++; } } catch(e) {}
    map.u = counter++;
try { if (Inst200 <= 1000 && typeof (map.u) != "undefined") {_RecordType("<3516,3521,114>",(map.u)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (map) != "undefined") {_RecordType("<3516,3519,114>",(map)); Inst201++; } } catch(e) {}
  },
  get sticky() {
try { if (Inst206 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3569,3576,117>",(counter)); Inst206++; } } catch(e) {}
    map.y = counter++;
try { if (Inst204 <= 1000 && typeof (map.y) != "undefined") {_RecordType("<3561,3566,117>",(map.y)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (map) != "undefined") {_RecordType("<3561,3564,117>",(map)); Inst205++; } } catch(e) {}
  }
};
try { if (Inst186 <= 1000 && typeof (object) != "undefined") {_RecordType("<3341,3347,103>",(object)); Inst186++; } } catch(e) {}
try { if (Inst207 <= 1000 && typeof (testGenericFlags) != "undefined") {_RecordType("<3587,3603,120>",(testGenericFlags)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (object) != "undefined") {_RecordType("<3604,3610,120>",(object)); Inst208++; } } catch(e) {}
testGenericFlags(object);
try { if (Inst209 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3613,3625,121>",(assertEquals)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (map) != "undefined") {_RecordType("<3660,3663,121>",(map)); Inst210++; } } catch(e) {}
assertEquals({ g: 0, i: 1, m: 2, u: 3, y: 4 }, map);

