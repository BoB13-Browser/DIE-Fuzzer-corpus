var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


try { if (Inst0 <= 1000 && typeof (TestBasics) != "undefined") {_RecordType("<179,189,6>",(TestBasics)); Inst0++; } } catch(e) {}
(function TestBasics() {
  var x = 1;
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<200,201,7>",(x)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<223,224,8>",(x)); Inst3++; } } catch(e) {}
  var object = {x};
try { if (Inst2 <= 1000 && typeof (object) != "undefined") {_RecordType("<213,219,8>",(object)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<229,241,9>",(assertEquals)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (object.x) != "undefined") {_RecordType("<245,253,9>",(object.x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (object) != "undefined") {_RecordType("<245,251,9>",(object)); Inst6++; } } catch(e) {}
  assertEquals(1, object.x);
})();


try { if (Inst7 <= 1000 && typeof (TestBasicsGetSet) != "undefined") {_RecordType("<274,290,13>",(TestBasicsGetSet)); Inst7++; } } catch(e) {}
(function TestBasicsGetSet() {
  var get = 1, set = 2;
try { if (Inst8 <= 1000 && typeof (get) != "undefined") {_RecordType("<301,304,14>",(get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (set) != "undefined") {_RecordType("<310,313,14>",(set)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (get) != "undefined") {_RecordType("<335,338,15>",(get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (set) != "undefined") {_RecordType("<340,343,15>",(set)); Inst12++; } } catch(e) {}
  var object = {get, set};
try { if (Inst10 <= 1000 && typeof (object) != "undefined") {_RecordType("<325,331,15>",(object)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<348,360,16>",(assertEquals)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (object.get) != "undefined") {_RecordType("<364,374,16>",(object.get)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (object) != "undefined") {_RecordType("<364,370,16>",(object)); Inst15++; } } catch(e) {}
  assertEquals(1, object.get);
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<379,391,17>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (object.set) != "undefined") {_RecordType("<395,405,17>",(object.set)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object) != "undefined") {_RecordType("<395,401,17>",(object)); Inst18++; } } catch(e) {}
  assertEquals(2, object.set);
})();


try { if (Inst19 <= 1000 && typeof (TestDescriptor) != "undefined") {_RecordType("<426,440,21>",(TestDescriptor)); Inst19++; } } catch(e) {}
(function TestDescriptor() {
  var x = 1;
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<451,452,22>",(x)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (x) != "undefined") {_RecordType("<474,475,23>",(x)); Inst22++; } } catch(e) {}
  var object = {x};
try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<464,470,23>",(object)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<492,523,24>",(Object.getOwnPropertyDescriptor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<492,498,24>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (object) != "undefined") {_RecordType("<524,530,24>",(object)); Inst26++; } } catch(e) {}
  var descr = Object.getOwnPropertyDescriptor(object, 'x');
try { if (Inst23 <= 1000 && typeof (descr) != "undefined") {_RecordType("<484,489,24>",(descr)); Inst23++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<540,552,25>",(assertEquals)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (descr.value) != "undefined") {_RecordType("<556,567,25>",(descr.value)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (descr) != "undefined") {_RecordType("<556,561,25>",(descr)); Inst29++; } } catch(e) {}
  assertEquals(1, descr.value);
try { if (Inst30 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<572,582,26>",(assertTrue)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (descr.enumerable) != "undefined") {_RecordType("<583,599,26>",(descr.enumerable)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (descr) != "undefined") {_RecordType("<583,588,26>",(descr)); Inst32++; } } catch(e) {}
  assertTrue(descr.enumerable);
try { if (Inst33 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<604,614,27>",(assertTrue)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (descr.writable) != "undefined") {_RecordType("<615,629,27>",(descr.writable)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (descr) != "undefined") {_RecordType("<615,620,27>",(descr)); Inst35++; } } catch(e) {}
  assertTrue(descr.writable);
try { if (Inst36 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<634,644,28>",(assertTrue)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (descr.configurable) != "undefined") {_RecordType("<645,663,28>",(descr.configurable)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (descr) != "undefined") {_RecordType("<645,650,28>",(descr)); Inst38++; } } catch(e) {}
  assertTrue(descr.configurable);
})();


try { if (Inst39 <= 1000 && typeof (TestNotDefined) != "undefined") {_RecordType("<684,698,32>",(TestNotDefined)); Inst39++; } } catch(e) {}
(function TestNotDefined() {
  'use strict';
try { if (Inst40 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<721,733,34>",(assertThrows)); Inst40++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (ReferenceError) != "undefined") {_RecordType("<777,791,36>",(ReferenceError)); Inst42++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst41 <= 1000 && typeof (notDefined) != "undefined") {_RecordType("<759,769,35>",(notDefined)); Inst41++; } } catch(e) {}
    return {notDefined};
  }, ReferenceError);
})();


try { if (Inst43 <= 1000 && typeof (TestLet) != "undefined") {_RecordType("<812,819,40>",(TestLet)); Inst43++; } } catch(e) {}
(function TestLet() {
  var let = 1;
  var object = {let};
try { if (Inst44 <= 1000 && typeof (object) != "undefined") {_RecordType("<845,851,42>",(object)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<863,875,43>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (object.let) != "undefined") {_RecordType("<879,889,43>",(object.let)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (object) != "undefined") {_RecordType("<879,885,43>",(object)); Inst47++; } } catch(e) {}
  assertEquals(1, object.let);
})();


try { if (Inst48 <= 1000 && typeof (TestYieldInFunction) != "undefined") {_RecordType("<910,929,47>",(TestYieldInFunction)); Inst48++; } } catch(e) {}
(function TestYieldInFunction() {
  var yield = 1;
  var object = {yield};
try { if (Inst49 <= 1000 && typeof (object) != "undefined") {_RecordType("<957,963,49>",(object)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<977,989,50>",(assertEquals)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (object.yield) != "undefined") {_RecordType("<993,1005,50>",(object.yield)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (object) != "undefined") {_RecordType("<993,999,50>",(object)); Inst52++; } } catch(e) {}
  assertEquals(1, object.yield);
})();


try { if (Inst53 <= 1000 && typeof (TestToString) != "undefined") {_RecordType("<1026,1038,54>",(TestToString)); Inst53++; } } catch(e) {}
(function TestToString() {
try { if (Inst54 <= 1000 && typeof (f) != "undefined") {_RecordType("<1054,1055,55>",(f)); Inst54++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<1069,1070,55>",(x)); Inst56++; } } catch(e) {}
  function f(x) { return {x}; }
try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<1056,1057,55>",(x)); Inst55++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1077,1089,56>",(assertEquals)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (f.toString) != "undefined") {_RecordType("<1123,1133,56>",(f.toString)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (f) != "undefined") {_RecordType("<1123,1124,56>",(f)); Inst59++; } } catch(e) {}
  assertEquals('function f(x) { return {x}; }', f.toString());
})();


try { if (Inst60 <= 1000 && typeof (TestProtoName) != "undefined") {_RecordType("<1156,1169,60>",(TestProtoName)); Inst60++; } } catch(e) {}
(function TestProtoName() {
  var __proto__ = 1;
try { if (Inst61 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<1180,1189,61>",(__proto__)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<1216,1225,63>",(__proto__)); Inst63++; } } catch(e) {}
  var object = {
    __proto__
  };
try { if (Inst62 <= 1000 && typeof (object) != "undefined") {_RecordType("<1201,1207,62>",(object)); Inst62++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1233,1245,65>",(assertEquals)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1246,1262,65>",(Object.prototype)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1246,1252,65>",(Object)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1264,1285,65>",(Object.getPrototypeOf)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1264,1270,65>",(Object)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (object) != "undefined") {_RecordType("<1286,1292,65>",(object)); Inst69++; } } catch(e) {}
  assertEquals(Object.prototype, Object.getPrototypeOf(object));
try { if (Inst70 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1298,1310,66>",(assertEquals)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (object.__proto__) != "undefined") {_RecordType("<1314,1330,66>",(object.__proto__)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (object) != "undefined") {_RecordType("<1314,1320,66>",(object)); Inst72++; } } catch(e) {}
  assertEquals(1, object.__proto__);
})();


try { if (Inst73 <= 1000 && typeof (TestProtoName2) != "undefined") {_RecordType("<1351,1365,70>",(TestProtoName2)); Inst73++; } } catch(e) {}
(function TestProtoName2() {
  var __proto__ = 1;
try { if (Inst74 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<1376,1385,71>",(__proto__)); Inst74++; } } catch(e) {}
  var p = {};
try { if (Inst75 <= 1000 && typeof (p) != "undefined") {_RecordType("<1397,1398,72>",(p)); Inst75++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (p) != "undefined") {_RecordType("<1437,1438,74>",(p)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<1444,1453,75>",(__proto__)); Inst78++; } } catch(e) {}
  var object = {
    __proto__: p,
    __proto__,
  };
try { if (Inst76 <= 1000 && typeof (object) != "undefined") {_RecordType("<1411,1417,73>",(object)); Inst76++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1462,1474,77>",(assertEquals)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (p) != "undefined") {_RecordType("<1475,1476,77>",(p)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1478,1499,77>",(Object.getPrototypeOf)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1478,1484,77>",(Object)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (object) != "undefined") {_RecordType("<1500,1506,77>",(object)); Inst83++; } } catch(e) {}
  assertEquals(p, Object.getPrototypeOf(object));
try { if (Inst84 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1512,1524,78>",(assertEquals)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (object.__proto__) != "undefined") {_RecordType("<1528,1544,78>",(object.__proto__)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (object) != "undefined") {_RecordType("<1528,1534,78>",(object)); Inst86++; } } catch(e) {}
  assertEquals(1, object.__proto__);
})();

