var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


try { if (Inst0 <= 1000 && typeof (ID) != "undefined") {_RecordType("<178,180,6>",(ID)); Inst0++; } } catch(e) {}
function ID(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<181,182,6>",(x)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<195,196,7>",(x)); Inst2++; } } catch(e) {}
  return x;
}


try { if (Inst3 <= 1000 && typeof (TestMethodComputedNameString) != "undefined") {_RecordType("<212,240,11>",(TestMethodComputedNameString)); Inst3++; } } catch(e) {}
(function TestMethodComputedNameString() {
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<266,267,13>",(a)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (c) != "undefined") {_RecordType("<318,319,15>",(c)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (ID) != "undefined") {_RecordType("<344,346,16>",(ID)); Inst7++; } } catch(e) {}
  var object = {
    a() { return 'A'},
    ['b']() { return 'B'; },
    c() { return 'C'; },
    [ID('d')]() { return 'D'; },
  };
try { if (Inst4 <= 1000 && typeof (object) != "undefined") {_RecordType("<251,257,12>",(object)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<379,391,18>",(assertEquals)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (object.a) != "undefined") {_RecordType("<397,405,18>",(object.a)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (object) != "undefined") {_RecordType("<397,403,18>",(object)); Inst10++; } } catch(e) {}
  assertEquals('A', object.a());
try { if (Inst11 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<412,424,19>",(assertEquals)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (object.b) != "undefined") {_RecordType("<430,438,19>",(object.b)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (object) != "undefined") {_RecordType("<430,436,19>",(object)); Inst13++; } } catch(e) {}
  assertEquals('B', object.b());
try { if (Inst14 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<445,457,20>",(assertEquals)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (object.c) != "undefined") {_RecordType("<463,471,20>",(object.c)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (object) != "undefined") {_RecordType("<463,469,20>",(object)); Inst16++; } } catch(e) {}
  assertEquals('C', object.c());
try { if (Inst17 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<478,490,21>",(assertEquals)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (object.d) != "undefined") {_RecordType("<496,504,21>",(object.d)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (object) != "undefined") {_RecordType("<496,502,21>",(object)); Inst19++; } } catch(e) {}
  assertEquals('D', object.d());
try { if (Inst20 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<511,528,22>",(assertArrayEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<551,562,22>",(Object.keys)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<551,557,22>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (object) != "undefined") {_RecordType("<563,569,22>",(object)); Inst23++; } } catch(e) {}
  assertArrayEquals(['a', 'b', 'c', 'd'], Object.keys(object));
})();


try { if (Inst24 <= 1000 && typeof (TestMethodComputedNameNumber) != "undefined") {_RecordType("<591,619,26>",(TestMethodComputedNameNumber)); Inst24++; } } catch(e) {}
(function TestMethodComputedNameNumber() {
try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<645,646,28>",(a)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (c) != "undefined") {_RecordType("<697,698,30>",(c)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ID) != "undefined") {_RecordType("<723,725,31>",(ID)); Inst28++; } } catch(e) {}
  var object = {
    a() { return 'A'; },
    [1]() { return 'B'; },
    c() { return 'C'; },
    [ID(2)]() { return 'D'; },
  };
try { if (Inst25 <= 1000 && typeof (object) != "undefined") {_RecordType("<630,636,27>",(object)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<756,768,33>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (object.a) != "undefined") {_RecordType("<774,782,33>",(object.a)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<774,780,33>",(object)); Inst31++; } } catch(e) {}
  assertEquals('A', object.a());
try { if (Inst32 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<789,801,34>",(assertEquals)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (object[1]) != "undefined") {_RecordType("<807,816,34>",(object[1])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (object) != "undefined") {_RecordType("<807,813,34>",(object)); Inst34++; } } catch(e) {}
  assertEquals('B', object[1]());
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<823,835,35>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (object.c) != "undefined") {_RecordType("<841,849,35>",(object.c)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (object) != "undefined") {_RecordType("<841,847,35>",(object)); Inst37++; } } catch(e) {}
  assertEquals('C', object.c());
try { if (Inst38 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<856,868,36>",(assertEquals)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (object[2]) != "undefined") {_RecordType("<874,883,36>",(object[2])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (object) != "undefined") {_RecordType("<874,880,36>",(object)); Inst40++; } } catch(e) {}
  assertEquals('D', object[2]());
  // Array indexes first.
try { if (Inst41 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<916,933,38>",(assertArrayEquals)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<956,967,38>",(Object.keys)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<956,962,38>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (object) != "undefined") {_RecordType("<968,974,38>",(object)); Inst44++; } } catch(e) {}
  assertArrayEquals(['1', '2', 'a', 'c'], Object.keys(object));
})();


try { if (Inst45 <= 1000 && typeof (TestMethodComputedNameSymbol) != "undefined") {_RecordType("<996,1024,42>",(TestMethodComputedNameSymbol)); Inst45++; } } catch(e) {}
(function TestMethodComputedNameSymbol() {
try { if (Inst47 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1042,1048,43>",(Symbol)); Inst47++; } } catch(e) {}
  var sym1 = Symbol();
try { if (Inst46 <= 1000 && typeof (sym1) != "undefined") {_RecordType("<1035,1039,43>",(sym1)); Inst46++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1065,1071,44>",(Symbol)); Inst49++; } } catch(e) {}
  var sym2 = Symbol();
try { if (Inst48 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<1058,1062,44>",(sym2)); Inst48++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<1096,1097,46>",(a)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (sym1) != "undefined") {_RecordType("<1122,1126,47>",(sym1)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (c) != "undefined") {_RecordType("<1151,1152,48>",(c)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (ID) != "undefined") {_RecordType("<1177,1179,49>",(ID)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<1180,1184,49>",(sym2)); Inst55++; } } catch(e) {}
  var object = {
    a() { return 'A'; },
    [sym1]() { return 'B'; },
    c() { return 'C'; },
    [ID(sym2)]() { return 'D'; },
  };
try { if (Inst50 <= 1000 && typeof (object) != "undefined") {_RecordType("<1081,1087,45>",(object)); Inst50++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1213,1225,51>",(assertEquals)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (object.a) != "undefined") {_RecordType("<1231,1239,51>",(object.a)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (object) != "undefined") {_RecordType("<1231,1237,51>",(object)); Inst58++; } } catch(e) {}
  assertEquals('A', object.a());
try { if (Inst59 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1246,1258,52>",(assertEquals)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (object[sym1]) != "undefined") {_RecordType("<1264,1276,52>",(object[sym1])); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (object) != "undefined") {_RecordType("<1264,1270,52>",(object)); Inst61++; } } catch(e) {}
  assertEquals('B', object[sym1]());
try { if (Inst62 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1283,1295,53>",(assertEquals)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (object.c) != "undefined") {_RecordType("<1301,1309,53>",(object.c)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (object) != "undefined") {_RecordType("<1301,1307,53>",(object)); Inst64++; } } catch(e) {}
  assertEquals('C', object.c());
try { if (Inst65 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1316,1328,54>",(assertEquals)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (object[sym2]) != "undefined") {_RecordType("<1334,1346,54>",(object[sym2])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (object) != "undefined") {_RecordType("<1334,1340,54>",(object)); Inst67++; } } catch(e) {}
  assertEquals('D', object[sym2]());
try { if (Inst68 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1353,1370,55>",(assertArrayEquals)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<1383,1394,55>",(Object.keys)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1383,1389,55>",(Object)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (object) != "undefined") {_RecordType("<1395,1401,55>",(object)); Inst71++; } } catch(e) {}
  assertArrayEquals(['a', 'c'], Object.keys(object));
try { if (Inst72 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1407,1424,56>",(assertArrayEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (sym1) != "undefined") {_RecordType("<1426,1430,56>",(sym1)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (sym2) != "undefined") {_RecordType("<1432,1436,56>",(sym2)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Object.getOwnPropertySymbols) != "undefined") {_RecordType("<1439,1467,56>",(Object.getOwnPropertySymbols)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1439,1445,56>",(Object)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (object) != "undefined") {_RecordType("<1468,1474,56>",(object)); Inst77++; } } catch(e) {}
  assertArrayEquals([sym1, sym2], Object.getOwnPropertySymbols(object));
})();


try { if (Inst78 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1495,1515,60>",(assertIteratorResult)); Inst78++; } } catch(e) {}
function assertIteratorResult(value, done, result) {
try { if (Inst79 <= 1000 && typeof (value) != "undefined") {_RecordType("<1516,1521,60>",(value)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (done) != "undefined") {_RecordType("<1523,1527,60>",(done)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (result) != "undefined") {_RecordType("<1529,1535,60>",(result)); Inst81++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1541,1553,61>",(assertEquals)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (value) != "undefined") {_RecordType("<1563,1568,61>",(value)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (done) != "undefined") {_RecordType("<1576,1580,61>",(done)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (result) != "undefined") {_RecordType("<1583,1589,61>",(result)); Inst85++; } } catch(e) {}
  assertEquals({ value: value, done: done}, result);
}


try { if (Inst86 <= 1000 && typeof (TestGeneratorComputedName) != "undefined") {_RecordType("<1606,1631,65>",(TestGeneratorComputedName)); Inst86++; } } catch(e) {}
(function TestGeneratorComputedName() {
  var object = {
    *['a']() {
      yield 1;
      yield 2;
    }
  };
try { if (Inst87 <= 1000 && typeof (object) != "undefined") {_RecordType("<1642,1648,66>",(object)); Inst87++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (object.a) != "undefined") {_RecordType("<1722,1730,72>",(object.a)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (object) != "undefined") {_RecordType("<1722,1728,72>",(object)); Inst90++; } } catch(e) {}
  var iter = object.a();
try { if (Inst88 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1715,1719,72>",(iter)); Inst88++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1736,1756,73>",(assertIteratorResult)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<1767,1776,73>",(iter.next)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1767,1771,73>",(iter)); Inst93++; } } catch(e) {}
  assertIteratorResult(1, false, iter.next());
try { if (Inst94 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1783,1803,74>",(assertIteratorResult)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<1814,1823,74>",(iter.next)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1814,1818,74>",(iter)); Inst96++; } } catch(e) {}
  assertIteratorResult(2, false, iter.next());
try { if (Inst97 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1830,1850,75>",(assertIteratorResult)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1851,1860,75>",(undefined)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (iter.next) != "undefined") {_RecordType("<1868,1877,75>",(iter.next)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (iter) != "undefined") {_RecordType("<1868,1872,75>",(iter)); Inst100++; } } catch(e) {}
  assertIteratorResult(undefined, true, iter.next());
try { if (Inst101 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1884,1901,76>",(assertArrayEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<1909,1920,76>",(Object.keys)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1909,1915,76>",(Object)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (object) != "undefined") {_RecordType("<1921,1927,76>",(object)); Inst104++; } } catch(e) {}
  assertArrayEquals(['a'], Object.keys(object));
})();


try { if (Inst105 <= 1000 && typeof (TestToNameSideEffects) != "undefined") {_RecordType("<1949,1970,80>",(TestToNameSideEffects)); Inst105++; } } catch(e) {}
(function TestToNameSideEffects() {
  var counter = 0;
try { if (Inst106 <= 1000 && typeof (counter) != "undefined") {_RecordType("<1981,1988,81>",(counter)); Inst106++; } } catch(e) {}
  var key1 = {
    toString: function() {
try { if (Inst108 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2042,2054,84>",(assertEquals)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (counter) != "undefined") {_RecordType("<2058,2065,84>",(counter)); Inst109++; } } catch(e) {}
      assertEquals(0, counter++);
      return 'b';
    }
  };
try { if (Inst107 <= 1000 && typeof (key1) != "undefined") {_RecordType("<2000,2004,82>",(key1)); Inst107++; } } catch(e) {}
  var key2 = {
    toString: function() {
try { if (Inst111 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2147,2159,90>",(assertEquals)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (counter) != "undefined") {_RecordType("<2163,2170,90>",(counter)); Inst112++; } } catch(e) {}
      assertEquals(1, counter++);
      return 'd';
    }
  };
try { if (Inst110 <= 1000 && typeof (key2) != "undefined") {_RecordType("<2105,2109,88>",(key2)); Inst110++; } } catch(e) {}
try { if (Inst114 <= 1000 && typeof (a) != "undefined") {_RecordType("<2225,2226,95>",(a)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (key1) != "undefined") {_RecordType("<2251,2255,96>",(key1)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (c) != "undefined") {_RecordType("<2280,2281,97>",(c)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (key2) != "undefined") {_RecordType("<2306,2310,98>",(key2)); Inst117++; } } catch(e) {}
  var object = {
    a() { return 'A'; },
    [key1]() { return 'B'; },
    c() { return 'C'; },
    [key2]() { return 'D'; },
  };
try { if (Inst113 <= 1000 && typeof (object) != "undefined") {_RecordType("<2210,2216,94>",(object)); Inst113++; } } catch(e) {}
try { if (Inst118 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2338,2350,100>",(assertEquals)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (counter) != "undefined") {_RecordType("<2354,2361,100>",(counter)); Inst119++; } } catch(e) {}
  assertEquals(2, counter);
try { if (Inst120 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2366,2378,101>",(assertEquals)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (object.a) != "undefined") {_RecordType("<2384,2392,101>",(object.a)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (object) != "undefined") {_RecordType("<2384,2390,101>",(object)); Inst122++; } } catch(e) {}
  assertEquals('A', object.a());
try { if (Inst123 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2399,2411,102>",(assertEquals)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (object.b) != "undefined") {_RecordType("<2417,2425,102>",(object.b)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (object) != "undefined") {_RecordType("<2417,2423,102>",(object)); Inst125++; } } catch(e) {}
  assertEquals('B', object.b());
try { if (Inst126 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2432,2444,103>",(assertEquals)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (object.c) != "undefined") {_RecordType("<2450,2458,103>",(object.c)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (object) != "undefined") {_RecordType("<2450,2456,103>",(object)); Inst128++; } } catch(e) {}
  assertEquals('C', object.c());
try { if (Inst129 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2465,2477,104>",(assertEquals)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (object.d) != "undefined") {_RecordType("<2483,2491,104>",(object.d)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (object) != "undefined") {_RecordType("<2483,2489,104>",(object)); Inst131++; } } catch(e) {}
  assertEquals('D', object.d());
try { if (Inst132 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2498,2515,105>",(assertArrayEquals)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<2538,2549,105>",(Object.keys)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2538,2544,105>",(Object)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (object) != "undefined") {_RecordType("<2550,2556,105>",(object)); Inst135++; } } catch(e) {}
  assertArrayEquals(['a', 'b', 'c', 'd'], Object.keys(object));
})();


try { if (Inst136 <= 1000 && typeof (TestDuplicateKeys) != "undefined") {_RecordType("<2578,2595,109>",(TestDuplicateKeys)); Inst136++; } } catch(e) {}
(function TestDuplicateKeys() {
  'use strict';
  // ES5 does not allow duplicate keys.
  // ES6 does but we haven't changed our code yet.

try { if (Inst138 <= 1000 && typeof (a) != "undefined") {_RecordType("<2729,2730,115>",(a)); Inst138++; } } catch(e) {}
  var object = {
    a() { return 1; },
    ['a']() { return 2; },
  };
try { if (Inst137 <= 1000 && typeof (object) != "undefined") {_RecordType("<2714,2720,114>",(object)); Inst137++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2782,2794,118>",(assertEquals)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (object.a) != "undefined") {_RecordType("<2798,2806,118>",(object.a)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (object) != "undefined") {_RecordType("<2798,2804,118>",(object)); Inst141++; } } catch(e) {}
  assertEquals(2, object.a());
})();

