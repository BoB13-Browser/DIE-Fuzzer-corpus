var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Array's toString should call the object's own join method, if one exists and
// is callable. Otherwise, just use the original Object.toString function.

try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<357,367,9>",(Uint8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<371,380,10>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<384,395,11>",(Uint16Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<399,409,12>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<413,424,13>",(Uint32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<428,438,14>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<442,459,15>",(Uint8ClampedArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<463,475,16>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<479,491,17>",(Float64Array)); Inst9++; } } catch(e) {}
var typedArrayConstructors = [
  Uint8Array,
  Int8Array,
  Uint16Array,
  Int16Array,
  Uint32Array,
  Int32Array,
  Uint8ClampedArray,
  Float32Array,
  Float64Array
];
try { if (Inst0 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<328,350,8>",(typedArrayConstructors)); Inst0++; } } catch(e) {}

for (var constructor of typedArrayConstructors) {
try { if (Inst10 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<505,516,20>",(constructor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<520,542,20>",(typedArrayConstructors)); Inst11++; } } catch(e) {}
  var success = "[test success]";
try { if (Inst12 <= 1000 && typeof (success) != "undefined") {_RecordType("<552,559,21>",(success)); Inst12++; } } catch(e) {}
  var expectedThis;
try { if (Inst13 <= 1000 && typeof (expectedThis) != "undefined") {_RecordType("<586,598,22>",(expectedThis)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (testJoin) != "undefined") {_RecordType("<611,619,23>",(testJoin)); Inst14++; } } catch(e) {}
  function testJoin() {
try { if (Inst15 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<628,640,24>",(assertEquals)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<644,660,24>",(arguments.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<644,653,24>",(arguments)); Inst17++; } } catch(e) {}
    assertEquals(0, arguments.length);
try { if (Inst18 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<667,677,25>",(assertSame)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (expectedThis) != "undefined") {_RecordType("<678,690,25>",(expectedThis)); Inst19++; } } catch(e) {}
    assertSame(expectedThis, this);
try { if (Inst20 <= 1000 && typeof (success) != "undefined") {_RecordType("<710,717,26>",(success)); Inst20++; } } catch(e) {}
    return success;
  }


  // On an Array object.

  // Default case.
try { if (Inst22 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<785,796,33>",(constructor)); Inst22++; } } catch(e) {}
  var a1 = new constructor([1, 2, 3]);
try { if (Inst21 <= 1000 && typeof (a1) != "undefined") {_RecordType("<776,778,33>",(a1)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<811,823,34>",(assertEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (a1.toString) != "undefined") {_RecordType("<833,844,34>",(a1.toString)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a1) != "undefined") {_RecordType("<833,835,34>",(a1)); Inst25++; } } catch(e) {}
  assertEquals("1,2,3", a1.toString());
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<851,863,35>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a1.join) != "undefined") {_RecordType("<873,880,35>",(a1.join)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (a1) != "undefined") {_RecordType("<873,875,35>",(a1)); Inst28++; } } catch(e) {}
  assertEquals("1,2,3", a1.join());
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<887,899,36>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a1.toLocaleString) != "undefined") {_RecordType("<909,926,36>",(a1.toLocaleString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a1) != "undefined") {_RecordType("<909,911,36>",(a1)); Inst31++; } } catch(e) {}
  assertEquals("1,2,3", a1.toLocaleString());

  // Non-standard "join" function is called correctly.
try { if (Inst33 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1002,1013,39>",(constructor)); Inst33++; } } catch(e) {}
  var a2 = new constructor([1, 2, 3]);
try { if (Inst32 <= 1000 && typeof (a2) != "undefined") {_RecordType("<993,995,39>",(a2)); Inst32++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (testJoin) != "undefined") {_RecordType("<1038,1046,40>",(testJoin)); Inst36++; } } catch(e) {}
  a2.join = testJoin;
try { if (Inst34 <= 1000 && typeof (a2.join) != "undefined") {_RecordType("<1028,1035,40>",(a2.join)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1028,1030,40>",(a2)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1065,1067,41>",(a2)); Inst38++; } } catch(e) {}
  expectedThis = a2;
try { if (Inst37 <= 1000 && typeof (expectedThis) != "undefined") {_RecordType("<1050,1062,41>",(expectedThis)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1071,1083,42>",(assertEquals)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (success) != "undefined") {_RecordType("<1084,1091,42>",(success)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a2.toString) != "undefined") {_RecordType("<1093,1104,42>",(a2.toString)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1093,1095,42>",(a2)); Inst42++; } } catch(e) {}
  assertEquals(success, a2.toString());
try { if (Inst43 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1111,1123,43>",(assertEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (success) != "undefined") {_RecordType("<1124,1131,43>",(success)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a2.join) != "undefined") {_RecordType("<1133,1140,43>",(a2.join)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1133,1135,43>",(a2)); Inst46++; } } catch(e) {}
  assertEquals(success, a2.join());
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1147,1159,44>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a2.toLocaleString) != "undefined") {_RecordType("<1169,1186,44>",(a2.toLocaleString)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (a2) != "undefined") {_RecordType("<1169,1171,44>",(a2)); Inst49++; } } catch(e) {}
  assertEquals("1,2,3", a2.toLocaleString());

  // Non-callable join function is ignored and Object.prototype.toString is
  // used instead.
try { if (Inst51 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1302,1313,48>",(constructor)); Inst51++; } } catch(e) {}
  var a3 = new constructor([1, 2, 3]);
try { if (Inst50 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1293,1295,48>",(a3)); Inst50++; } } catch(e) {}
  a3.join = "not callable";
try { if (Inst52 <= 1000 && typeof (a3.join) != "undefined") {_RecordType("<1328,1335,49>",(a3.join)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1328,1330,49>",(a3)); Inst53++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1356,1368,50>",(assertEquals)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a3.toString().search) != "undefined") {_RecordType("<1372,1392,50>",(a3.toString().search)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a3.toString) != "undefined") {_RecordType("<1372,1383,50>",(a3.toString)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1372,1374,50>",(a3)); Inst57++; } } catch(e) {}
  assertEquals(0, a3.toString().search(/\[object .+Array\]/));

  // Non-existing join function is treated same as non-callable.
try { if (Inst59 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1498,1509,53>",(constructor)); Inst59++; } } catch(e) {}
  var a4 = new constructor([1, 2, 3]);
try { if (Inst58 <= 1000 && typeof (a4) != "undefined") {_RecordType("<1489,1491,53>",(a4)); Inst58++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (constructor.prototype.toString) != "undefined") {_RecordType("<1551,1581,54>",(constructor.prototype.toString)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1551,1572,54>",(constructor.prototype)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1551,1562,54>",(constructor)); Inst64++; } } catch(e) {}
  a4.__proto__ = { toString: constructor.prototype.toString };
try { if (Inst60 <= 1000 && typeof (a4.__proto__) != "undefined") {_RecordType("<1524,1536,54>",(a4.__proto__)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a4) != "undefined") {_RecordType("<1524,1526,54>",(a4)); Inst61++; } } catch(e) {}
  // No join on Array.
try { if (Inst65 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1610,1622,56>",(assertEquals)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (a3.toString().search) != "undefined") {_RecordType("<1626,1646,56>",(a3.toString().search)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (a3.toString) != "undefined") {_RecordType("<1626,1637,56>",(a3.toString)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a3) != "undefined") {_RecordType("<1626,1628,56>",(a3)); Inst68++; } } catch(e) {}
  assertEquals(0, a3.toString().search(/\[object .+Array\]/));


  // On a non-Array object, throws.
try { if (Inst70 <= 1000 && typeof (constructor.prototype.toString) != "undefined") {_RecordType("<1772,1802,61>",(constructor.prototype.toString)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1772,1793,61>",(constructor.prototype)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1772,1783,61>",(constructor)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (constructor.prototype.join) != "undefined") {_RecordType("<1822,1848,62>",(constructor.prototype.join)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1822,1843,62>",(constructor.prototype)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1822,1833,62>",(constructor)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (constructor.prototype.toLocaleString) != "undefined") {_RecordType("<1878,1914,63>",(constructor.prototype.toLocaleString)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1878,1899,63>",(constructor.prototype)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1878,1889,63>",(constructor)); Inst78++; } } catch(e) {}
  var o1 = {length: 3, 0: 1, 1: 2, 2: 3,
            toString: constructor.prototype.toString,
            join: constructor.prototype.join,
            toLocaleString: constructor.prototype.toLocaleString};
try { if (Inst69 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1715,1717,60>",(o1)); Inst69++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1919,1931,64>",(assertThrows)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (o1.join) != "undefined") {_RecordType("<1945,1952,64>",(o1.join)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1945,1947,64>",(o1)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1958,1967,64>",(TypeError)); Inst82++; } } catch(e) {}
  assertThrows(function() { o1.join() }, TypeError);
try { if (Inst83 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1972,1984,65>",(assertThrows)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (o1.toString) != "undefined") {_RecordType("<1998,2009,65>",(o1.toString)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (o1) != "undefined") {_RecordType("<1998,2000,65>",(o1)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2015,2024,65>",(TypeError)); Inst86++; } } catch(e) {}
  assertThrows(function() { o1.toString() }, TypeError);
try { if (Inst87 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2029,2041,66>",(assertThrows)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (o1.toLocaleString) != "undefined") {_RecordType("<2055,2072,66>",(o1.toLocaleString)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2055,2057,66>",(o1)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2078,2087,66>",(TypeError)); Inst90++; } } catch(e) {}
  assertThrows(function() { o1.toLocaleString() }, TypeError);
  // toString is OK if join not from here:
try { if (Inst93 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<2145,2165,68>",(Array.prototype.join)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2145,2160,68>",(Array.prototype)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2145,2150,68>",(Array)); Inst95++; } } catch(e) {}
  o1.join = Array.prototype.join;
try { if (Inst91 <= 1000 && typeof (o1.join) != "undefined") {_RecordType("<2135,2142,68>",(o1.join)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2135,2137,68>",(o1)); Inst92++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2169,2181,69>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (o1.join) != "undefined") {_RecordType("<2191,2198,69>",(o1.join)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2191,2193,69>",(o1)); Inst98++; } } catch(e) {}
  assertEquals("1,2,3", o1.join());
try { if (Inst99 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2205,2217,70>",(assertEquals)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (o1.toString) != "undefined") {_RecordType("<2227,2238,70>",(o1.toString)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2227,2229,70>",(o1)); Inst101++; } } catch(e) {}
  assertEquals("1,2,3", o1.toString());
try { if (Inst102 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2245,2257,71>",(assertThrows)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (o1.toLocaleString) != "undefined") {_RecordType("<2271,2288,71>",(o1.toLocaleString)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2271,2273,71>",(o1)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2294,2303,71>",(TypeError)); Inst105++; } } catch(e) {}
  assertThrows(function() { o1.toLocaleString() }, TypeError);
  // TODO(littledan): Use the same function for TypedArray as for
  // Array, as the spec says (but Firefox doesn't do either).
  // Currently, using the same method leads to a bootstrap failure.
  // assertEquals(o1.toString, Array.prototype.toString);

  // Redefining length does not change result
try { if (Inst107 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2622,2633,78>",(constructor)); Inst107++; } } catch(e) {}
  var a5 = new constructor([1, 2, 3])
try { if (Inst106 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2613,2615,78>",(a5)); Inst106++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2647,2668,79>",(Object.defineProperty)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2647,2653,79>",(Object)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2669,2671,79>",(a5)); Inst110++; } } catch(e) {}
  Object.defineProperty(a5, 'length', { value: 2 });
try { if (Inst111 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2700,2712,80>",(assertEquals)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (a5.join) != "undefined") {_RecordType("<2722,2729,80>",(a5.join)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2722,2724,80>",(a5)); Inst113++; } } catch(e) {}
  assertEquals("1,2,3", a5.join());
try { if (Inst114 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2736,2748,81>",(assertEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (a5.toString) != "undefined") {_RecordType("<2758,2769,81>",(a5.toString)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2758,2760,81>",(a5)); Inst116++; } } catch(e) {}
  assertEquals("1,2,3", a5.toString());
try { if (Inst117 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2776,2788,82>",(assertEquals)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (a5.toLocaleString) != "undefined") {_RecordType("<2798,2815,82>",(a5.toLocaleString)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2798,2800,82>",(a5)); Inst119++; } } catch(e) {}
  assertEquals("1,2,3", a5.toLocaleString());
try { if (Inst120 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2822,2834,83>",(assertEquals)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Array.prototype.join.call) != "undefined") {_RecordType("<2842,2867,83>",(Array.prototype.join.call)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Array.prototype.join) != "undefined") {_RecordType("<2842,2862,83>",(Array.prototype.join)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2842,2857,83>",(Array.prototype)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2842,2847,83>",(Array)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2868,2870,83>",(a5)); Inst125++; } } catch(e) {}
  assertEquals("1,2", Array.prototype.join.call(a5));
try { if (Inst126 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2876,2888,84>",(assertEquals)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Array.prototype.toString.call) != "undefined") {_RecordType("<2898,2927,84>",(Array.prototype.toString.call)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Array.prototype.toString) != "undefined") {_RecordType("<2898,2922,84>",(Array.prototype.toString)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2898,2913,84>",(Array.prototype)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2898,2903,84>",(Array)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2928,2930,84>",(a5)); Inst131++; } } catch(e) {}
  assertEquals("1,2,3", Array.prototype.toString.call(a5));
try { if (Inst132 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2936,2948,85>",(assertEquals)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Array.prototype.toLocaleString.call) != "undefined") {_RecordType("<2956,2991,85>",(Array.prototype.toLocaleString.call)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Array.prototype.toLocaleString) != "undefined") {_RecordType("<2956,2986,85>",(Array.prototype.toLocaleString)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2956,2971,85>",(Array.prototype)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2956,2961,85>",(Array)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (a5) != "undefined") {_RecordType("<2992,2994,85>",(a5)); Inst137++; } } catch(e) {}
  assertEquals("1,2", Array.prototype.toLocaleString.call(a5));
}

