var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Based on Mozilla Array.of() tests at http://dxr.mozilla.org/mozilla-central/source/js/src/jit-test/tests/collections

'use strict';

try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<337,347,10>",(Uint8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<351,360,11>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<364,375,12>",(Uint16Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<379,389,13>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<393,404,14>",(Uint32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<408,418,15>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<422,439,16>",(Uint8ClampedArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<443,455,17>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<459,471,18>",(Float64Array)); Inst9++; } } catch(e) {}
var typedArrayConstructors = [
  Uint8Array,
  Int8Array,
  Uint16Array,
  Int16Array,
  Uint32Array,
  Int32Array,
  Uint8ClampedArray,
  Float32Array,
  Float64Array];
try { if (Inst0 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<308,330,9>",(typedArrayConstructors)); Inst0++; } } catch(e) {}


try { if (Inst10 <= 1000 && typeof (TestTypedArrayOf) != "undefined") {_RecordType("<485,501,21>",(TestTypedArrayOf)); Inst10++; } } catch(e) {}
function TestTypedArrayOf(constructor) {
try { if (Inst11 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<502,513,21>",(constructor)); Inst11++; } } catch(e) {}
  // %TypedArray%.of basics.
try { if (Inst13 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<556,570,23>",(constructor.of)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<556,567,23>",(constructor)); Inst14++; } } catch(e) {}
  var a = constructor.of();
try { if (Inst12 <= 1000 && typeof (a) != "undefined") {_RecordType("<552,553,23>",(a)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<576,588,24>",(assertEquals)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<592,600,24>",(a.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<592,593,24>",(a)); Inst17++; } } catch(e) {}
  assertEquals(0, a.length);
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<605,617,25>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<618,639,25>",(constructor.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<618,629,25>",(constructor)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<641,662,25>",(Object.getPrototypeOf)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<641,647,25>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (a) != "undefined") {_RecordType("<663,664,25>",(a)); Inst23++; } } catch(e) {}
  assertEquals(constructor.prototype, Object.getPrototypeOf(a));
try { if (Inst24 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<670,682,26>",(assertEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Array.isArray) != "undefined") {_RecordType("<690,703,26>",(Array.isArray)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Array) != "undefined") {_RecordType("<690,695,26>",(Array)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<704,705,26>",(a)); Inst27++; } } catch(e) {}
  assertEquals(false, Array.isArray(a));

  // Items are coerced to numerical values.
try { if (Inst29 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<760,774,29>",(constructor.of)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<760,771,29>",(constructor)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<775,784,29>",(undefined)); Inst31++; } } catch(e) {}
  a = constructor.of(undefined, null, [], true, false, 3.14);
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<756,757,29>",(a)); Inst28++; } } catch(e) {}

  // For typed arrays of floating point values, values are not rounded.
try { if (Inst32 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<895,906,32>",(constructor)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<911,923,32>",(Float32Array)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<927,938,32>",(constructor)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<943,955,32>",(Float64Array)); Inst35++; } } catch(e) {}
  if (constructor === Float32Array || constructor === Float64Array) {
try { if (Inst36 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<963,975,33>",(assertEquals)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<976,979,33>",(NaN)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<981,985,33>",(a[0])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<981,982,33>",(a)); Inst39++; } } catch(e) {}
    assertEquals(NaN, a[0]);
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<992,1004,34>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<1008,1012,34>",(a[1])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<1008,1009,34>",(a)); Inst42++; } } catch(e) {}
    assertEquals(0, a[1]);
try { if (Inst43 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1019,1031,35>",(assertEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<1035,1039,35>",(a[2])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<1035,1036,35>",(a)); Inst45++; } } catch(e) {}
    assertEquals(0, a[2]);
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1046,1058,36>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<1062,1066,36>",(a[3])); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<1062,1063,36>",(a)); Inst48++; } } catch(e) {}
    assertEquals(1, a[3]);
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1073,1085,37>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a[4]) != "undefined") {_RecordType("<1089,1093,37>",(a[4])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<1089,1090,37>",(a)); Inst51++; } } catch(e) {}
    assertEquals(0, a[4]);
try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1100,1112,38>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1119,1127,38>",(Math.abs)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1119,1123,38>",(Math)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<1128,1132,38>",(a[5])); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (a) != "undefined") {_RecordType("<1128,1129,38>",(a)); Inst56++; } } catch(e) {}
    assertEquals(true, Math.abs(a[5] - 3.14) < 1e-6);
  } else {
try { if (Inst57 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1165,1177,40>",(assertEquals)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<1181,1185,40>",(a[0])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (a) != "undefined") {_RecordType("<1181,1182,40>",(a)); Inst59++; } } catch(e) {}
    assertEquals(0, a[0]);
try { if (Inst60 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1192,1204,41>",(assertEquals)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<1208,1212,41>",(a[1])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (a) != "undefined") {_RecordType("<1208,1209,41>",(a)); Inst62++; } } catch(e) {}
    assertEquals(0, a[1]);
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1219,1231,42>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<1235,1239,42>",(a[2])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<1235,1236,42>",(a)); Inst65++; } } catch(e) {}
    assertEquals(0, a[2]);
try { if (Inst66 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1246,1258,43>",(assertEquals)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (a[3]) != "undefined") {_RecordType("<1262,1266,43>",(a[3])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<1262,1263,43>",(a)); Inst68++; } } catch(e) {}
    assertEquals(1, a[3]);
try { if (Inst69 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1273,1285,44>",(assertEquals)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (a[4]) != "undefined") {_RecordType("<1289,1293,44>",(a[4])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a) != "undefined") {_RecordType("<1289,1290,44>",(a)); Inst71++; } } catch(e) {}
    assertEquals(0, a[4]);
try { if (Inst72 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1300,1312,45>",(assertEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (a[5]) != "undefined") {_RecordType("<1316,1320,45>",(a[5])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (a) != "undefined") {_RecordType("<1316,1317,45>",(a)); Inst74++; } } catch(e) {}
    assertEquals(3, a[5]);
  }

  var aux = [];
try { if (Inst75 <= 1000 && typeof (aux) != "undefined") {_RecordType("<1334,1337,48>",(aux)); Inst75++; } } catch(e) {}
  for (var i = 0; i < 100; i++)
try { if (Inst81 <= 1000 && typeof (i) != "undefined") {_RecordType("<1389,1390,50>",(i)); Inst81++; } } catch(e) {}
    aux[i] = i;
try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<1355,1356,49>",(i)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (i) != "undefined") {_RecordType("<1362,1363,49>",(i)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (i) != "undefined") {_RecordType("<1371,1372,49>",(i)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (aux[i]) != "undefined") {_RecordType("<1380,1386,50>",(aux[i])); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (aux) != "undefined") {_RecordType("<1380,1383,50>",(aux)); Inst80++; } } catch(e) {}

try { if (Inst83 <= 1000 && typeof (constructor.of.apply) != "undefined") {_RecordType("<1399,1419,52>",(constructor.of.apply)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<1399,1413,52>",(constructor.of)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1399,1410,52>",(constructor)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1420,1431,52>",(constructor)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (aux) != "undefined") {_RecordType("<1433,1436,52>",(aux)); Inst87++; } } catch(e) {}
  a = constructor.of.apply(constructor, aux);
try { if (Inst82 <= 1000 && typeof (a) != "undefined") {_RecordType("<1395,1396,52>",(a)); Inst82++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1441,1453,53>",(assertEquals)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (aux.length) != "undefined") {_RecordType("<1454,1464,53>",(aux.length)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (aux) != "undefined") {_RecordType("<1454,1457,53>",(aux)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1466,1474,53>",(a.length)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (a) != "undefined") {_RecordType("<1466,1467,53>",(a)); Inst92++; } } catch(e) {}
  assertEquals(aux.length, a.length);
try { if (Inst93 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1479,1496,54>",(assertArrayEquals)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (aux) != "undefined") {_RecordType("<1497,1500,54>",(aux)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (a) != "undefined") {_RecordType("<1502,1503,54>",(a)); Inst95++; } } catch(e) {}
  assertArrayEquals(aux, a);

  // %TypedArray%.of can be called on subclasses of TypedArrays
  var hits = 0;
try { if (Inst96 <= 1000 && typeof (hits) != "undefined") {_RecordType("<1577,1581,57>",(hits)); Inst96++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1607,1618,58>",(constructor)); Inst98++; } } catch(e) {}
  class Bag extends constructor {
    constructor(length) {
try { if (Inst99 <= 1000 && typeof (length) != "undefined") {_RecordType("<1637,1643,59>",(length)); Inst99++; } } catch(e) {}
try { if (Inst100 <= 1000 && typeof (length) != "undefined") {_RecordType("<1659,1665,60>",(length)); Inst100++; } } catch(e) {}
      super(length);
try { if (Inst101 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1674,1686,61>",(assertEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<1687,1703,61>",(arguments.length)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<1687,1696,61>",(arguments)); Inst103++; } } catch(e) {}
      assertEquals(arguments.length, 1);
try { if (Inst104 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1715,1727,62>",(assertEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (length) != "undefined") {_RecordType("<1728,1734,62>",(length)); Inst105++; } } catch(e) {}
      assertEquals(length, 2);
try { if (Inst106 <= 1000 && typeof (hits) != "undefined") {_RecordType("<1746,1750,63>",(hits)); Inst106++; } } catch(e) {}
      hits++;
    }
  }
try { if (Inst97 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<1595,1598,58>",(Bag)); Inst97++; } } catch(e) {}

  hits = 0;
try { if (Inst107 <= 1000 && typeof (hits) != "undefined") {_RecordType("<1767,1771,67>",(hits)); Inst107++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (Bag.of) != "undefined") {_RecordType("<1783,1789,68>",(Bag.of)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<1783,1786,68>",(Bag)); Inst110++; } } catch(e) {}
  a = Bag.of(5, 6);
try { if (Inst108 <= 1000 && typeof (a) != "undefined") {_RecordType("<1779,1780,68>",(a)); Inst108++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1799,1811,69>",(assertEquals)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (hits) != "undefined") {_RecordType("<1815,1819,69>",(hits)); Inst112++; } } catch(e) {}
  assertEquals(1, hits);
try { if (Inst113 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1824,1836,70>",(assertEquals)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<1840,1848,70>",(a.length)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (a) != "undefined") {_RecordType("<1840,1841,70>",(a)); Inst115++; } } catch(e) {}
  assertEquals(2, a.length);
try { if (Inst116 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1853,1870,71>",(assertArrayEquals)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (a) != "undefined") {_RecordType("<1879,1880,71>",(a)); Inst117++; } } catch(e) {}
  assertArrayEquals([5, 6], a);
try { if (Inst118 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1885,1897,72>",(assertEquals)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Bag.prototype) != "undefined") {_RecordType("<1898,1911,72>",(Bag.prototype)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<1898,1901,72>",(Bag)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<1913,1924,72>",(a.__proto__)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (a) != "undefined") {_RecordType("<1913,1914,72>",(a)); Inst122++; } } catch(e) {}
  assertEquals(Bag.prototype, a.__proto__);

  hits = 0;
try { if (Inst123 <= 1000 && typeof (hits) != "undefined") {_RecordType("<1930,1934,74>",(hits)); Inst123++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (constructor.of.call) != "undefined") {_RecordType("<1955,1974,75>",(constructor.of.call)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<1955,1969,75>",(constructor.of)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1955,1966,75>",(constructor)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<1975,1978,75>",(Bag)); Inst128++; } } catch(e) {}
  var actual = constructor.of.call(Bag, 5, 6);
try { if (Inst124 <= 1000 && typeof (actual) != "undefined") {_RecordType("<1946,1952,75>",(actual)); Inst124++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1989,2001,76>",(assertEquals)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (hits) != "undefined") {_RecordType("<2005,2009,76>",(hits)); Inst130++; } } catch(e) {}
  assertEquals(1, hits);
try { if (Inst131 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2014,2026,77>",(assertEquals)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<2030,2038,77>",(a.length)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (a) != "undefined") {_RecordType("<2030,2031,77>",(a)); Inst133++; } } catch(e) {}
  assertEquals(2, a.length);
try { if (Inst134 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2043,2060,78>",(assertArrayEquals)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (a) != "undefined") {_RecordType("<2069,2070,78>",(a)); Inst135++; } } catch(e) {}
  assertArrayEquals([5, 6], a);
try { if (Inst136 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2075,2087,79>",(assertEquals)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (Bag.prototype) != "undefined") {_RecordType("<2088,2101,79>",(Bag.prototype)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (Bag) != "undefined") {_RecordType("<2088,2091,79>",(Bag)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<2103,2114,79>",(a.__proto__)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (a) != "undefined") {_RecordType("<2103,2104,79>",(a)); Inst140++; } } catch(e) {}
  assertEquals(Bag.prototype, a.__proto__);

  // %TypedArray%.of does not trigger prototype setters.
  // (It defines elements rather than assigning to them.)
  var status = "pass";
try { if (Inst141 <= 1000 && typeof (status) != "undefined") {_RecordType("<2239,2245,83>",(status)); Inst141++; } } catch(e) {}
try { if (Inst142 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2258,2279,84>",(Object.defineProperty)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2258,2264,84>",(Object)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<2280,2301,84>",(constructor.prototype)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2280,2291,84>",(constructor)); Inst145++; } } catch(e) {}
  Object.defineProperty(constructor.prototype, "0", {
    set: function(v) { status = "fail"; }
try { if (Inst146 <= 1000 && typeof (v) != "undefined") {_RecordType("<2328,2329,85>",(v)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (status) != "undefined") {_RecordType("<2333,2339,85>",(status)); Inst147++; } } catch(e) {}
  });
try { if (Inst148 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2360,2372,87>",(assertEquals)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (constructor.of(1)[0]) != "undefined") {_RecordType("<2376,2396,87>",(constructor.of(1)[0])); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<2376,2390,87>",(constructor.of)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2376,2387,87>",(constructor)); Inst151++; } } catch(e) {}
  assertEquals(1, constructor.of(1)[0], 1);
try { if (Inst152 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2404,2416,88>",(assertEquals)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (status) != "undefined") {_RecordType("<2425,2431,88>",(status)); Inst153++; } } catch(e) {}
  assertEquals("pass", status);

  // Note that %TypedArray%.of does not trigger "length" setter itself, as
  // it relies on the constructor to set "length" to the value passed to it.
  // If the constructor does not assign "length", the setter should not be
  // invoked.

  // Setter on the newly created object.
try { if (Inst155 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2739,2750,96>",(constructor)); Inst155++; } } catch(e) {}
  class Pack extends constructor {
    constructor(length) {
try { if (Inst156 <= 1000 && typeof (length) != "undefined") {_RecordType("<2769,2775,97>",(length)); Inst156++; } } catch(e) {}
try { if (Inst157 <= 1000 && typeof (length) != "undefined") {_RecordType("<2791,2797,98>",(length)); Inst157++; } } catch(e) {}
      super(length);
try { if (Inst158 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2806,2827,99>",(Object.defineProperty)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2806,2812,99>",(Object)); Inst159++; } } catch(e) {}
      Object.defineProperty(this, "length", {
        set: function (v) { status = "fail"; }
try { if (Inst160 <= 1000 && typeof (v) != "undefined") {_RecordType("<2869,2870,100>",(v)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (status) != "undefined") {_RecordType("<2874,2880,100>",(status)); Inst161++; } } catch(e) {}
      });
    }
  }
try { if (Inst154 <= 1000 && typeof (Pack) != "undefined") {_RecordType("<2726,2730,96>",(Pack)); Inst154++; } } catch(e) {}
try { if (Inst163 <= 1000 && typeof (Pack.of) != "undefined") {_RecordType("<2926,2933,104>",(Pack.of)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (Pack) != "undefined") {_RecordType("<2926,2930,104>",(Pack)); Inst164++; } } catch(e) {}
  var pack = Pack.of(5, 6, 7, 8);
try { if (Inst162 <= 1000 && typeof (pack) != "undefined") {_RecordType("<2919,2923,104>",(pack)); Inst162++; } } catch(e) {}
try { if (Inst165 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2949,2961,105>",(assertEquals)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (status) != "undefined") {_RecordType("<2970,2976,105>",(status)); Inst166++; } } catch(e) {}
  assertEquals("pass", status);

  // when the setter is on the new object's prototype
try { if (Inst168 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3055,3066,108>",(constructor)); Inst168++; } } catch(e) {}
  class Bevy extends constructor {}
try { if (Inst167 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<3042,3046,108>",(Bevy)); Inst167++; } } catch(e) {}
try { if (Inst169 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<3072,3093,109>",(Object.defineProperty)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3072,3078,109>",(Object)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (Bevy.prototype) != "undefined") {_RecordType("<3094,3108,109>",(Bevy.prototype)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<3094,3098,109>",(Bevy)); Inst172++; } } catch(e) {}
  Object.defineProperty(Bevy.prototype, "length", {
    set: function (v) { status = "fail"; }
try { if (Inst173 <= 1000 && typeof (v) != "undefined") {_RecordType("<3141,3142,110>",(v)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (status) != "undefined") {_RecordType("<3146,3152,110>",(status)); Inst174++; } } catch(e) {}
  });
try { if (Inst176 <= 1000 && typeof (Bevy.of) != "undefined") {_RecordType("<3184,3191,112>",(Bevy.of)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (Bevy) != "undefined") {_RecordType("<3184,3188,112>",(Bevy)); Inst177++; } } catch(e) {}
  var bevy = Bevy.of(3);
try { if (Inst175 <= 1000 && typeof (bevy) != "undefined") {_RecordType("<3177,3181,112>",(bevy)); Inst175++; } } catch(e) {}
try { if (Inst178 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3198,3210,113>",(assertEquals)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (status) != "undefined") {_RecordType("<3219,3225,113>",(status)); Inst179++; } } catch(e) {}
  assertEquals("pass", status);

  // Check superficial features of %TypedArray%.of.
try { if (Inst181 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3294,3325,116>",(Object.getOwnPropertyDescriptor)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3294,3300,116>",(Object)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (constructor.__proto__) != "undefined") {_RecordType("<3326,3347,116>",(constructor.__proto__)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3326,3337,116>",(constructor)); Inst184++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(constructor.__proto__, "of");
try { if (Inst180 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3287,3291,116>",(desc)); Inst180++; } } catch(e) {}

try { if (Inst185 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3359,3371,118>",(assertEquals)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<3372,3389,118>",(desc.configurable)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3372,3376,118>",(desc)); Inst187++; } } catch(e) {}
  assertEquals(desc.configurable, true);
try { if (Inst188 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3400,3412,119>",(assertEquals)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<3413,3428,119>",(desc.enumerable)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3413,3417,119>",(desc)); Inst190++; } } catch(e) {}
  assertEquals(desc.enumerable, false);
try { if (Inst191 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3440,3452,120>",(assertEquals)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<3453,3466,120>",(desc.writable)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (desc) != "undefined") {_RecordType("<3453,3457,120>",(desc)); Inst193++; } } catch(e) {}
  assertEquals(desc.writable, true);
try { if (Inst194 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3477,3489,121>",(assertEquals)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (constructor.of.length) != "undefined") {_RecordType("<3490,3511,121>",(constructor.of.length)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<3490,3504,121>",(constructor.of)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3490,3501,121>",(constructor)); Inst197++; } } catch(e) {}
  assertEquals(constructor.of.length, 0);

  // %TypedArray%.of is not a constructor.
try { if (Inst198 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3563,3575,124>",(assertThrows)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<3593,3607,124>",(constructor.of)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3593,3604,124>",(constructor)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3614,3623,124>",(TypeError)); Inst201++; } } catch(e) {}
  assertThrows(function() { new constructor.of(); }, TypeError);

  // For receivers which are not constructors %TypedArray%.of does not
  // allocate a typed array using a default constructor, but throws an
  // exception. Note that this is different from Array.of, which uses
  // Array as default constructor.
  for (var x of [undefined, null, false, true, "cow", 42, 3.14]) {
try { if (Inst202 <= 1000 && typeof (x) != "undefined") {_RecordType("<3885,3886,130>",(x)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3891,3900,130>",(undefined)); Inst203++; } } catch(e) {}
try { if (Inst204 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3945,3957,131>",(assertThrows)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (constructor.of.call) != "undefined") {_RecordType("<3972,3991,131>",(constructor.of.call)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (constructor.of) != "undefined") {_RecordType("<3972,3986,131>",(constructor.of)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3972,3983,131>",(constructor)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (x) != "undefined") {_RecordType("<3992,3993,131>",(x)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3999,4008,131>",(TypeError)); Inst209++; } } catch(e) {}
    assertThrows(function () { constructor.of.call(x); }, TypeError);
  }
}

for (var constructor of typedArrayConstructors) {
try { if (Inst210 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4027,4038,135>",(constructor)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<4042,4064,135>",(typedArrayConstructors)); Inst211++; } } catch(e) {}
try { if (Inst212 <= 1000 && typeof (TestTypedArrayOf) != "undefined") {_RecordType("<4070,4086,136>",(TestTypedArrayOf)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4087,4098,136>",(constructor)); Inst213++; } } catch(e) {}
  TestTypedArrayOf(constructor);
}

