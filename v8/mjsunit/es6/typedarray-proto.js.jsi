var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Test that the methods for different TypedArray types have the same
// identity.

'use strict';

try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<300,310,11>",(Uint8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<314,323,12>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<327,338,13>",(Uint16Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<342,352,14>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<356,367,15>",(Uint32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<371,381,16>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<385,402,17>",(Uint8ClampedArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<406,418,18>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<422,434,19>",(Float64Array)); Inst9++; } } catch(e) {}
let typedArrayConstructors = [
  Uint8Array,
  Int8Array,
  Uint16Array,
  Int16Array,
  Uint32Array,
  Int32Array,
  Uint8ClampedArray,
  Float32Array,
  Float64Array];
try { if (Inst0 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<271,293,10>",(typedArrayConstructors)); Inst0++; } } catch(e) {}

try { if (Inst11 <= 1000 && typeof (Uint8Array.__proto__) != "undefined") {_RecordType("<455,475,21>",(Uint8Array.__proto__)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<455,465,21>",(Uint8Array)); Inst12++; } } catch(e) {}
let TypedArray = Uint8Array.__proto__;
try { if (Inst10 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<442,452,21>",(TypedArray)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (TypedArray.prototype) != "undefined") {_RecordType("<503,523,22>",(TypedArray.prototype)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<503,513,22>",(TypedArray)); Inst15++; } } catch(e) {}
let TypedArrayPrototype = TypedArray.prototype;
try { if (Inst13 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<481,500,22>",(TypedArrayPrototype)); Inst13++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<526,538,24>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (TypedArray.__proto__) != "undefined") {_RecordType("<539,559,24>",(TypedArray.__proto__)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<539,549,24>",(TypedArray)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<561,579,24>",(Function.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Function) != "undefined") {_RecordType("<561,569,24>",(Function)); Inst20++; } } catch(e) {}
assertEquals(TypedArray.__proto__, Function.prototype);
try { if (Inst21 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<582,594,25>",(assertEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (TypedArrayPrototype.__proto__) != "undefined") {_RecordType("<595,624,25>",(TypedArrayPrototype.__proto__)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (TypedArrayPrototype) != "undefined") {_RecordType("<595,614,25>",(TypedArrayPrototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<626,642,25>",(Object.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<626,632,25>",(Object)); Inst25++; } } catch(e) {}
assertEquals(TypedArrayPrototype.__proto__, Object.prototype);

// There are extra own class properties due to it simply being a function
try { if (Inst27 <= 1000 && typeof (Set) != "undefined") {_RecordType("<746,749,28>",(Set)); Inst27++; } } catch(e) {}
let classProperties = new Set([
  "length", "name", "arguments", "caller", "prototype", "BYTES_PER_ELEMENT"
]);
try { if (Inst26 <= 1000 && typeof (classProperties) != "undefined") {_RecordType("<724,739,28>",(classProperties)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (Set) != "undefined") {_RecordType("<861,864,31>",(Set)); Inst29++; } } catch(e) {}
let instanceProperties = new Set(["BYTES_PER_ELEMENT", "constructor", "prototype"]);
try { if (Inst28 <= 1000 && typeof (instanceProperties) != "undefined") {_RecordType("<836,854,31>",(instanceProperties)); Inst28++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (functionProperties) != "undefined") {_RecordType("<927,945,33>",(functionProperties)); Inst30++; } } catch(e) {}
function functionProperties(object) {
try { if (Inst31 <= 1000 && typeof (object) != "undefined") {_RecordType("<946,952,33>",(object)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Object.getOwnPropertyNames(object).filter) != "undefined") {_RecordType("<965,1006,34>",(Object.getOwnPropertyNames(object).filter)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<965,991,34>",(Object.getOwnPropertyNames)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<965,971,34>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (object) != "undefined") {_RecordType("<992,998,34>",(object)); Inst35++; } } catch(e) {}
  return Object.getOwnPropertyNames(object).filter(function(name) {
try { if (Inst36 <= 1000 && typeof (name) != "undefined") {_RecordType("<1016,1020,34>",(name)); Inst36++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (Object.getOwnPropertyDescriptor(object, name).value) != "undefined") {_RecordType("<1042,1093,35>",(Object.getOwnPropertyDescriptor(object, name).value)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1042,1073,35>",(Object.getOwnPropertyDescriptor)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1042,1048,35>",(Object)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (object) != "undefined") {_RecordType("<1074,1080,35>",(object)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (name) != "undefined") {_RecordType("<1082,1086,35>",(name)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (name) != "undefined") {_RecordType("<1125,1129,37>",(name)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (name) != "undefined") {_RecordType("<1150,1154,37>",(name)); Inst43++; } } catch(e) {}
    return typeof Object.getOwnPropertyDescriptor(object, name).value
        == "function"
      && name != 'constructor' && name != 'subarray';
  });
}

try { if (Inst45 <= 1000 && typeof (functionProperties) != "undefined") {_RecordType("<1203,1221,41>",(functionProperties)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Uint8Array.prototype) != "undefined") {_RecordType("<1222,1242,41>",(Uint8Array.prototype)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<1222,1232,41>",(Uint8Array)); Inst47++; } } catch(e) {}
let typedArrayMethods = functionProperties(Uint8Array.prototype);
try { if (Inst44 <= 1000 && typeof (typedArrayMethods) != "undefined") {_RecordType("<1183,1200,41>",(typedArrayMethods)); Inst44++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (functionProperties) != "undefined") {_RecordType("<1274,1292,42>",(functionProperties)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<1293,1303,42>",(Uint8Array)); Inst50++; } } catch(e) {}
let typedArrayClassMethods = functionProperties(Uint8Array);
try { if (Inst48 <= 1000 && typeof (typedArrayClassMethods) != "undefined") {_RecordType("<1249,1271,42>",(typedArrayClassMethods)); Inst48++; } } catch(e) {}

for (let constructor of typedArrayConstructors) {
try { if (Inst51 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1316,1327,44>",(constructor)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<1331,1353,44>",(typedArrayConstructors)); Inst52++; } } catch(e) {}
  for (let property of Object.getOwnPropertyNames(constructor.prototype)) {
try { if (Inst53 <= 1000 && typeof (property) != "undefined") {_RecordType("<1368,1376,45>",(property)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<1380,1406,45>",(Object.getOwnPropertyNames)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1380,1386,45>",(Object)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (constructor.prototype) != "undefined") {_RecordType("<1407,1428,45>",(constructor.prototype)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1407,1418,45>",(constructor)); Inst57++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1437,1447,46>",(assertTrue)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (instanceProperties.has) != "undefined") {_RecordType("<1448,1470,46>",(instanceProperties.has)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (instanceProperties) != "undefined") {_RecordType("<1448,1466,46>",(instanceProperties)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (property) != "undefined") {_RecordType("<1471,1479,46>",(property)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (property) != "undefined") {_RecordType("<1482,1490,46>",(property)); Inst62++; } } catch(e) {}
    assertTrue(instanceProperties.has(property), property);
  }
  for (let property of Object.getOwnPropertyNames(constructor)) {
try { if (Inst63 <= 1000 && typeof (property) != "undefined") {_RecordType("<1508,1516,48>",(property)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<1520,1546,48>",(Object.getOwnPropertyNames)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1520,1526,48>",(Object)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1547,1558,48>",(constructor)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1567,1577,49>",(assertTrue)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (classProperties.has) != "undefined") {_RecordType("<1578,1597,49>",(classProperties.has)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (classProperties) != "undefined") {_RecordType("<1578,1593,49>",(classProperties)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (property) != "undefined") {_RecordType("<1598,1606,49>",(property)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (property) != "undefined") {_RecordType("<1609,1617,49>",(property)); Inst71++; } } catch(e) {}
    assertTrue(classProperties.has(property), property);
  }
}

// Abstract %TypedArray% class can't be constructed directly

try { if (Inst72 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1689,1701,55>",(assertThrows)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<1712,1722,55>",(TypedArray)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1726,1735,55>",(TypeError)); Inst74++; } } catch(e) {}
assertThrows(() => new TypedArray(), TypeError);

// The "prototype" property is nonconfigurable, nonenumerable, nonwritable,
// both for %TypedArray% and for all subclasses

try { if (Inst76 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1875,1906,60>",(Object.getOwnPropertyDescriptor)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1875,1881,60>",(Object)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<1907,1917,60>",(TypedArray)); Inst78++; } } catch(e) {}
let desc = Object.getOwnPropertyDescriptor(TypedArray, "prototype");
try { if (Inst75 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1868,1872,60>",(desc)); Inst75++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1933,1944,61>",(assertFalse)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<1945,1958,61>",(desc.writable)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1945,1949,61>",(desc)); Inst81++; } } catch(e) {}
assertFalse(desc.writable);
try { if (Inst82 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1961,1972,62>",(assertFalse)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<1973,1990,62>",(desc.configurable)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1973,1977,62>",(desc)); Inst84++; } } catch(e) {}
assertFalse(desc.configurable);
try { if (Inst85 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1993,2004,63>",(assertFalse)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<2005,2020,63>",(desc.enumerable)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2005,2009,63>",(desc)); Inst87++; } } catch(e) {}
assertFalse(desc.enumerable);

for (let constructor of typedArrayConstructors) {
try { if (Inst88 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2033,2044,65>",(constructor)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<2048,2070,65>",(typedArrayConstructors)); Inst89++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2087,2118,66>",(Object.getOwnPropertyDescriptor)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2087,2093,66>",(Object)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2119,2130,66>",(constructor)); Inst93++; } } catch(e) {}
  let desc = Object.getOwnPropertyDescriptor(constructor, "prototype");
try { if (Inst90 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2080,2084,66>",(desc)); Inst90++; } } catch(e) {}
try { if (Inst94 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2148,2159,67>",(assertFalse)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<2160,2173,67>",(desc.writable)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2160,2164,67>",(desc)); Inst96++; } } catch(e) {}
  assertFalse(desc.writable);
try { if (Inst97 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2178,2189,68>",(assertFalse)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<2190,2207,68>",(desc.configurable)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2190,2194,68>",(desc)); Inst99++; } } catch(e) {}
  assertFalse(desc.configurable);
try { if (Inst100 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2212,2223,69>",(assertFalse)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<2224,2239,69>",(desc.enumerable)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2224,2228,69>",(desc)); Inst102++; } } catch(e) {}
  assertFalse(desc.enumerable);
}

