var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-debug-as debug
// Test the mirror object for symbols.

try { if (Inst0 <= 1000 && typeof (testSymbolMirror) != "undefined") {_RecordType("<251,267,8>",(testSymbolMirror)); Inst0++; } } catch(e) {}
function testSymbolMirror(symbol, description) {
try { if (Inst1 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<268,274,8>",(symbol)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (description) != "undefined") {_RecordType("<276,287,8>",(description)); Inst2++; } } catch(e) {}
  // Create mirror and JSON representation.
try { if (Inst4 <= 1000 && typeof (debug.MakeMirror) != "undefined") {_RecordType("<350,366,10>",(debug.MakeMirror)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (debug) != "undefined") {_RecordType("<350,355,10>",(debug)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<367,373,10>",(symbol)); Inst6++; } } catch(e) {}
  var mirror = debug.MakeMirror(symbol);
try { if (Inst3 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<341,347,10>",(mirror)); Inst3++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (debug.MakeMirrorSerializer) != "undefined") {_RecordType("<395,421,11>",(debug.MakeMirrorSerializer)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (debug) != "undefined") {_RecordType("<395,400,11>",(debug)); Inst9++; } } catch(e) {}
  var serializer = debug.MakeMirrorSerializer();
try { if (Inst7 <= 1000 && typeof (serializer) != "undefined") {_RecordType("<382,392,11>",(serializer)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<438,452,12>",(JSON.stringify)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<438,442,12>",(JSON)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (serializer.serializeValue) != "undefined") {_RecordType("<453,478,12>",(serializer.serializeValue)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (serializer) != "undefined") {_RecordType("<453,463,12>",(serializer)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<479,485,12>",(mirror)); Inst15++; } } catch(e) {}
  var json = JSON.stringify(serializer.serializeValue(mirror));
try { if (Inst10 <= 1000 && typeof (json) != "undefined") {_RecordType("<431,435,12>",(json)); Inst10++; } } catch(e) {}

  // Check the mirror hierachy.
try { if (Inst16 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<524,534,15>",(assertTrue)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<535,541,15>",(mirror)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (debug.Mirror) != "undefined") {_RecordType("<553,565,15>",(debug.Mirror)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (debug) != "undefined") {_RecordType("<553,558,15>",(debug)); Inst19++; } } catch(e) {}
  assertTrue(mirror instanceof debug.Mirror);
try { if (Inst20 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<570,580,16>",(assertTrue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<581,587,16>",(mirror)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (debug.ValueMirror) != "undefined") {_RecordType("<599,616,16>",(debug.ValueMirror)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (debug) != "undefined") {_RecordType("<599,604,16>",(debug)); Inst23++; } } catch(e) {}
  assertTrue(mirror instanceof debug.ValueMirror);
try { if (Inst24 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<621,631,17>",(assertTrue)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<632,638,17>",(mirror)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (debug.SymbolMirror) != "undefined") {_RecordType("<650,668,17>",(debug.SymbolMirror)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (debug) != "undefined") {_RecordType("<650,655,17>",(debug)); Inst27++; } } catch(e) {}
  assertTrue(mirror instanceof debug.SymbolMirror);

  // Check the mirror properties.
try { if (Inst28 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<708,718,20>",(assertTrue)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (mirror.isSymbol) != "undefined") {_RecordType("<719,734,20>",(mirror.isSymbol)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<719,725,20>",(mirror)); Inst30++; } } catch(e) {}
  assertTrue(mirror.isSymbol());
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<741,753,21>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (description) != "undefined") {_RecordType("<754,765,21>",(description)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (mirror.description) != "undefined") {_RecordType("<767,785,21>",(mirror.description)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<767,773,21>",(mirror)); Inst34++; } } catch(e) {}
  assertEquals(description, mirror.description());
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<792,804,22>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (mirror.type) != "undefined") {_RecordType("<815,826,22>",(mirror.type)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<815,821,22>",(mirror)); Inst37++; } } catch(e) {}
  assertEquals('symbol', mirror.type());
try { if (Inst38 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<833,843,23>",(assertTrue)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (mirror.isPrimitive) != "undefined") {_RecordType("<844,862,23>",(mirror.isPrimitive)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<844,850,23>",(mirror)); Inst40++; } } catch(e) {}
  assertTrue(mirror.isPrimitive());
try { if (Inst42 <= 1000 && typeof (description) != "undefined") {_RecordType("<892,903,24>",(description)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<908,917,24>",(undefined)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (description) != "undefined") {_RecordType("<925,936,24>",(description)); Inst44++; } } catch(e) {}
  var description_text = description === undefined ? "" : description;
try { if (Inst41 <= 1000 && typeof (description_text) != "undefined") {_RecordType("<873,889,24>",(description_text)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<940,952,25>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (description_text) != "undefined") {_RecordType("<965,981,25>",(description_text)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (mirror.toText) != "undefined") {_RecordType("<989,1002,25>",(mirror.toText)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<989,995,25>",(mirror)); Inst48++; } } catch(e) {}
  assertEquals('Symbol(' + description_text + ')', mirror.toText());
try { if (Inst49 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<1009,1019,26>",(assertSame)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (symbol) != "undefined") {_RecordType("<1020,1026,26>",(symbol)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (mirror.value) != "undefined") {_RecordType("<1028,1040,26>",(mirror.value)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (mirror) != "undefined") {_RecordType("<1028,1034,26>",(mirror)); Inst52++; } } catch(e) {}
  assertSame(symbol, mirror.value());

  // Parse JSON representation and check.
try { if (Inst54 <= 1000 && typeof (eval) != "undefined") {_RecordType("<1105,1109,29>",(eval)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (json) != "undefined") {_RecordType("<1116,1120,29>",(json)); Inst55++; } } catch(e) {}
  var fromJSON = eval('(' + json + ')');
try { if (Inst53 <= 1000 && typeof (fromJSON) != "undefined") {_RecordType("<1094,1102,29>",(fromJSON)); Inst53++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1131,1143,30>",(assertEquals)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (fromJSON.type) != "undefined") {_RecordType("<1154,1167,30>",(fromJSON.type)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (fromJSON) != "undefined") {_RecordType("<1154,1162,30>",(fromJSON)); Inst58++; } } catch(e) {}
  assertEquals('symbol', fromJSON.type);
try { if (Inst59 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1172,1184,31>",(assertEquals)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (description) != "undefined") {_RecordType("<1185,1196,31>",(description)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (fromJSON.description) != "undefined") {_RecordType("<1198,1218,31>",(fromJSON.description)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (fromJSON) != "undefined") {_RecordType("<1198,1206,31>",(fromJSON)); Inst62++; } } catch(e) {}
  assertEquals(description, fromJSON.description);
}

// Test a number of different symbols.
try { if (Inst63 <= 1000 && typeof (testSymbolMirror) != "undefined") {_RecordType("<1263,1279,35>",(testSymbolMirror)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1280,1286,35>",(Symbol)); Inst64++; } } catch(e) {}
testSymbolMirror(Symbol("a"), "a");
try { if (Inst65 <= 1000 && typeof (testSymbolMirror) != "undefined") {_RecordType("<1299,1315,36>",(testSymbolMirror)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1316,1322,36>",(Symbol)); Inst66++; } } catch(e) {}
testSymbolMirror(Symbol(12), "12");
try { if (Inst67 <= 1000 && typeof (testSymbolMirror) != "undefined") {_RecordType("<1335,1351,37>",(testSymbolMirror)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Symbol.for) != "undefined") {_RecordType("<1352,1362,37>",(Symbol.for)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1352,1358,37>",(Symbol)); Inst69++; } } catch(e) {}
testSymbolMirror(Symbol.for("b"), "b");
try { if (Inst70 <= 1000 && typeof (testSymbolMirror) != "undefined") {_RecordType("<1375,1391,38>",(testSymbolMirror)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1392,1398,38>",(Symbol)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1402,1411,38>",(undefined)); Inst72++; } } catch(e) {}
testSymbolMirror(Symbol(), undefined);

