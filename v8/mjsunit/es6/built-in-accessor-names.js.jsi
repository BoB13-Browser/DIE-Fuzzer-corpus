var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

'use strict';

try { if (Inst0 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<192,208,7>",(assertGetterName)); Inst0++; } } catch(e) {}
function assertGetterName(expected, object, name) {
try { if (Inst1 <= 1000 && typeof (expected) != "undefined") {_RecordType("<209,217,7>",(expected)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (object) != "undefined") {_RecordType("<219,225,7>",(object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (name) != "undefined") {_RecordType("<227,231,7>",(name)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<249,280,8>",(Object.getOwnPropertyDescriptor)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<249,255,8>",(Object)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (object) != "undefined") {_RecordType("<281,287,8>",(object)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (name) != "undefined") {_RecordType("<289,293,8>",(name)); Inst8++; } } catch(e) {}
  var descr = Object.getOwnPropertyDescriptor(object, name);
try { if (Inst4 <= 1000 && typeof (descr) != "undefined") {_RecordType("<241,246,8>",(descr)); Inst4++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<298,308,9>",(assertSame)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (expected) != "undefined") {_RecordType("<309,317,9>",(expected)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (descr.get.name) != "undefined") {_RecordType("<319,333,9>",(descr.get.name)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (descr.get) != "undefined") {_RecordType("<319,328,9>",(descr.get)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (descr) != "undefined") {_RecordType("<319,324,9>",(descr)); Inst13++; } } catch(e) {}
  assertSame(expected, descr.get.name);
}


try { if (Inst14 <= 1000 && typeof (assertSetterName) != "undefined") {_RecordType("<349,365,13>",(assertSetterName)); Inst14++; } } catch(e) {}
function assertSetterName(expected, object, name) {
try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<366,374,13>",(expected)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (object) != "undefined") {_RecordType("<376,382,13>",(object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (name) != "undefined") {_RecordType("<384,388,13>",(name)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<406,437,14>",(Object.getOwnPropertyDescriptor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<406,412,14>",(Object)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<438,444,14>",(object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (name) != "undefined") {_RecordType("<446,450,14>",(name)); Inst22++; } } catch(e) {}
  var descr = Object.getOwnPropertyDescriptor(object, name);
try { if (Inst18 <= 1000 && typeof (descr) != "undefined") {_RecordType("<398,403,14>",(descr)); Inst18++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<455,465,15>",(assertSame)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<466,474,15>",(expected)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (descr.set.name) != "undefined") {_RecordType("<476,490,15>",(descr.set.name)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (descr.set) != "undefined") {_RecordType("<476,485,15>",(descr.set)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (descr) != "undefined") {_RecordType("<476,481,15>",(descr)); Inst27++; } } catch(e) {}
  assertSame(expected, descr.set.name);
}


try { if (Inst28 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<497,513,19>",(assertGetterName)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ArrayBuffer.prototype) != "undefined") {_RecordType("<532,553,19>",(ArrayBuffer.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<532,543,19>",(ArrayBuffer)); Inst30++; } } catch(e) {}
assertGetterName('get byteLength', ArrayBuffer.prototype, 'byteLength');
try { if (Inst31 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<570,586,20>",(assertGetterName)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Set.prototype) != "undefined") {_RecordType("<599,612,20>",(Set.prototype)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Set) != "undefined") {_RecordType("<599,602,20>",(Set)); Inst33++; } } catch(e) {}
assertGetterName('get size', Set.prototype, 'size');
try { if (Inst34 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<623,639,21>",(assertGetterName)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (Map.prototype) != "undefined") {_RecordType("<652,665,21>",(Map.prototype)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Map) != "undefined") {_RecordType("<652,655,21>",(Map)); Inst36++; } } catch(e) {}
assertGetterName('get size', Map.prototype, 'size');


try { if (Inst38 <= 1000 && typeof (Uint8Array.__proto__) != "undefined") {_RecordType("<695,715,24>",(Uint8Array.__proto__)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<695,705,24>",(Uint8Array)); Inst39++; } } catch(e) {}
let TypedArray = Uint8Array.__proto__;
try { if (Inst37 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<682,692,24>",(TypedArray)); Inst37++; } } catch(e) {}

try { if (Inst40 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<718,734,26>",(assertGetterName)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (TypedArray.prototype) != "undefined") {_RecordType("<749,769,26>",(TypedArray.prototype)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<749,759,26>",(TypedArray)); Inst42++; } } catch(e) {}
assertGetterName('get buffer', TypedArray.prototype, 'buffer');
try { if (Inst43 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<782,798,27>",(assertGetterName)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (TypedArray.prototype) != "undefined") {_RecordType("<817,837,27>",(TypedArray.prototype)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<817,827,27>",(TypedArray)); Inst45++; } } catch(e) {}
assertGetterName('get byteOffset', TypedArray.prototype, 'byteOffset');
try { if (Inst46 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<854,870,28>",(assertGetterName)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (TypedArray.prototype) != "undefined") {_RecordType("<889,909,28>",(TypedArray.prototype)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<889,899,28>",(TypedArray)); Inst48++; } } catch(e) {}
assertGetterName('get byteLength', TypedArray.prototype, 'byteLength');
try { if (Inst49 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<926,942,29>",(assertGetterName)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (TypedArray.prototype) != "undefined") {_RecordType("<957,977,29>",(TypedArray.prototype)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<957,967,29>",(TypedArray)); Inst51++; } } catch(e) {}
assertGetterName('get length', TypedArray.prototype, 'length');
try { if (Inst52 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<990,1006,30>",(assertGetterName)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (TypedArray.prototype) != "undefined") {_RecordType("<1035,1055,30>",(TypedArray.prototype)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (TypedArray) != "undefined") {_RecordType("<1035,1045,30>",(TypedArray)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<1057,1075,30>",(Symbol.toStringTag)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1057,1063,30>",(Symbol)); Inst56++; } } catch(e) {}
assertGetterName('get [Symbol.toStringTag]', TypedArray.prototype, Symbol.toStringTag);


try { if (Inst57 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<1080,1096,33>",(assertGetterName)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (DataView.prototype) != "undefined") {_RecordType("<1111,1129,33>",(DataView.prototype)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1111,1119,33>",(DataView)); Inst59++; } } catch(e) {}
assertGetterName('get buffer', DataView.prototype, 'buffer');
try { if (Inst60 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<1142,1158,34>",(assertGetterName)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (DataView.prototype) != "undefined") {_RecordType("<1177,1195,34>",(DataView.prototype)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1177,1185,34>",(DataView)); Inst62++; } } catch(e) {}
assertGetterName('get byteOffset', DataView.prototype, 'byteOffset');
try { if (Inst63 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<1212,1228,35>",(assertGetterName)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (DataView.prototype) != "undefined") {_RecordType("<1247,1265,35>",(DataView.prototype)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (DataView) != "undefined") {_RecordType("<1247,1255,35>",(DataView)); Inst65++; } } catch(e) {}
assertGetterName('get byteLength', DataView.prototype, 'byteLength');


try { if (Inst66 <= 1000 && typeof (assertGetterName) != "undefined") {_RecordType("<1284,1300,38>",(assertGetterName)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1318,1334,38>",(Object.prototype)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1318,1324,38>",(Object)); Inst68++; } } catch(e) {}
assertGetterName('get __proto__', Object.prototype, '__proto__');
try { if (Inst69 <= 1000 && typeof (assertSetterName) != "undefined") {_RecordType("<1350,1366,39>",(assertSetterName)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1384,1400,39>",(Object.prototype)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1384,1390,39>",(Object)); Inst71++; } } catch(e) {}
assertSetterName('set __proto__', Object.prototype, '__proto__');

