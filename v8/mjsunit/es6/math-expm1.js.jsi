var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --no-fast-math

try { if (Inst0 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<194,204,7>",(assertTrue)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<205,210,7>",(isNaN)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<211,221,7>",(Math.expm1)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Math) != "undefined") {_RecordType("<211,215,7>",(Math)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<222,225,7>",(NaN)); Inst4++; } } catch(e) {}
assertTrue(isNaN(Math.expm1(NaN)));
try { if (Inst5 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<230,240,8>",(assertTrue)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<241,246,8>",(isNaN)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<247,257,8>",(Math.expm1)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Math) != "undefined") {_RecordType("<247,251,8>",(Math)); Inst8++; } } catch(e) {}
assertTrue(isNaN(Math.expm1(function() {})));
try { if (Inst9 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<276,286,9>",(assertTrue)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<287,292,9>",(isNaN)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<293,303,9>",(Math.expm1)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<293,297,9>",(Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (NaN) != "undefined") {_RecordType("<336,339,9>",(NaN)); Inst13++; } } catch(e) {}
assertTrue(isNaN(Math.expm1({ toString: function() { return NaN; } })));
try { if (Inst14 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<349,359,10>",(assertTrue)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<360,365,10>",(isNaN)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<366,376,10>",(Math.expm1)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Math) != "undefined") {_RecordType("<366,370,10>",(Math)); Inst17++; } } catch(e) {}
assertTrue(isNaN(Math.expm1({ valueOf: function() { return "abc"; } })));
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<423,435,11>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<436,444,11>",(Infinity)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<448,458,11>",(Math.expm1)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<448,452,11>",(Math)); Inst21++; } } catch(e) {}
assertEquals(Infinity, 1/Math.expm1(0));
try { if (Inst22 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<464,476,12>",(assertEquals)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<478,486,12>",(Infinity)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<490,500,12>",(Math.expm1)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Math) != "undefined") {_RecordType("<490,494,12>",(Math)); Inst25++; } } catch(e) {}
assertEquals(-Infinity, 1/Math.expm1(-0));
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<507,519,13>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<520,528,13>",(Infinity)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<530,540,13>",(Math.expm1)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<530,534,13>",(Math)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<541,549,13>",(Infinity)); Inst30++; } } catch(e) {}
assertEquals(Infinity, Math.expm1(Infinity));
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<553,565,14>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<570,580,14>",(Math.expm1)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Math) != "undefined") {_RecordType("<570,574,14>",(Math)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<582,590,14>",(Infinity)); Inst34++; } } catch(e) {}
assertEquals(-1, Math.expm1(-Infinity));


// Sanity check:
// Math.expm1(x) stays reasonably close to Math.exp(x) - 1 for large values.
for (var x = 1; x < 700; x += 0.25) {
try { if (Inst35 <= 1000 && typeof (x) != "undefined") {_RecordType("<699,700,19>",(x)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<706,707,19>",(x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<715,716,19>",(x)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<745,753,20>",(Math.exp)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Math) != "undefined") {_RecordType("<745,749,20>",(Math)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<754,755,20>",(x)); Inst41++; } } catch(e) {}
  var expected = Math.exp(x) - 1;
try { if (Inst38 <= 1000 && typeof (expected) != "undefined") {_RecordType("<734,742,20>",(expected)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (assertEqualsDelta) != "undefined") {_RecordType("<764,781,21>",(assertEqualsDelta)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (expected) != "undefined") {_RecordType("<782,790,21>",(expected)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<792,802,21>",(Math.expm1)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Math) != "undefined") {_RecordType("<792,796,21>",(Math)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<803,804,21>",(x)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (expected) != "undefined") {_RecordType("<807,815,21>",(expected)); Inst47++; } } catch(e) {}
  assertEqualsDelta(expected, Math.expm1(x), expected * 1E-15);
try { if (Inst49 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<839,847,22>",(Math.exp)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Math) != "undefined") {_RecordType("<839,843,22>",(Math)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (x) != "undefined") {_RecordType("<849,850,22>",(x)); Inst51++; } } catch(e) {}
  expected = Math.exp(-x) - 1;
try { if (Inst48 <= 1000 && typeof (expected) != "undefined") {_RecordType("<828,836,22>",(expected)); Inst48++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (assertEqualsDelta) != "undefined") {_RecordType("<859,876,23>",(assertEqualsDelta)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (expected) != "undefined") {_RecordType("<877,885,23>",(expected)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<887,897,23>",(Math.expm1)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Math) != "undefined") {_RecordType("<887,891,23>",(Math)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<899,900,23>",(x)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (expected) != "undefined") {_RecordType("<904,912,23>",(expected)); Inst57++; } } catch(e) {}
  assertEqualsDelta(expected, Math.expm1(-x), -expected * 1E-15);
}

// Approximation for values close to 0:
// Use six terms of Taylor expansion at 0 for exp(x) as test expectation:
// exp(x) - 1 == exp(0) + exp(0) * x + x * x / 2 + ... - 1
//            == x + x * x / 2 + x * x * x / 6 + ...
try { if (Inst58 <= 1000 && typeof (expm1) != "undefined") {_RecordType("<1161,1166,30>",(expm1)); Inst58++; } } catch(e) {}
function expm1(x) {
try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<1167,1168,30>",(x)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<1181,1182,31>",(x)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<1190,1191,31>",(x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<1201,1202,31>",(x)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (x) != "undefined") {_RecordType("<1227,1228,32>",(x)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (x) != "undefined") {_RecordType("<1239,1240,32>",(x)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (x) != "undefined") {_RecordType("<1267,1268,33>",(x)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (x) != "undefined") {_RecordType("<1280,1281,33>",(x)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (x) != "undefined") {_RecordType("<1309,1310,34>",(x)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (x) != "undefined") {_RecordType("<1324,1325,34>",(x)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (x) != "undefined") {_RecordType("<1353,1354,35>",(x)); Inst69++; } } catch(e) {}
  return x * (1 + x * (1/2 + x * (
              1/6 + x * (1/24 + x * (
              1/120 + x * (1/720 + x * (
              1/5040 + x * (1/40320 + x*(
              1/362880 + x * (1/3628800))))))))));
}

// Sanity check:
// Math.expm1(x) stays reasonabliy close to the Taylor series for small values.
for (var x = 1E-1; x > 1E-300; x *= 0.8) {
try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<1488,1489,40>",(x)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<1498,1499,40>",(x)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (x) != "undefined") {_RecordType("<1510,1511,40>",(x)); Inst72++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (expm1) != "undefined") {_RecordType("<1539,1544,41>",(expm1)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (x) != "undefined") {_RecordType("<1545,1546,41>",(x)); Inst75++; } } catch(e) {}
  var expected = expm1(x);
try { if (Inst73 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1528,1536,41>",(expected)); Inst73++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (assertEqualsDelta) != "undefined") {_RecordType("<1551,1568,42>",(assertEqualsDelta)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1569,1577,42>",(expected)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<1579,1589,42>",(Math.expm1)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1579,1583,42>",(Math)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (x) != "undefined") {_RecordType("<1590,1591,42>",(x)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1594,1602,42>",(expected)); Inst81++; } } catch(e) {}
  assertEqualsDelta(expected, Math.expm1(x), expected * 1E-15);
}


// Tests related to the fdlibm implementation.
// Test overflow.
try { if (Inst82 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1682,1694,48>",(assertEquals)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1695,1703,48>",(Infinity)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<1705,1715,48>",(Math.expm1)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1705,1709,48>",(Math)); Inst85++; } } catch(e) {}
assertEquals(Infinity, Math.expm1(709.8));
// Test largest double value.
try { if (Inst86 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1755,1767,50>",(assertEquals)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1768,1776,50>",(Infinity)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Math.exp) != "undefined") {_RecordType("<1778,1786,50>",(Math.exp)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1778,1782,50>",(Math)); Inst89++; } } catch(e) {}
assertEquals(Infinity, Math.exp(1.7976931348623157e308));
// Cover various code paths.
try { if (Inst90 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1842,1854,52>",(assertEquals)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<1859,1869,52>",(Math.expm1)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1859,1863,52>",(Math)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<1876,1884,52>",(Math.LN2)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1876,1880,52>",(Math)); Inst94++; } } catch(e) {}
assertEquals(-1, Math.expm1(-56 * Math.LN2));
try { if (Inst95 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1888,1900,53>",(assertEquals)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<1905,1915,53>",(Math.expm1)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1905,1909,53>",(Math)); Inst97++; } } catch(e) {}
assertEquals(-1, Math.expm1(-50));
// Test most negative double value.
try { if (Inst98 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1959,1971,55>",(assertEquals)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<1976,1986,55>",(Math.expm1)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1976,1980,55>",(Math)); Inst100++; } } catch(e) {}
assertEquals(-1, Math.expm1(-1.7976931348623157e308));
// Test argument reduction.
// Cases for 0.5*log(2) < |x| < 1.5*log(2).
try { if (Inst101 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2086,2098,58>",(assertEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<2099,2105,58>",(Math.E)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2099,2103,58>",(Math)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2111,2121,58>",(Math.expm1)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2111,2115,58>",(Math)); Inst105++; } } catch(e) {}
assertEquals(Math.E - 1, Math.expm1(1));
try { if (Inst106 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2127,2139,59>",(assertEquals)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Math.E) != "undefined") {_RecordType("<2142,2148,59>",(Math.E)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2142,2146,59>",(Math)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2154,2164,59>",(Math.expm1)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2154,2158,59>",(Math)); Inst110++; } } catch(e) {}
assertEquals(1/Math.E - 1, Math.expm1(-1));
// Cases for 1.5*log(2) < |x|.
try { if (Inst111 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2202,2214,61>",(assertEquals)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2233,2243,61>",(Math.expm1)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2233,2237,61>",(Math)); Inst113++; } } catch(e) {}
assertEquals(6.38905609893065, Math.expm1(2));
try { if (Inst114 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2249,2261,62>",(assertEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2283,2293,62>",(Math.expm1)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2283,2287,62>",(Math)); Inst116++; } } catch(e) {}
assertEquals(-0.8646647167633873, Math.expm1(-2));
// Cases where Math.expm1(x) = x.
try { if (Inst117 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2334,2346,64>",(assertEquals)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2350,2360,64>",(Math.expm1)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2350,2354,64>",(Math)); Inst119++; } } catch(e) {}
assertEquals(0, Math.expm1(0));
try { if (Inst120 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2366,2378,65>",(assertEquals)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2379,2387,65>",(Math.pow)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2379,2383,65>",(Math)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2396,2406,65>",(Math.expm1)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2396,2400,65>",(Math)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2407,2415,65>",(Math.pow)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2407,2411,65>",(Math)); Inst126++; } } catch(e) {}
assertEquals(Math.pow(2,-55), Math.expm1(Math.pow(2,-55)));
// Tests for the case where argument reduction has x in the primary range.
// Test branch for k = 0.
try { if (Inst127 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2527,2539,68>",(assertEquals)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2561,2571,68>",(Math.expm1)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2561,2565,68>",(Math)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<2579,2587,68>",(Math.LN2)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2579,2583,68>",(Math)); Inst131++; } } catch(e) {}
assertEquals(0.18920711500272105, Math.expm1(0.25 * Math.LN2));
// Test branch for k = -1.
try { if (Inst132 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2618,2630,70>",(assertEquals)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2637,2647,70>",(Math.expm1)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2637,2641,70>",(Math)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<2649,2657,70>",(Math.LN2)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2649,2653,70>",(Math)); Inst136++; } } catch(e) {}
assertEquals(-0.5, Math.expm1(-Math.LN2));
// Test branch for k = 1.
try { if (Inst137 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2687,2699,72>",(assertEquals)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2703,2713,72>",(Math.expm1)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2703,2707,72>",(Math)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<2714,2722,72>",(Math.LN2)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2714,2718,72>",(Math)); Inst141++; } } catch(e) {}
assertEquals(1, Math.expm1(Math.LN2));
// Test branch for k <= -2 || k > 56. k = -3.
try { if (Inst142 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2772,2784,74>",(assertEquals)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2808,2818,74>",(Math.expm1)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2808,2812,74>",(Math)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<2824,2832,74>",(Math.LN2)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2824,2828,74>",(Math)); Inst146++; } } catch(e) {}
assertEquals(1.4411518807585582e17, Math.expm1(57 * Math.LN2));
// Test last branch for k < 20, k = 19.
try { if (Inst147 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2876,2888,76>",(assertEquals)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2909,2919,76>",(Math.expm1)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2909,2913,76>",(Math)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<2925,2933,76>",(Math.LN2)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2925,2929,76>",(Math)); Inst151++; } } catch(e) {}
assertEquals(524286.99999999994, Math.expm1(19 * Math.LN2));
// Test the else branch, k = 20.
try { if (Inst152 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2970,2982,78>",(assertEquals)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Math.expm1) != "undefined") {_RecordType("<2992,3002,78>",(Math.expm1)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2992,2996,78>",(Math)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (Math.LN2) != "undefined") {_RecordType("<3008,3016,78>",(Math.LN2)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (Math) != "undefined") {_RecordType("<3008,3012,78>",(Math)); Inst156++; } } catch(e) {}
assertEquals(1048575, Math.expm1(20 * Math.LN2));

