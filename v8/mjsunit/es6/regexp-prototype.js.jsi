var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// ES6 21.2.4.1
try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<201,232,6>",(Object.getOwnPropertyDescriptor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<201,207,6>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<233,239,6>",(RegExp)); Inst3++; } } catch(e) {}
var proto_desc = Object.getOwnPropertyDescriptor(RegExp, "prototype");
try { if (Inst0 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<188,198,6>",(proto_desc)); Inst0++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<255,266,7>",(assertFalse)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (proto_desc.writable) != "undefined") {_RecordType("<267,286,7>",(proto_desc.writable)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<267,277,7>",(proto_desc)); Inst6++; } } catch(e) {}
assertFalse(proto_desc.writable);
try { if (Inst7 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<289,300,8>",(assertFalse)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (proto_desc.enumerable) != "undefined") {_RecordType("<301,322,8>",(proto_desc.enumerable)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<301,311,8>",(proto_desc)); Inst9++; } } catch(e) {}
assertFalse(proto_desc.enumerable);
try { if (Inst10 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<325,336,9>",(assertFalse)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (proto_desc.configurable) != "undefined") {_RecordType("<337,360,9>",(proto_desc.configurable)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<337,347,9>",(proto_desc)); Inst12++; } } catch(e) {}
assertFalse(proto_desc.configurable);

// ES6 21.2.5.1
try { if (Inst14 <= 1000 && typeof (proto_desc.value) != "undefined") {_RecordType("<392,408,12>",(proto_desc.value)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (proto_desc) != "undefined") {_RecordType("<392,402,12>",(proto_desc)); Inst15++; } } catch(e) {}
var proto = proto_desc.value;
try { if (Inst13 <= 1000 && typeof (proto) != "undefined") {_RecordType("<384,389,12>",(proto)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<410,421,13>",(assertFalse)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (proto) != "undefined") {_RecordType("<422,427,13>",(proto)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<439,445,13>",(RegExp)); Inst18++; } } catch(e) {}
assertFalse(proto instanceof RegExp);
try { if (Inst19 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<448,460,14>",(assertEquals)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<461,470,14>",(undefined)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<472,503,14>",(Object.getOwnPropertyDescriptor)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object) != "undefined") {_RecordType("<472,478,14>",(Object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (proto) != "undefined") {_RecordType("<504,509,14>",(proto)); Inst23++; } } catch(e) {}
assertEquals(undefined, Object.getOwnPropertyDescriptor(proto, "valueOf"));
try { if (Inst24 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<524,536,15>",(assertEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (proto.valueOf) != "undefined") {_RecordType("<537,550,15>",(proto.valueOf)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (proto) != "undefined") {_RecordType("<537,542,15>",(proto)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object.prototype.valueOf) != "undefined") {_RecordType("<552,576,15>",(Object.prototype.valueOf)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<552,568,15>",(Object.prototype)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<552,558,15>",(Object)); Inst29++; } } catch(e) {}
assertEquals(proto.valueOf, Object.prototype.valueOf);
try { if (Inst31 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<598,629,16>",(Object.getOwnPropertyDescriptor)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<598,604,16>",(Object)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (proto) != "undefined") {_RecordType("<630,635,16>",(proto)); Inst33++; } } catch(e) {}
var proto_constr = Object.getOwnPropertyDescriptor(proto, "constructor");
try { if (Inst30 <= 1000 && typeof (proto_constr) != "undefined") {_RecordType("<583,595,16>",(proto_constr)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<653,665,17>",(assertEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<666,672,17>",(RegExp)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (proto_constr.value) != "undefined") {_RecordType("<674,692,17>",(proto_constr.value)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (proto_constr) != "undefined") {_RecordType("<674,686,17>",(proto_constr)); Inst37++; } } catch(e) {}
assertEquals(RegExp, proto_constr.value);

