var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<201,211,6>",(Uint8Array)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Int8Array) != "undefined") {_RecordType("<215,224,7>",(Int8Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<228,239,8>",(Uint16Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Int16Array) != "undefined") {_RecordType("<243,253,9>",(Int16Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<257,268,10>",(Uint32Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Int32Array) != "undefined") {_RecordType("<272,282,11>",(Int32Array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Uint8ClampedArray) != "undefined") {_RecordType("<286,303,12>",(Uint8ClampedArray)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<307,319,13>",(Float32Array)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<323,335,14>",(Float64Array)); Inst9++; } } catch(e) {}
var typedArrayConstructors = [
  Uint8Array,
  Int8Array,
  Uint16Array,
  Int16Array,
  Uint32Array,
  Int32Array,
  Uint8ClampedArray,
  Float32Array,
  Float64Array
];
try { if (Inst0 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<172,194,5>",(typedArrayConstructors)); Inst0++; } } catch(e) {}

for (var constructor of typedArrayConstructors) {
try { if (Inst10 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<349,360,17>",(constructor)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (typedArrayConstructors) != "undefined") {_RecordType("<364,386,17>",(typedArrayConstructors)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<392,404,18>",(assertEquals)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (constructor.from.length) != "undefined") {_RecordType("<408,431,18>",(constructor.from.length)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<408,424,18>",(constructor.from)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<408,419,18>",(constructor)); Inst15++; } } catch(e) {}
  assertEquals(1, constructor.from.length);

  // TypedArray.from only callable on this subclassing %TypedArray%
try { if (Inst16 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<505,517,21>",(assertThrows)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<531,552,21>",(constructor.from.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<531,547,21>",(constructor.from)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<531,542,21>",(constructor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Array) != "undefined") {_RecordType("<553,558,21>",(Array)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<566,575,21>",(TypeError)); Inst21++; } } catch(e) {}
  assertThrows(function () {constructor.from.call(Array, [])}, TypeError);

try { if (Inst22 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<590,611,23>",(assertArrayLikeEquals)); Inst22++; } } catch(e) {}
  function assertArrayLikeEquals(value, expected, type) {
try { if (Inst23 <= 1000 && typeof (value) != "undefined") {_RecordType("<612,617,23>",(value)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (expected) != "undefined") {_RecordType("<619,627,23>",(expected)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (type) != "undefined") {_RecordType("<629,633,23>",(type)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<641,653,24>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (value.__proto__) != "undefined") {_RecordType("<654,669,24>",(value.__proto__)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (value) != "undefined") {_RecordType("<654,659,24>",(value)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (type.prototype) != "undefined") {_RecordType("<671,685,24>",(type.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (type) != "undefined") {_RecordType("<671,675,24>",(type)); Inst30++; } } catch(e) {}
    assertEquals(value.__proto__, type.prototype);
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<692,704,25>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<705,720,25>",(expected.length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (expected) != "undefined") {_RecordType("<705,713,25>",(expected)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (value.length) != "undefined") {_RecordType("<722,734,25>",(value.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (value) != "undefined") {_RecordType("<722,727,25>",(value)); Inst35++; } } catch(e) {}
    assertEquals(expected.length, value.length);
    for (var i = 0; i < value.length; ++i) {
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<750,751,26>",(i)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<757,758,26>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (value.length) != "undefined") {_RecordType("<761,773,26>",(value.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (value) != "undefined") {_RecordType("<761,766,26>",(value)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<777,778,26>",(i)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<788,800,27>",(assertEquals)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (expected[i]) != "undefined") {_RecordType("<801,812,27>",(expected[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (expected) != "undefined") {_RecordType("<801,809,27>",(expected)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (value[i]) != "undefined") {_RecordType("<814,822,27>",(value[i])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (value) != "undefined") {_RecordType("<814,819,27>",(value)); Inst45++; } } catch(e) {}
      assertEquals(expected[i], value[i]);
    }
  }

  // Assert that calling mapfn with / without thisArg in sloppy and strict modes
  // works as expected.
  var global = this;
try { if (Inst46 <= 1000 && typeof (global) != "undefined") {_RecordType("<947,953,33>",(global)); Inst46++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (non_strict) != "undefined") {_RecordType("<973,983,34>",(non_strict)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<988,1000,34>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (global) != "undefined") {_RecordType("<1001,1007,34>",(global)); Inst49++; } } catch(e) {}
  function non_strict() { assertEquals(global, this); }
try { if (Inst50 <= 1000 && typeof (strict) != "undefined") {_RecordType("<1029,1035,35>",(strict)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1054,1066,35>",(assertEquals)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1067,1076,35>",(undefined)); Inst52++; } } catch(e) {}
  function strict() { 'use strict'; assertEquals(undefined, this); }
try { if (Inst53 <= 1000 && typeof (strict_null) != "undefined") {_RecordType("<1098,1109,36>",(strict_null)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1128,1140,36>",(assertEquals)); Inst54++; } } catch(e) {}
  function strict_null() { 'use strict'; assertEquals(null, this); }
try { if (Inst55 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1158,1174,37>",(constructor.from)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1158,1169,37>",(constructor)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (non_strict) != "undefined") {_RecordType("<1180,1190,37>",(non_strict)); Inst57++; } } catch(e) {}
  constructor.from([1], non_strict);
try { if (Inst58 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1195,1211,38>",(constructor.from)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1195,1206,38>",(constructor)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (non_strict) != "undefined") {_RecordType("<1217,1227,38>",(non_strict)); Inst60++; } } catch(e) {}
  constructor.from([1], non_strict, void 0);
try { if (Inst61 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1240,1256,39>",(constructor.from)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1240,1251,39>",(constructor)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (non_strict) != "undefined") {_RecordType("<1262,1272,39>",(non_strict)); Inst63++; } } catch(e) {}
  constructor.from([1], non_strict, null);
try { if (Inst64 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1283,1299,40>",(constructor.from)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1283,1294,40>",(constructor)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (strict) != "undefined") {_RecordType("<1305,1311,40>",(strict)); Inst66++; } } catch(e) {}
  constructor.from([1], strict);
try { if (Inst67 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1316,1332,41>",(constructor.from)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1316,1327,41>",(constructor)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (strict) != "undefined") {_RecordType("<1338,1344,41>",(strict)); Inst69++; } } catch(e) {}
  constructor.from([1], strict, void 0);
try { if (Inst70 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1357,1373,42>",(constructor.from)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1357,1368,42>",(constructor)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (strict_null) != "undefined") {_RecordType("<1379,1390,42>",(strict_null)); Inst72++; } } catch(e) {}
  constructor.from([1], strict_null, null);

  // TypedArray.from can only be called on TypedArray constructors
try { if (Inst73 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1469,1481,45>",(assertThrows)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<1494,1515,45>",(constructor.from.call)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1494,1510,45>",(constructor.from)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1494,1505,45>",(constructor)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1526,1535,45>",(TypeError)); Inst77++; } } catch(e) {}
  assertThrows(function() {constructor.from.call({}, [])}, TypeError);
try { if (Inst78 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1540,1552,46>",(assertThrows)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<1565,1586,46>",(constructor.from.call)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1565,1581,46>",(constructor.from)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1565,1576,46>",(constructor)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1597,1606,46>",(TypeError)); Inst82++; } } catch(e) {}
  assertThrows(function() {constructor.from.call([], [])}, TypeError);
try { if (Inst83 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1611,1623,47>",(assertThrows)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<1636,1657,47>",(constructor.from.call)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1636,1652,47>",(constructor.from)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1636,1647,47>",(constructor)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1667,1676,47>",(TypeError)); Inst87++; } } catch(e) {}
  assertThrows(function() {constructor.from.call(1, [])}, TypeError);
try { if (Inst88 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1681,1693,48>",(assertThrows)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<1706,1727,48>",(constructor.from.call)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1706,1722,48>",(constructor.from)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1706,1717,48>",(constructor)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1728,1737,48>",(undefined)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1745,1754,48>",(TypeError)); Inst93++; } } catch(e) {}
  assertThrows(function() {constructor.from.call(undefined, [])}, TypeError);

  // Converting from various other types, demonstrating that it can
  // operate on array-like objects as well as iterables.
  // TODO(littledan): constructors should have similar flexibility.
try { if (Inst94 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<1953,1974,53>",(assertArrayLikeEquals)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<1975,1991,53>",(constructor.from)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<1975,1986,53>",(constructor)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2026,2037,54>",(constructor)); Inst97++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(
      { length: 1, 0: 5 }), [5], constructor);

try { if (Inst98 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<2043,2064,56>",(assertArrayLikeEquals)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2065,2081,56>",(constructor.from)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2065,2076,56>",(constructor)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2116,2127,57>",(constructor)); Inst101++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(
      { length: -1, 0: 5 }), [], constructor);

try { if (Inst102 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<2133,2154,59>",(assertArrayLikeEquals)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2155,2171,59>",(constructor.from)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2155,2166,59>",(constructor)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2202,2213,60>",(constructor)); Inst105++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(
      [1, 2, 3]), [1, 2, 3], constructor);

try { if (Inst107 <= 1000 && typeof (Set) != "undefined") {_RecordType("<2233,2236,62>",(Set)); Inst107++; } } catch(e) {}
  var set = new Set([1, 2, 3]);
try { if (Inst106 <= 1000 && typeof (set) != "undefined") {_RecordType("<2223,2226,62>",(set)); Inst106++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<2251,2272,63>",(assertArrayLikeEquals)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2273,2289,63>",(constructor.from)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2273,2284,63>",(constructor)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (set) != "undefined") {_RecordType("<2290,2293,63>",(set)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2315,2326,64>",(constructor)); Inst112++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(set), [1, 2, 3],
        constructor);

try { if (Inst113 <= 1000 && typeof (generator) != "undefined") {_RecordType("<2342,2351,66>",(generator)); Inst113++; } } catch(e) {}
  function* generator() {
    yield 4;
    yield 5;
    yield 6;
  }

try { if (Inst114 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<2402,2423,72>",(assertArrayLikeEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2424,2440,72>",(constructor.from)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2424,2435,72>",(constructor)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (generator) != "undefined") {_RecordType("<2441,2450,72>",(generator)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2490,2501,73>",(constructor)); Inst118++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(generator()),
                        [4, 5, 6], constructor);

try { if (Inst119 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2507,2519,75>",(assertThrows)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2533,2549,75>",(constructor.from)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2533,2544,75>",(constructor)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2560,2569,75>",(TypeError)); Inst122++; } } catch(e) {}
  assertThrows(function() { constructor.from(null); }, TypeError);
try { if (Inst123 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2574,2586,76>",(assertThrows)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2600,2616,76>",(constructor.from)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2600,2611,76>",(constructor)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2617,2626,76>",(undefined)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2632,2641,76>",(TypeError)); Inst127++; } } catch(e) {}
  assertThrows(function() { constructor.from(undefined); }, TypeError);
try { if (Inst128 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2646,2658,77>",(assertThrows)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2672,2688,77>",(constructor.from)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2672,2683,77>",(constructor)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2703,2712,77>",(TypeError)); Inst131++; } } catch(e) {}
  assertThrows(function() { constructor.from([], null); }, TypeError);
try { if (Inst132 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2717,2729,78>",(assertThrows)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2743,2759,78>",(constructor.from)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2743,2754,78>",(constructor)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2798,2807,79>",(TypeError)); Inst135++; } } catch(e) {}
  assertThrows(function() { constructor.from([], 'noncallable'); },
               TypeError);

  var nullIterator = {};
try { if (Inst136 <= 1000 && typeof (nullIterator) != "undefined") {_RecordType("<2817,2829,81>",(nullIterator)); Inst136++; } } catch(e) {}
  nullIterator[Symbol.iterator] = null;
try { if (Inst137 <= 1000 && typeof (nullIterator[Symbol.iterator]) != "undefined") {_RecordType("<2838,2867,82>",(nullIterator[Symbol.iterator])); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (nullIterator) != "undefined") {_RecordType("<2838,2850,82>",(nullIterator)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<2851,2866,82>",(Symbol.iterator)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<2851,2857,82>",(Symbol)); Inst140++; } } catch(e) {}
try { if (Inst141 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<2878,2899,83>",(assertArrayLikeEquals)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<2900,2916,83>",(constructor.from)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2900,2911,83>",(constructor)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (nullIterator) != "undefined") {_RecordType("<2917,2929,83>",(nullIterator)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<2960,2971,84>",(constructor)); Inst145++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(nullIterator), [],
                        constructor);

  var nonObjIterator = {};
try { if (Inst146 <= 1000 && typeof (nonObjIterator) != "undefined") {_RecordType("<2981,2995,86>",(nonObjIterator)); Inst146++; } } catch(e) {}
  nonObjIterator[Symbol.iterator] = function() { return 'nonObject'; };
try { if (Inst147 <= 1000 && typeof (nonObjIterator[Symbol.iterator]) != "undefined") {_RecordType("<3004,3035,87>",(nonObjIterator[Symbol.iterator])); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (nonObjIterator) != "undefined") {_RecordType("<3004,3018,87>",(nonObjIterator)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<3019,3034,87>",(Symbol.iterator)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3019,3025,87>",(Symbol)); Inst150++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3076,3088,88>",(assertThrows)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<3102,3118,88>",(constructor.from)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3102,3113,88>",(constructor)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (nonObjIterator) != "undefined") {_RecordType("<3119,3133,88>",(nonObjIterator)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3154,3163,89>",(TypeError)); Inst155++; } } catch(e) {}
  assertThrows(function() { constructor.from(nonObjIterator); },
               TypeError);

try { if (Inst156 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3169,3181,91>",(assertThrows)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<3195,3211,91>",(constructor.from)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3195,3206,91>",(constructor)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3226,3235,91>",(TypeError)); Inst159++; } } catch(e) {}
  assertThrows(function() { constructor.from([], null); }, TypeError);

  // Ensure iterator is only accessed once, and only invoked once
  var called = 0;
try { if (Inst160 <= 1000 && typeof (called) != "undefined") {_RecordType("<3311,3317,94>",(called)); Inst160++; } } catch(e) {}
  var arr = [1, 2, 3];
try { if (Inst161 <= 1000 && typeof (arr) != "undefined") {_RecordType("<3329,3332,95>",(arr)); Inst161++; } } catch(e) {}
  var obj = {};
try { if (Inst162 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3352,3355,96>",(obj)); Inst162++; } } catch(e) {}
  var counter = 0;
try { if (Inst163 <= 1000 && typeof (counter) != "undefined") {_RecordType("<3368,3375,97>",(counter)); Inst163++; } } catch(e) {}

  // Test order --- only get iterator method once
try { if (Inst164 <= 1000 && typeof (testIterator) != "undefined") {_RecordType("<3443,3455,100>",(testIterator)); Inst164++; } } catch(e) {}
  function testIterator() {
try { if (Inst165 <= 1000 && typeof (called) != "undefined") {_RecordType("<3464,3470,101>",(called)); Inst165++; } } catch(e) {}
    called++;
try { if (Inst166 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3478,3490,102>",(assertEquals)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3491,3494,102>",(obj)); Inst167++; } } catch(e) {}
    assertEquals(obj, this);
try { if (Inst168 <= 1000 && typeof (arr[Symbol.iterator]) != "undefined") {_RecordType("<3514,3534,103>",(arr[Symbol.iterator])); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (arr) != "undefined") {_RecordType("<3514,3517,103>",(arr)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<3518,3533,103>",(Symbol.iterator)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3518,3524,103>",(Symbol)); Inst171++; } } catch(e) {}
    return arr[Symbol.iterator]();
  }
  var getCalled = 0;
try { if (Inst172 <= 1000 && typeof (getCalled) != "undefined") {_RecordType("<3548,3557,105>",(getCalled)); Inst172++; } } catch(e) {}
try { if (Inst173 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<3565,3586,106>",(Object.defineProperty)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3565,3571,106>",(Object)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3587,3590,106>",(obj)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (Symbol.iterator) != "undefined") {_RecordType("<3592,3607,106>",(Symbol.iterator)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<3592,3598,106>",(Symbol)); Inst177++; } } catch(e) {}
  Object.defineProperty(obj, Symbol.iterator, {
    get: function() {
try { if (Inst178 <= 1000 && typeof (getCalled) != "undefined") {_RecordType("<3639,3648,108>",(getCalled)); Inst178++; } } catch(e) {}
      getCalled++;
try { if (Inst179 <= 1000 && typeof (testIterator) != "undefined") {_RecordType("<3665,3677,109>",(testIterator)); Inst179++; } } catch(e) {}
      return testIterator;
    },
    set: function() {
try { if (Inst180 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<3714,3731,112>",(assertUnreachable)); Inst180++; } } catch(e) {}
      assertUnreachable('@@iterator should not be set');
    }
  });
try { if (Inst181 <= 1000 && typeof (assertArrayLikeEquals) != "undefined") {_RecordType("<3779,3800,115>",(assertArrayLikeEquals)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<3801,3817,115>",(constructor.from)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3801,3812,115>",(constructor)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (obj) != "undefined") {_RecordType("<3818,3821,115>",(obj)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3835,3846,115>",(constructor)); Inst185++; } } catch(e) {}
  assertArrayLikeEquals(constructor.from(obj), [1, 2, 3], constructor);
try { if (Inst186 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3851,3863,116>",(assertEquals)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (getCalled) != "undefined") {_RecordType("<3864,3873,116>",(getCalled)); Inst187++; } } catch(e) {}
  assertEquals(getCalled, 1);
try { if (Inst188 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3881,3893,117>",(assertEquals)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (called) != "undefined") {_RecordType("<3894,3900,117>",(called)); Inst189++; } } catch(e) {}
  assertEquals(called, 1);

try { if (Inst190 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3909,3921,119>",(assertEquals)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3922,3933,119>",(constructor)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (Uint8Array.from.call(constructor, [1]).constructor) != "undefined") {_RecordType("<3935,3985,119>",(Uint8Array.from.call(constructor, [1]).constructor)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (Uint8Array.from.call) != "undefined") {_RecordType("<3935,3955,119>",(Uint8Array.from.call)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (Uint8Array.from) != "undefined") {_RecordType("<3935,3950,119>",(Uint8Array.from)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<3935,3945,119>",(Uint8Array)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<3956,3967,119>",(constructor)); Inst196++; } } catch(e) {}
  assertEquals(constructor, Uint8Array.from.call(constructor, [1]).constructor);
try { if (Inst197 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3990,4002,120>",(assertEquals)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<4003,4013,120>",(Uint8Array)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (constructor.from.call(Uint8Array, [1]).constructor) != "undefined") {_RecordType("<4015,4065,120>",(constructor.from.call(Uint8Array, [1]).constructor)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (constructor.from.call) != "undefined") {_RecordType("<4015,4036,120>",(constructor.from.call)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (constructor.from) != "undefined") {_RecordType("<4015,4031,120>",(constructor.from)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<4015,4026,120>",(constructor)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<4037,4047,120>",(Uint8Array)); Inst203++; } } catch(e) {}
  assertEquals(Uint8Array, constructor.from.call(Uint8Array, [1]).constructor);
}

