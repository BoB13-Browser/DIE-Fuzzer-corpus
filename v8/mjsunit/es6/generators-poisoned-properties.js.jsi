var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --ignition-generators

try { if (Inst0 <= 1000 && typeof (testRestrictedPropertiesStrict) != "undefined") {_RecordType("<211,241,7>",(testRestrictedPropertiesStrict)); Inst0++; } } catch(e) {}
(function testRestrictedPropertiesStrict() {
try { if (Inst1 <= 1000 && typeof (generator) != "undefined") {_RecordType("<258,267,8>",(generator)); Inst1++; } } catch(e) {}
  function* generator() { "use strict"; }
try { if (Inst2 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<290,301,9>",(assertFalse)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<302,326,9>",(generator.hasOwnProperty)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (generator) != "undefined") {_RecordType("<302,311,9>",(generator)); Inst4++; } } catch(e) {}
  assertFalse(generator.hasOwnProperty("arguments"));
try { if (Inst5 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<344,356,10>",(assertThrows)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<377,396,10>",(generator.arguments)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (generator) != "undefined") {_RecordType("<377,386,10>",(generator)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<401,410,10>",(TypeError)); Inst8++; } } catch(e) {}
  assertThrows(function() { return generator.arguments; }, TypeError);
try { if (Inst9 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<415,427,11>",(assertThrows)); Inst9++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<477,486,11>",(TypeError)); Inst12++; } } catch(e) {}
  assertThrows(function() { return generator.arguments = {}; }, TypeError);
try { if (Inst10 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<448,467,11>",(generator.arguments)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (generator) != "undefined") {_RecordType("<448,457,11>",(generator)); Inst11++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<492,503,13>",(assertFalse)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<504,528,13>",(generator.hasOwnProperty)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (generator) != "undefined") {_RecordType("<504,513,13>",(generator)); Inst15++; } } catch(e) {}
  assertFalse(generator.hasOwnProperty("caller"));
try { if (Inst16 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<543,555,14>",(assertThrows)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<576,592,14>",(generator.caller)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (generator) != "undefined") {_RecordType("<576,585,14>",(generator)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<597,606,14>",(TypeError)); Inst19++; } } catch(e) {}
  assertThrows(function() { return generator.caller; }, TypeError);
try { if (Inst20 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<611,623,15>",(assertThrows)); Inst20++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<670,679,15>",(TypeError)); Inst23++; } } catch(e) {}
  assertThrows(function() { return generator.caller = {}; }, TypeError);
try { if (Inst21 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<644,660,15>",(generator.caller)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (generator) != "undefined") {_RecordType("<644,653,15>",(generator)); Inst22++; } } catch(e) {}
})();


try { if (Inst24 <= 1000 && typeof (testRestrictedPropertiesSloppy) != "undefined") {_RecordType("<700,730,19>",(testRestrictedPropertiesSloppy)); Inst24++; } } catch(e) {}
(function testRestrictedPropertiesSloppy() {
try { if (Inst25 <= 1000 && typeof (generator) != "undefined") {_RecordType("<747,756,20>",(generator)); Inst25++; } } catch(e) {}
  function* generator() {}
try { if (Inst26 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<764,775,21>",(assertFalse)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<776,800,21>",(generator.hasOwnProperty)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (generator) != "undefined") {_RecordType("<776,785,21>",(generator)); Inst28++; } } catch(e) {}
  assertFalse(generator.hasOwnProperty("arguments"));
try { if (Inst29 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<818,830,22>",(assertThrows)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<851,870,22>",(generator.arguments)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (generator) != "undefined") {_RecordType("<851,860,22>",(generator)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<875,884,22>",(TypeError)); Inst32++; } } catch(e) {}
  assertThrows(function() { return generator.arguments; }, TypeError);
try { if (Inst33 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<889,901,23>",(assertThrows)); Inst33++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<951,960,23>",(TypeError)); Inst36++; } } catch(e) {}
  assertThrows(function() { return generator.arguments = {}; }, TypeError);
try { if (Inst34 <= 1000 && typeof (generator.arguments) != "undefined") {_RecordType("<922,941,23>",(generator.arguments)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (generator) != "undefined") {_RecordType("<922,931,23>",(generator)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<966,977,25>",(assertFalse)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (generator.hasOwnProperty) != "undefined") {_RecordType("<978,1002,25>",(generator.hasOwnProperty)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (generator) != "undefined") {_RecordType("<978,987,25>",(generator)); Inst39++; } } catch(e) {}
  assertFalse(generator.hasOwnProperty("caller"));
try { if (Inst40 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1017,1029,26>",(assertThrows)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<1050,1066,26>",(generator.caller)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1050,1059,26>",(generator)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1071,1080,26>",(TypeError)); Inst43++; } } catch(e) {}
  assertThrows(function() { return generator.caller; }, TypeError);
try { if (Inst44 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1085,1097,27>",(assertThrows)); Inst44++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1144,1153,27>",(TypeError)); Inst47++; } } catch(e) {}
  assertThrows(function() { return generator.caller = {}; }, TypeError);
try { if (Inst45 <= 1000 && typeof (generator.caller) != "undefined") {_RecordType("<1118,1134,27>",(generator.caller)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1118,1127,27>",(generator)); Inst46++; } } catch(e) {}
})();

try { if (Inst48 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1172,1192,30>",(assertIteratorResult)); Inst48++; } } catch(e) {}
function assertIteratorResult(value, done, result) {
try { if (Inst49 <= 1000 && typeof (value) != "undefined") {_RecordType("<1193,1198,30>",(value)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (done) != "undefined") {_RecordType("<1200,1204,30>",(done)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<1206,1212,30>",(result)); Inst51++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1218,1230,31>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (value) != "undefined") {_RecordType("<1239,1244,31>",(value)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (done) != "undefined") {_RecordType("<1252,1256,31>",(done)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (result) != "undefined") {_RecordType("<1259,1265,31>",(result)); Inst55++; } } catch(e) {}
  assertEquals({value: value, done: done}, result);
}


try { if (Inst56 <= 1000 && typeof (testIteratorResultStrict) != "undefined") {_RecordType("<1282,1306,35>",(testIteratorResultStrict)); Inst56++; } } catch(e) {}
(function testIteratorResultStrict() {
try { if (Inst57 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1323,1332,36>",(generator)); Inst57++; } } catch(e) {}
  function* generator() { "use strict"; }
try { if (Inst58 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1355,1375,37>",(assertIteratorResult)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1376,1385,37>",(undefined)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (generator().next) != "undefined") {_RecordType("<1393,1409,37>",(generator().next)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1393,1402,37>",(generator)); Inst61++; } } catch(e) {}
  assertIteratorResult(undefined, true, generator().next());
})();


try { if (Inst62 <= 1000 && typeof (testIteratorResultSloppy) != "undefined") {_RecordType("<1432,1456,41>",(testIteratorResultSloppy)); Inst62++; } } catch(e) {}
(function testIteratorResultSloppy() {
try { if (Inst63 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1473,1482,42>",(generator)); Inst63++; } } catch(e) {}
  function* generator() {}
try { if (Inst64 <= 1000 && typeof (assertIteratorResult) != "undefined") {_RecordType("<1490,1510,43>",(assertIteratorResult)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1511,1520,43>",(undefined)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (generator().next) != "undefined") {_RecordType("<1528,1544,43>",(generator().next)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (generator) != "undefined") {_RecordType("<1528,1537,43>",(generator)); Inst67++; } } catch(e) {}
  assertIteratorResult(undefined, true, generator().next());
})();

