var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

"use strict";

try { if (Inst0 <= 1000 && typeof (props) != "undefined") {_RecordType("<1622,1627,30>",(props)); Inst0++; } } catch(e) {}
function props(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1628,1629,30>",(x)); Inst1++; } } catch(e) {}
  var array = [];
try { if (Inst2 <= 1000 && typeof (array) != "undefined") {_RecordType("<1639,1644,31>",(array)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (array.push) != "undefined") {_RecordType("<1670,1680,32>",(array.push)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (array) != "undefined") {_RecordType("<1670,1675,32>",(array)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<1681,1682,32>",(p)); Inst7++; } } catch(e) {}
  for (let p in x) array.push(p);
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<1662,1663,32>",(p)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1667,1668,32>",(x)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (array.sort) != "undefined") {_RecordType("<1694,1704,33>",(array.sort)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (array) != "undefined") {_RecordType("<1694,1699,33>",(array)); Inst9++; } } catch(e) {}
  return array.sort();
}

try { if (Inst10 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1711,1723,36>",(assertEquals)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (props({}).length) != "undefined") {_RecordType("<1727,1743,36>",(props({}).length)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (props) != "undefined") {_RecordType("<1727,1732,36>",(props)); Inst12++; } } catch(e) {}
assertEquals(0, props({}).length);
try { if (Inst13 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1746,1758,37>",(assertEquals)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (props({x:1}).length) != "undefined") {_RecordType("<1762,1781,37>",(props({x:1}).length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (props) != "undefined") {_RecordType("<1762,1767,37>",(props)); Inst15++; } } catch(e) {}
assertEquals(1, props({x:1}).length);
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1784,1796,38>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (props({x:1, y:2}).length) != "undefined") {_RecordType("<1800,1824,38>",(props({x:1, y:2}).length)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (props) != "undefined") {_RecordType("<1800,1805,38>",(props)); Inst18++; } } catch(e) {}
assertEquals(2, props({x:1, y:2}).length);

try { if (Inst19 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1828,1845,40>",(assertArrayEquals)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (props) != "undefined") {_RecordType("<1853,1858,40>",(props)); Inst20++; } } catch(e) {}
assertArrayEquals(["x"], props({x:1}));
try { if (Inst21 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1868,1885,41>",(assertArrayEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (props) != "undefined") {_RecordType("<1898,1903,41>",(props)); Inst22++; } } catch(e) {}
assertArrayEquals(["x", "y"], props({x:1, y:2}));
try { if (Inst23 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1918,1935,42>",(assertArrayEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (props) != "undefined") {_RecordType("<1956,1961,42>",(props)); Inst24++; } } catch(e) {}
assertArrayEquals(["x", "y", "zoom"], props({x:1, y:2, zoom:3}));

try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1985,1997,44>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (props([]).length) != "undefined") {_RecordType("<2001,2017,44>",(props([]).length)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (props) != "undefined") {_RecordType("<2001,2006,44>",(props)); Inst27++; } } catch(e) {}
assertEquals(0, props([]).length);
try { if (Inst28 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2020,2032,45>",(assertEquals)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (props([1]).length) != "undefined") {_RecordType("<2036,2053,45>",(props([1]).length)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (props) != "undefined") {_RecordType("<2036,2041,45>",(props)); Inst30++; } } catch(e) {}
assertEquals(1, props([1]).length);
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2056,2068,46>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (props([1,2]).length) != "undefined") {_RecordType("<2072,2091,46>",(props([1,2]).length)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (props) != "undefined") {_RecordType("<2072,2077,46>",(props)); Inst33++; } } catch(e) {}
assertEquals(2, props([1,2]).length);

try { if (Inst34 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2095,2112,48>",(assertArrayEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (props) != "undefined") {_RecordType("<2120,2125,48>",(props)); Inst35++; } } catch(e) {}
assertArrayEquals(["0"], props([1]));
try { if (Inst36 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2133,2150,49>",(assertArrayEquals)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (props) != "undefined") {_RecordType("<2163,2168,49>",(props)); Inst37++; } } catch(e) {}
assertArrayEquals(["0", "1"], props([1,2]));
try { if (Inst38 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2178,2195,50>",(assertArrayEquals)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (props) != "undefined") {_RecordType("<2213,2218,50>",(props)); Inst39++; } } catch(e) {}
assertArrayEquals(["0", "1", "2"], props([1,2,3]));

var o = {};
try { if (Inst40 <= 1000 && typeof (o) != "undefined") {_RecordType("<2235,2236,52>",(o)); Inst40++; } } catch(e) {}
var a = [];
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<2247,2248,53>",(a)); Inst41++; } } catch(e) {}
let i = "outer_i";
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<2259,2260,54>",(i)); Inst42++; } } catch(e) {}
let s = "outer_s";
try { if (Inst43 <= 1000 && typeof (s) != "undefined") {_RecordType("<2278,2279,55>",(s)); Inst43++; } } catch(e) {}
for (let i = 0x0020; i < 0x01ff; i+=2) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<2302,2303,56>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<2314,2315,56>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<2326,2327,56>",(i)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<2354,2373,57>",(String.fromCharCode)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (String) != "undefined") {_RecordType("<2354,2360,57>",(String)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<2374,2375,57>",(i)); Inst50++; } } catch(e) {}
  let s = 'char:' + String.fromCharCode(i);
try { if (Inst47 <= 1000 && typeof (s) != "undefined") {_RecordType("<2340,2341,57>",(s)); Inst47++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<2380,2386,58>",(a.push)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (a) != "undefined") {_RecordType("<2380,2381,58>",(a)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (s) != "undefined") {_RecordType("<2387,2388,58>",(s)); Inst53++; } } catch(e) {}
  a.push(s);
try { if (Inst56 <= 1000 && typeof (i) != "undefined") {_RecordType("<2400,2401,59>",(i)); Inst56++; } } catch(e) {}
  o[s] = i;
try { if (Inst54 <= 1000 && typeof (o[s]) != "undefined") {_RecordType("<2393,2397,59>",(o[s])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (o) != "undefined") {_RecordType("<2393,2394,59>",(o)); Inst55++; } } catch(e) {}
}
try { if (Inst57 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2405,2422,61>",(assertArrayEquals)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (a) != "undefined") {_RecordType("<2423,2424,61>",(a)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (props) != "undefined") {_RecordType("<2426,2431,61>",(props)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (o) != "undefined") {_RecordType("<2432,2433,61>",(o)); Inst60++; } } catch(e) {}
assertArrayEquals(a, props(o));
try { if (Inst61 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2437,2449,62>",(assertEquals)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<2450,2451,62>",(i)); Inst62++; } } catch(e) {}
assertEquals(i, "outer_i");
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2465,2477,63>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (s) != "undefined") {_RecordType("<2478,2479,63>",(s)); Inst64++; } } catch(e) {}
assertEquals(s, "outer_s");

var a = [];
try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<2498,2499,65>",(a)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2506,2518,66>",(assertEquals)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (props(a).length) != "undefined") {_RecordType("<2522,2537,66>",(props(a).length)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (props) != "undefined") {_RecordType("<2522,2527,66>",(props)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (a) != "undefined") {_RecordType("<2528,2529,66>",(a)); Inst69++; } } catch(e) {}
assertEquals(0, props(a).length);
a[Math.pow(2,30)-1] = 0;
try { if (Inst70 <= 1000 && typeof (a[Math.pow(2,30)-1]) != "undefined") {_RecordType("<2540,2559,67>",(a[Math.pow(2,30)-1])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a) != "undefined") {_RecordType("<2540,2541,67>",(a)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2542,2550,67>",(Math.pow)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2542,2546,67>",(Math)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2565,2577,68>",(assertEquals)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (props(a).length) != "undefined") {_RecordType("<2581,2596,68>",(props(a).length)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (props) != "undefined") {_RecordType("<2581,2586,68>",(props)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (a) != "undefined") {_RecordType("<2587,2588,68>",(a)); Inst77++; } } catch(e) {}
assertEquals(1, props(a).length);
a[Math.pow(2,31)-1] = 0;
try { if (Inst78 <= 1000 && typeof (a[Math.pow(2,31)-1]) != "undefined") {_RecordType("<2599,2618,69>",(a[Math.pow(2,31)-1])); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (a) != "undefined") {_RecordType("<2599,2600,69>",(a)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<2601,2609,69>",(Math.pow)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Math) != "undefined") {_RecordType("<2601,2605,69>",(Math)); Inst81++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2624,2636,70>",(assertEquals)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (props(a).length) != "undefined") {_RecordType("<2640,2655,70>",(props(a).length)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (props) != "undefined") {_RecordType("<2640,2645,70>",(props)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (a) != "undefined") {_RecordType("<2646,2647,70>",(a)); Inst85++; } } catch(e) {}
assertEquals(2, props(a).length);
a[1] = 0;
try { if (Inst86 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<2658,2662,71>",(a[1])); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (a) != "undefined") {_RecordType("<2658,2659,71>",(a)); Inst87++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2668,2680,72>",(assertEquals)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (props(a).length) != "undefined") {_RecordType("<2684,2699,72>",(props(a).length)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (props) != "undefined") {_RecordType("<2684,2689,72>",(props)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (a) != "undefined") {_RecordType("<2690,2691,72>",(a)); Inst91++; } } catch(e) {}
assertEquals(3, props(a).length);

var result = '';
try { if (Inst92 <= 1000 && typeof (result) != "undefined") {_RecordType("<2707,2713,74>",(result)); Inst92++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (p) != "undefined") {_RecordType("<2764,2765,75>",(p)); Inst95++; } } catch(e) {}
for (let p in {a : [0], b : 1}) { result += p; }
try { if (Inst93 <= 1000 && typeof (p) != "undefined") {_RecordType("<2729,2730,75>",(p)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (result) != "undefined") {_RecordType("<2754,2760,75>",(result)); Inst94++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2769,2781,76>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (result) != "undefined") {_RecordType("<2788,2794,76>",(result)); Inst97++; } } catch(e) {}
assertEquals('ab', result);

var result = '';
try { if (Inst98 <= 1000 && typeof (result) != "undefined") {_RecordType("<2802,2808,78>",(result)); Inst98++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (p) != "undefined") {_RecordType("<2861,2862,79>",(p)); Inst101++; } } catch(e) {}
for (let p in {a : {v:1}, b : 1}) { result += p; }
try { if (Inst99 <= 1000 && typeof (p) != "undefined") {_RecordType("<2824,2825,79>",(p)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (result) != "undefined") {_RecordType("<2851,2857,79>",(result)); Inst100++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2866,2878,80>",(assertEquals)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (result) != "undefined") {_RecordType("<2885,2891,80>",(result)); Inst103++; } } catch(e) {}
assertEquals('ab', result);

var result = '';
try { if (Inst104 <= 1000 && typeof (result) != "undefined") {_RecordType("<2899,2905,82>",(result)); Inst104++; } } catch(e) {}
try { if (Inst108 <= 1000 && typeof (p) != "undefined") {_RecordType("<2960,2961,83>",(p)); Inst108++; } } catch(e) {}
for (let p in { get a() {}, b : 1}) { result += p; }
try { if (Inst105 <= 1000 && typeof (p) != "undefined") {_RecordType("<2921,2922,83>",(p)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (a) != "undefined") {_RecordType("<2932,2933,83>",(a)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (result) != "undefined") {_RecordType("<2950,2956,83>",(result)); Inst107++; } } catch(e) {}
try { if (Inst109 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2965,2977,84>",(assertEquals)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (result) != "undefined") {_RecordType("<2984,2990,84>",(result)); Inst110++; } } catch(e) {}
assertEquals('ab', result);

var result = '';
try { if (Inst111 <= 1000 && typeof (result) != "undefined") {_RecordType("<2998,3004,86>",(result)); Inst111++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (p) != "undefined") {_RecordType("<3072,3073,87>",(p)); Inst117++; } } catch(e) {}
for (let p in { get a() {}, set a(x) {}, b : 1}) { result += p; }
try { if (Inst112 <= 1000 && typeof (p) != "undefined") {_RecordType("<3020,3021,87>",(p)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (a) != "undefined") {_RecordType("<3031,3032,87>",(a)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (a) != "undefined") {_RecordType("<3043,3044,87>",(a)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (x) != "undefined") {_RecordType("<3045,3046,87>",(x)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (result) != "undefined") {_RecordType("<3062,3068,87>",(result)); Inst116++; } } catch(e) {}
try { if (Inst118 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3077,3089,88>",(assertEquals)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (result) != "undefined") {_RecordType("<3096,3102,88>",(result)); Inst119++; } } catch(e) {}
assertEquals('ab', result);


// Check that there is exactly one variable without initializer
// in a for-in statement with let variables.
try { if (Inst120 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3216,3228,93>",(assertThrows)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3285,3296,93>",(SyntaxError)); Inst121++; } } catch(e) {}
assertThrows("function foo() { 'use strict'; for (let in {}) { } }", SyntaxError);
try { if (Inst122 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3299,3311,94>",(assertThrows)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3374,3385,94>",(SyntaxError)); Inst123++; } } catch(e) {}
assertThrows("function foo() { 'use strict'; for (let x = 3 in {}) { } }", SyntaxError);
try { if (Inst124 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3388,3400,95>",(assertThrows)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3462,3473,95>",(SyntaxError)); Inst125++; } } catch(e) {}
assertThrows("function foo() { 'use strict'; for (let x, y in {}) { } }", SyntaxError);
try { if (Inst126 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3476,3488,96>",(assertThrows)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3554,3565,96>",(SyntaxError)); Inst127++; } } catch(e) {}
assertThrows("function foo() { 'use strict'; for (let x = 3, y in {}) { } }", SyntaxError);
try { if (Inst128 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3568,3580,97>",(assertThrows)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3646,3657,97>",(SyntaxError)); Inst129++; } } catch(e) {}
assertThrows("function foo() { 'use strict'; for (let x, y = 4 in {}) { } }", SyntaxError);
try { if (Inst130 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3660,3672,98>",(assertThrows)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3742,3753,98>",(SyntaxError)); Inst131++; } } catch(e) {}
assertThrows("function foo() { 'use strict'; for (let x = 3, y = 4 in {}) { } }", SyntaxError);


// In a normal for statement the iteration variable is
// freshly allocated for each iteration.
try { if (Inst132 <= 1000 && typeof (closures1) != "undefined") {_RecordType("<3863,3872,103>",(closures1)); Inst132++; } } catch(e) {}
function closures1() {
  let a = [];
try { if (Inst133 <= 1000 && typeof (a) != "undefined") {_RecordType("<3883,3884,104>",(a)); Inst133++; } } catch(e) {}
  for (let i = 0; i < 5; ++i) {
try { if (Inst134 <= 1000 && typeof (i) != "undefined") {_RecordType("<3902,3903,105>",(i)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (i) != "undefined") {_RecordType("<3909,3910,105>",(i)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (i) != "undefined") {_RecordType("<3918,3919,105>",(i)); Inst136++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<3927,3933,106>",(a.push)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (a) != "undefined") {_RecordType("<3927,3928,106>",(a)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (i) != "undefined") {_RecordType("<3955,3956,106>",(i)); Inst139++; } } catch(e) {}
    a.push(function () { return i; });
  }
  for (let j = 0; j < 5; ++j) {
try { if (Inst140 <= 1000 && typeof (j) != "undefined") {_RecordType("<3977,3978,108>",(j)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (j) != "undefined") {_RecordType("<3984,3985,108>",(j)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (j) != "undefined") {_RecordType("<3993,3994,108>",(j)); Inst142++; } } catch(e) {}
try { if (Inst143 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4002,4014,109>",(assertEquals)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (j) != "undefined") {_RecordType("<4015,4016,109>",(j)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (a[j]) != "undefined") {_RecordType("<4018,4022,109>",(a[j])); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (a) != "undefined") {_RecordType("<4018,4019,109>",(a)); Inst146++; } } catch(e) {}
    assertEquals(j, a[j]());
  }
}
try { if (Inst147 <= 1000 && typeof (closures1) != "undefined") {_RecordType("<4033,4042,112>",(closures1)); Inst147++; } } catch(e) {}
closures1();


try { if (Inst148 <= 1000 && typeof (closures2) != "undefined") {_RecordType("<4057,4066,115>",(closures2)); Inst148++; } } catch(e) {}
function closures2() {
  let a = [], b = [];
try { if (Inst149 <= 1000 && typeof (a) != "undefined") {_RecordType("<4077,4078,116>",(a)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (b) != "undefined") {_RecordType("<4085,4086,116>",(b)); Inst150++; } } catch(e) {}
  for (let i = 0, j = 10; i < 5; ++i, ++j) {
try { if (Inst151 <= 1000 && typeof (i) != "undefined") {_RecordType("<4104,4105,117>",(i)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (j) != "undefined") {_RecordType("<4111,4112,117>",(j)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (i) != "undefined") {_RecordType("<4119,4120,117>",(i)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (i) != "undefined") {_RecordType("<4128,4129,117>",(i)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (j) != "undefined") {_RecordType("<4133,4134,117>",(j)); Inst155++; } } catch(e) {}
try { if (Inst156 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<4142,4148,118>",(a.push)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (a) != "undefined") {_RecordType("<4142,4143,118>",(a)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (i) != "undefined") {_RecordType("<4170,4171,118>",(i)); Inst158++; } } catch(e) {}
    a.push(function () { return i; });
try { if (Inst159 <= 1000 && typeof (b.push) != "undefined") {_RecordType("<4181,4187,119>",(b.push)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (b) != "undefined") {_RecordType("<4181,4182,119>",(b)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (j) != "undefined") {_RecordType("<4209,4210,119>",(j)); Inst161++; } } catch(e) {}
    b.push(function () { return j; });
  }
  for (let k = 0; k < 5; ++k) {
try { if (Inst162 <= 1000 && typeof (k) != "undefined") {_RecordType("<4231,4232,121>",(k)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (k) != "undefined") {_RecordType("<4238,4239,121>",(k)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (k) != "undefined") {_RecordType("<4247,4248,121>",(k)); Inst164++; } } catch(e) {}
try { if (Inst165 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4256,4268,122>",(assertEquals)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (k) != "undefined") {_RecordType("<4269,4270,122>",(k)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (a[k]) != "undefined") {_RecordType("<4272,4276,122>",(a[k])); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (a) != "undefined") {_RecordType("<4272,4273,122>",(a)); Inst168++; } } catch(e) {}
    assertEquals(k, a[k]());
try { if (Inst169 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4285,4297,123>",(assertEquals)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (k) != "undefined") {_RecordType("<4298,4299,123>",(k)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (b[k]) != "undefined") {_RecordType("<4306,4310,123>",(b[k])); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (b) != "undefined") {_RecordType("<4306,4307,123>",(b)); Inst172++; } } catch(e) {}
    assertEquals(k + 10, b[k]());
  }
}
try { if (Inst173 <= 1000 && typeof (closures2) != "undefined") {_RecordType("<4321,4330,126>",(closures2)); Inst173++; } } catch(e) {}
closures2();


try { if (Inst174 <= 1000 && typeof (closure_in_for_init) != "undefined") {_RecordType("<4345,4364,129>",(closure_in_for_init)); Inst174++; } } catch(e) {}
function closure_in_for_init() {
  let a = [];
try { if (Inst175 <= 1000 && typeof (a) != "undefined") {_RecordType("<4375,4376,130>",(a)); Inst175++; } } catch(e) {}
  for (let i = 0, f = function() { return i }; i < 5; ++i) {
try { if (Inst176 <= 1000 && typeof (i) != "undefined") {_RecordType("<4394,4395,131>",(i)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (f) != "undefined") {_RecordType("<4401,4402,131>",(f)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (i) != "undefined") {_RecordType("<4425,4426,131>",(i)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (i) != "undefined") {_RecordType("<4430,4431,131>",(i)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (i) != "undefined") {_RecordType("<4439,4440,131>",(i)); Inst180++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<4448,4454,132>",(a.push)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (a) != "undefined") {_RecordType("<4448,4449,132>",(a)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (f) != "undefined") {_RecordType("<4455,4456,132>",(f)); Inst183++; } } catch(e) {}
    a.push(f);
  }
  for (let k = 0; k < 5; ++k) {
try { if (Inst184 <= 1000 && typeof (k) != "undefined") {_RecordType("<4474,4475,134>",(k)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (k) != "undefined") {_RecordType("<4481,4482,134>",(k)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (k) != "undefined") {_RecordType("<4490,4491,134>",(k)); Inst186++; } } catch(e) {}
try { if (Inst187 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4499,4511,135>",(assertEquals)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (a[k]) != "undefined") {_RecordType("<4515,4519,135>",(a[k])); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (a) != "undefined") {_RecordType("<4515,4516,135>",(a)); Inst189++; } } catch(e) {}
    assertEquals(0, a[k]());
  }
}
try { if (Inst190 <= 1000 && typeof (closure_in_for_init) != "undefined") {_RecordType("<4530,4549,138>",(closure_in_for_init)); Inst190++; } } catch(e) {}
closure_in_for_init();


try { if (Inst191 <= 1000 && typeof (closure_in_for_cond) != "undefined") {_RecordType("<4564,4583,141>",(closure_in_for_cond)); Inst191++; } } catch(e) {}
function closure_in_for_cond() {
  let a = [];
try { if (Inst192 <= 1000 && typeof (a) != "undefined") {_RecordType("<4594,4595,142>",(a)); Inst192++; } } catch(e) {}
  for (let i = 0; a.push(function () { return i; }), i < 5; ++i) { }
try { if (Inst193 <= 1000 && typeof (i) != "undefined") {_RecordType("<4613,4614,143>",(i)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<4620,4626,143>",(a.push)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (a) != "undefined") {_RecordType("<4620,4621,143>",(a)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (i) != "undefined") {_RecordType("<4648,4649,143>",(i)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (i) != "undefined") {_RecordType("<4655,4656,143>",(i)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (i) != "undefined") {_RecordType("<4664,4665,143>",(i)); Inst198++; } } catch(e) {}
  for (let k = 0; k < 5; ++k) {
try { if (Inst199 <= 1000 && typeof (k) != "undefined") {_RecordType("<4682,4683,144>",(k)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (k) != "undefined") {_RecordType("<4689,4690,144>",(k)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (k) != "undefined") {_RecordType("<4698,4699,144>",(k)); Inst201++; } } catch(e) {}
try { if (Inst202 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4707,4719,145>",(assertEquals)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (k) != "undefined") {_RecordType("<4720,4721,145>",(k)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (a[k]) != "undefined") {_RecordType("<4723,4727,145>",(a[k])); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (a) != "undefined") {_RecordType("<4723,4724,145>",(a)); Inst205++; } } catch(e) {}
    assertEquals(k, a[k]());
  }
}
try { if (Inst206 <= 1000 && typeof (closure_in_for_cond) != "undefined") {_RecordType("<4738,4757,148>",(closure_in_for_cond)); Inst206++; } } catch(e) {}
closure_in_for_cond();


try { if (Inst207 <= 1000 && typeof (closure_in_for_next) != "undefined") {_RecordType("<4772,4791,151>",(closure_in_for_next)); Inst207++; } } catch(e) {}
function closure_in_for_next() {
  let a = [];
try { if (Inst208 <= 1000 && typeof (a) != "undefined") {_RecordType("<4802,4803,152>",(a)); Inst208++; } } catch(e) {}
  for (let i = 0; i < 5; a.push(function () { return i; }), ++i) { }
try { if (Inst209 <= 1000 && typeof (i) != "undefined") {_RecordType("<4821,4822,153>",(i)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (i) != "undefined") {_RecordType("<4828,4829,153>",(i)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<4835,4841,153>",(a.push)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (a) != "undefined") {_RecordType("<4835,4836,153>",(a)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (i) != "undefined") {_RecordType("<4863,4864,153>",(i)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (i) != "undefined") {_RecordType("<4872,4873,153>",(i)); Inst214++; } } catch(e) {}
  for (let k = 0; k < 5; ++k) {
try { if (Inst215 <= 1000 && typeof (k) != "undefined") {_RecordType("<4890,4891,154>",(k)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (k) != "undefined") {_RecordType("<4897,4898,154>",(k)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (k) != "undefined") {_RecordType("<4906,4907,154>",(k)); Inst217++; } } catch(e) {}
try { if (Inst218 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4915,4927,155>",(assertEquals)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (k) != "undefined") {_RecordType("<4928,4929,155>",(k)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (a[k]) != "undefined") {_RecordType("<4935,4939,155>",(a[k])); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (a) != "undefined") {_RecordType("<4935,4936,155>",(a)); Inst221++; } } catch(e) {}
    assertEquals(k + 1, a[k]());
  }
}
try { if (Inst222 <= 1000 && typeof (closure_in_for_next) != "undefined") {_RecordType("<4950,4969,158>",(closure_in_for_next)); Inst222++; } } catch(e) {}
closure_in_for_next();


// In a for-in statement the iteration variable is fresh
// for each iteration.
try { if (Inst223 <= 1000 && typeof (closures3) != "undefined") {_RecordType("<5064,5073,163>",(closures3)); Inst223++; } } catch(e) {}
function closures3(x) {
try { if (Inst224 <= 1000 && typeof (x) != "undefined") {_RecordType("<5074,5075,163>",(x)); Inst224++; } } catch(e) {}
  let a = [];
try { if (Inst225 <= 1000 && typeof (a) != "undefined") {_RecordType("<5085,5086,164>",(a)); Inst225++; } } catch(e) {}
  for (let p in x) {
try { if (Inst226 <= 1000 && typeof (p) != "undefined") {_RecordType("<5104,5105,165>",(p)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (x) != "undefined") {_RecordType("<5109,5110,165>",(x)); Inst227++; } } catch(e) {}
try { if (Inst228 <= 1000 && typeof (a.push) != "undefined") {_RecordType("<5118,5124,166>",(a.push)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (a) != "undefined") {_RecordType("<5118,5119,166>",(a)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (p) != "undefined") {_RecordType("<5146,5147,166>",(p)); Inst230++; } } catch(e) {}
    a.push(function () { return p; });
  }
  let k = 0;
try { if (Inst231 <= 1000 && typeof (k) != "undefined") {_RecordType("<5163,5164,168>",(k)); Inst231++; } } catch(e) {}
  for (let q in x) {
try { if (Inst232 <= 1000 && typeof (q) != "undefined") {_RecordType("<5181,5182,169>",(q)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (x) != "undefined") {_RecordType("<5186,5187,169>",(x)); Inst233++; } } catch(e) {}
try { if (Inst234 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5195,5207,170>",(assertEquals)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (q) != "undefined") {_RecordType("<5208,5209,170>",(q)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (a[k]) != "undefined") {_RecordType("<5211,5215,170>",(a[k])); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (a) != "undefined") {_RecordType("<5211,5212,170>",(a)); Inst237++; } } catch(e) {}
    assertEquals(q, a[k]());
try { if (Inst238 <= 1000 && typeof (k) != "undefined") {_RecordType("<5226,5227,171>",(k)); Inst238++; } } catch(e) {}
    ++k;
  }
}
try { if (Inst239 <= 1000 && typeof (closures3) != "undefined") {_RecordType("<5235,5244,174>",(closures3)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (d) != "undefined") {_RecordType("<5279,5280,174>",(d)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (e) != "undefined") {_RecordType("<5291,5292,174>",(e)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (x) != "undefined") {_RecordType("<5293,5294,174>",(x)); Inst242++; } } catch(e) {}
closures3({a : [0], b : 1, c : {v : 1}, get d() {}, set e(x) {}});

// Check normal for statement completion values.
try { if (Inst243 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5352,5364,177>",(assertEquals)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5368,5372,177>",(eval)); Inst244++; } } catch(e) {}
assertEquals(1, eval("for (let i = 0; i < 10; i++) { 1; }"));
try { if (Inst245 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5414,5426,178>",(assertEquals)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5430,5434,178>",(eval)); Inst246++; } } catch(e) {}
assertEquals(9, eval("for (let i = 0; i < 10; i++) { i; }"));
try { if (Inst247 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5476,5488,179>",(assertEquals)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5489,5498,179>",(undefined)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5500,5504,179>",(eval)); Inst249++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; false;) { }"));
try { if (Inst250 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5538,5550,180>",(assertEquals)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5551,5560,180>",(undefined)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5562,5566,180>",(eval)); Inst252++; } } catch(e) {}
assertEquals(undefined, eval("for (const i = 0; false;) { }"));
try { if (Inst253 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5602,5614,181>",(assertEquals)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5615,5624,181>",(undefined)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5626,5630,181>",(eval)); Inst255++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; i < 10; i++) { }"));
try { if (Inst256 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5669,5681,182>",(assertEquals)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5682,5691,182>",(undefined)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5693,5697,182>",(eval)); Inst258++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; false;) { i; }"));
try { if (Inst259 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5734,5746,183>",(assertEquals)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5747,5756,183>",(undefined)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5758,5762,183>",(eval)); Inst261++; } } catch(e) {}
assertEquals(undefined, eval("for (const i = 0; false;) { i; }"));
try { if (Inst262 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5801,5813,184>",(assertEquals)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5814,5823,184>",(undefined)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5825,5829,184>",(eval)); Inst264++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; true;) { break; }"));
try { if (Inst265 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5869,5881,185>",(assertEquals)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5882,5891,185>",(undefined)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5893,5897,185>",(eval)); Inst267++; } } catch(e) {}
assertEquals(undefined, eval("for (const i = 0; true;) { break; }"));
try { if (Inst268 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5939,5951,186>",(assertEquals)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5952,5961,186>",(undefined)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5963,5967,186>",(eval)); Inst270++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; i < 10; i++) { continue; }"));
try { if (Inst271 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6016,6028,187>",(assertEquals)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6029,6038,187>",(undefined)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6040,6044,187>",(eval)); Inst273++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; true;) { break; i; }"));
try { if (Inst274 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6087,6099,188>",(assertEquals)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6100,6109,188>",(undefined)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6111,6115,188>",(eval)); Inst276++; } } catch(e) {}
assertEquals(undefined, eval("for (const i = 0; true;) { break; i; }"));
try { if (Inst277 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6160,6172,189>",(assertEquals)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6173,6182,189>",(undefined)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6184,6188,189>",(eval)); Inst279++; } } catch(e) {}
assertEquals(undefined, eval("for (let i = 0; i < 10; i++) { continue; i; }"));
try { if (Inst280 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6240,6252,190>",(assertEquals)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6256,6260,190>",(eval)); Inst281++; } } catch(e) {}
assertEquals(0, eval("for (let i = 0; true;) { i; break; }"));
try { if (Inst282 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6303,6315,191>",(assertEquals)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6319,6323,191>",(eval)); Inst283++; } } catch(e) {}
assertEquals(0, eval("for (const i = 0; true;) { i; break; }"));
try { if (Inst284 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6368,6380,192>",(assertEquals)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6384,6388,192>",(eval)); Inst285++; } } catch(e) {}
assertEquals(9, eval("for (let i = 0; i < 10; i++) { i; continue; }"));
try { if (Inst286 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6440,6452,193>",(assertEquals)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6453,6462,193>",(undefined)); Inst287++; } } catch(e) {}try { if (Inst288 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6466,6470,194>",(eval)); Inst288++; } } catch(e) {}
assertEquals(undefined,
  eval("for (let i = 0; true; i++) { i; if (i >= 3) break; }"));
try { if (Inst289 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6529,6541,195>",(assertEquals)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6547,6551,196>",(eval)); Inst290++; } } catch(e) {}
assertEquals(3,
  eval("for (let i = 0; true; i++) { i; if (i >= 3) { i; break; } }"));
try { if (Inst291 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6617,6629,197>",(assertEquals)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6630,6639,197>",(undefined)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6643,6647,198>",(eval)); Inst293++; } } catch(e) {}
assertEquals(undefined,
  eval("for (let i = 0; true; i++) { if (i >= 3) break; i; }"));
try { if (Inst294 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6706,6718,199>",(assertEquals)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6724,6728,200>",(eval)); Inst295++; } } catch(e) {}
assertEquals(3,
  eval("for (let i = 0; true; i++) { if (i >= 3) { i; break; }; i; }"));
try { if (Inst296 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6795,6807,201>",(assertEquals)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6808,6817,201>",(undefined)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6821,6825,202>",(eval)); Inst298++; } } catch(e) {}
assertEquals(undefined,
  eval("for (let i = 0; i < 10; i++) { if (i >= 3) continue; i; }"));
try { if (Inst299 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6889,6901,203>",(assertEquals)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (eval) != "undefined") {_RecordType("<6907,6911,204>",(eval)); Inst300++; } } catch(e) {}
assertEquals(9,
  eval("for (let i = 0; i < 10; i++) { if (i >= 3) {i; continue; }; i; }"));
try { if (Inst301 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6982,6994,205>",(assertEquals)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<6995,7004,205>",(undefined)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (eval) != "undefined") {_RecordType("<7006,7010,205>",(eval)); Inst303++; } } catch(e) {}
assertEquals(undefined, eval("foo: for (let i = 0; true;) { break foo; }"));
try { if (Inst304 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7059,7071,206>",(assertEquals)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<7072,7081,206>",(undefined)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (eval) != "undefined") {_RecordType("<7083,7087,206>",(eval)); Inst306++; } } catch(e) {}
assertEquals(undefined, eval("foo: for (const i = 0; true;) { break foo; }"));
try { if (Inst307 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7138,7150,207>",(assertEquals)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (eval) != "undefined") {_RecordType("<7154,7158,207>",(eval)); Inst308++; } } catch(e) {}
assertEquals(3, eval("foo: for (let i = 3; true;) { i; break foo; }"));

