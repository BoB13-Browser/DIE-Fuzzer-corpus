var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug;
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

var test_name;
try { if (Inst3 <= 1000 && typeof (test_name) != "undefined") {_RecordType("<1728,1737,32>",(test_name)); Inst3++; } } catch(e) {}
var listener_delegate;
try { if (Inst4 <= 1000 && typeof (listener_delegate) != "undefined") {_RecordType("<1743,1760,33>",(listener_delegate)); Inst4++; } } catch(e) {}
var listener_called;
try { if (Inst5 <= 1000 && typeof (listener_called) != "undefined") {_RecordType("<1766,1781,34>",(listener_called)); Inst5++; } } catch(e) {}
var exception;
try { if (Inst6 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1787,1796,35>",(exception)); Inst6++; } } catch(e) {}
var expected_receiver;
try { if (Inst7 <= 1000 && typeof (expected_receiver) != "undefined") {_RecordType("<1802,1819,36>",(expected_receiver)); Inst7++; } } catch(e) {}
var begin_test_count = 0;
try { if (Inst8 <= 1000 && typeof (begin_test_count) != "undefined") {_RecordType("<1825,1841,37>",(begin_test_count)); Inst8++; } } catch(e) {}
var end_test_count = 0;
try { if (Inst9 <= 1000 && typeof (end_test_count) != "undefined") {_RecordType("<1851,1865,38>",(end_test_count)); Inst9++; } } catch(e) {}
var break_count = 0;
try { if (Inst10 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<1875,1886,39>",(break_count)); Inst10++; } } catch(e) {}

// Debug event listener which delegates. Exceptions have to be
// explictly caught here and checked later because exception in the
// listener are not propagated to the surrounding JavaScript code.
try { if (Inst11 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2100,2108,44>",(listener)); Inst11++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst12 <= 1000 && typeof (event) != "undefined") {_RecordType("<2109,2114,44>",(event)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2116,2126,44>",(exec_state)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2128,2138,44>",(event_data)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (data) != "undefined") {_RecordType("<2140,2144,44>",(data)); Inst15++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (e) != "undefined") {_RecordType("<2304,2305,51>",(e)); Inst24++; } } catch(e) {}
  try {
try { if (Inst16 <= 1000 && typeof (event) != "undefined") {_RecordType("<2164,2169,46>",(event)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<2173,2195,46>",(Debug.DebugEvent.Break)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2173,2189,46>",(Debug.DebugEvent)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2173,2178,46>",(Debug)); Inst19++; } } catch(e) {}
    if (event == Debug.DebugEvent.Break) {
try { if (Inst20 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<2205,2216,47>",(break_count)); Inst20++; } } catch(e) {}
      break_count++;
      listener_called = true;
try { if (Inst21 <= 1000 && typeof (listener_called) != "undefined") {_RecordType("<2226,2241,48>",(listener_called)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (listener_delegate) != "undefined") {_RecordType("<2256,2273,49>",(listener_delegate)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2274,2284,49>",(exec_state)); Inst23++; } } catch(e) {}
      listener_delegate(exec_state);
    }
  } catch (e) {
try { if (Inst26 <= 1000 && typeof (e) != "undefined") {_RecordType("<2325,2326,52>",(e)); Inst26++; } } catch(e) {}
    exception = e;
try { if (Inst25 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2313,2322,52>",(exception)); Inst25++; } } catch(e) {}
  }
}

// Add the debug event listener.
try { if (Inst27 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2368,2385,57>",(Debug.setListener)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2368,2373,57>",(Debug)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2386,2394,57>",(listener)); Inst29++; } } catch(e) {}
Debug.setListener(listener);


// Initialize for a new test.
try { if (Inst30 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<2438,2447,61>",(BeginTest)); Inst30++; } } catch(e) {}
function BeginTest(name) {
try { if (Inst31 <= 1000 && typeof (name) != "undefined") {_RecordType("<2448,2452,61>",(name)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (name) != "undefined") {_RecordType("<2470,2474,62>",(name)); Inst33++; } } catch(e) {}
  test_name = name;
try { if (Inst32 <= 1000 && typeof (test_name) != "undefined") {_RecordType("<2458,2467,62>",(test_name)); Inst32++; } } catch(e) {}
  listener_called = false;
try { if (Inst34 <= 1000 && typeof (listener_called) != "undefined") {_RecordType("<2478,2493,63>",(listener_called)); Inst34++; } } catch(e) {}
  exception = null;
try { if (Inst35 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2505,2514,64>",(exception)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (begin_test_count) != "undefined") {_RecordType("<2525,2541,65>",(begin_test_count)); Inst36++; } } catch(e) {}
  begin_test_count++;
}


// Check result of a test.
try { if (Inst37 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<2585,2592,70>",(EndTest)); Inst37++; } } catch(e) {}
function EndTest() {
try { if (Inst38 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2599,2609,71>",(assertTrue)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (listener_called) != "undefined") {_RecordType("<2610,2625,71>",(listener_called)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (test_name) != "undefined") {_RecordType("<2657,2666,71>",(test_name)); Inst40++; } } catch(e) {}
  assertTrue(listener_called, "listerner not called for " + test_name);
try { if (Inst41 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<2671,2681,72>",(assertNull)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2682,2691,72>",(exception)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (test_name) != "undefined") {_RecordType("<2693,2702,72>",(test_name)); Inst43++; } } catch(e) {}
  assertNull(exception, test_name);
try { if (Inst44 <= 1000 && typeof (end_test_count) != "undefined") {_RecordType("<2707,2721,73>",(end_test_count)); Inst44++; } } catch(e) {}
  end_test_count++;
}


// Check that the debugger correctly reflects that the receiver is not
// converted to object for strict mode functions.
try { if (Inst45 <= 1000 && typeof (Strict) != "undefined") {_RecordType("<2859,2865,79>",(Strict)); Inst45++; } } catch(e) {}
function Strict() { "use strict"; debugger; }
try { if (Inst46 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<2905,2915,80>",(TestStrict)); Inst46++; } } catch(e) {}
function TestStrict(receiver) {
try { if (Inst47 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<2916,2924,80>",(receiver)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<2950,2958,81>",(receiver)); Inst49++; } } catch(e) {}
  expected_receiver = receiver;
try { if (Inst48 <= 1000 && typeof (expected_receiver) != "undefined") {_RecordType("<2930,2947,81>",(expected_receiver)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (Strict.call) != "undefined") {_RecordType("<2962,2973,82>",(Strict.call)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Strict) != "undefined") {_RecordType("<2962,2968,82>",(Strict)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<2974,2982,82>",(receiver)); Inst52++; } } catch(e) {}
  Strict.call(receiver);
}

listener_delegate = function(exec_state) {
try { if (Inst54 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3017,3027,85>",(exec_state)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (exec_state.frame().receiver) != "undefined") {_RecordType("<3048,3075,86>",(exec_state.frame().receiver)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3048,3064,86>",(exec_state.frame)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3048,3058,86>",(exec_state)); Inst58++; } } catch(e) {}
  var receiver = exec_state.frame().receiver();
try { if (Inst55 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3037,3045,86>",(receiver)); Inst55++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3081,3091,87>",(assertTrue)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (receiver.isObject) != "undefined") {_RecordType("<3093,3110,87>",(receiver.isObject)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3093,3101,87>",(receiver)); Inst61++; } } catch(e) {}
  assertTrue(!receiver.isObject());
try { if (Inst62 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3117,3129,88>",(assertEquals)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (expected_receiver) != "undefined") {_RecordType("<3130,3147,88>",(expected_receiver)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (receiver.value) != "undefined") {_RecordType("<3149,3163,88>",(receiver.value)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3149,3157,88>",(receiver)); Inst65++; } } catch(e) {}
  assertEquals(expected_receiver, receiver.value())
}
try { if (Inst53 <= 1000 && typeof (listener_delegate) != "undefined") {_RecordType("<2988,3005,85>",(listener_delegate)); Inst53++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<3170,3179,91>",(BeginTest)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<3202,3212,91>",(TestStrict)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3213,3222,91>",(undefined)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<3225,3232,91>",(EndTest)); Inst69++; } } catch(e) {}
BeginTest("strict: undefined"); TestStrict(undefined); EndTest();
try { if (Inst70 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<3236,3245,92>",(BeginTest)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<3263,3273,92>",(TestStrict)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<3281,3288,92>",(EndTest)); Inst72++; } } catch(e) {}
BeginTest("strict: null"); TestStrict(null); EndTest();
try { if (Inst73 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<3292,3301,93>",(BeginTest)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<3316,3326,93>",(TestStrict)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<3331,3338,93>",(EndTest)); Inst75++; } } catch(e) {}
BeginTest("strict: 1"); TestStrict(1); EndTest();
try { if (Inst76 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<3342,3351,94>",(BeginTest)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<3368,3378,94>",(TestStrict)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<3385,3392,94>",(EndTest)); Inst78++; } } catch(e) {}
BeginTest("strict: 1.2"); TestStrict(1.2); EndTest();
try { if (Inst79 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<3396,3405,95>",(BeginTest)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<3425,3435,95>",(TestStrict)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<3445,3452,95>",(EndTest)); Inst81++; } } catch(e) {}
BeginTest("strict: 'asdf'"); TestStrict('asdf'); EndTest();
try { if (Inst82 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<3456,3465,96>",(BeginTest)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (TestStrict) != "undefined") {_RecordType("<3483,3493,96>",(TestStrict)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<3501,3508,96>",(EndTest)); Inst84++; } } catch(e) {}
BeginTest("strict: true"); TestStrict(true); EndTest();


// Check that the debugger correctly reflects the object conversion of
// the receiver for non-strict mode functions.
try { if (Inst85 <= 1000 && typeof (NonStrict) != "undefined") {_RecordType("<3641,3650,101>",(NonStrict)); Inst85++; } } catch(e) {}
function NonStrict() { debugger; }
try { if (Inst86 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<3676,3689,102>",(TestNonStrict)); Inst86++; } } catch(e) {}
function TestNonStrict(receiver) {
try { if (Inst87 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3690,3698,102>",(receiver)); Inst87++; } } catch(e) {}
  // null and undefined should be transformed to the global object and
  // primitives should be wrapped.
try { if (Inst89 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3831,3839,105>",(receiver)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3858,3864,105>",(Object)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3865,3873,105>",(receiver)); Inst91++; } } catch(e) {}
  expected_receiver = (receiver == null) ? this : Object(receiver);
try { if (Inst88 <= 1000 && typeof (expected_receiver) != "undefined") {_RecordType("<3810,3827,105>",(expected_receiver)); Inst88++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (NonStrict.call) != "undefined") {_RecordType("<3878,3892,106>",(NonStrict.call)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (NonStrict) != "undefined") {_RecordType("<3878,3887,106>",(NonStrict)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3893,3901,106>",(receiver)); Inst94++; } } catch(e) {}
  NonStrict.call(receiver);
}

listener_delegate = function(exec_state) {
try { if (Inst96 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3936,3946,109>",(exec_state)); Inst96++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (exec_state.frame().receiver) != "undefined") {_RecordType("<3967,3994,110>",(exec_state.frame().receiver)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3967,3983,110>",(exec_state.frame)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3967,3977,110>",(exec_state)); Inst100++; } } catch(e) {}
  var receiver = exec_state.frame().receiver();
try { if (Inst97 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<3956,3964,110>",(receiver)); Inst97++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4000,4010,111>",(assertTrue)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (receiver.isObject) != "undefined") {_RecordType("<4011,4028,111>",(receiver.isObject)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<4011,4019,111>",(receiver)); Inst103++; } } catch(e) {}
  assertTrue(receiver.isObject());
try { if (Inst104 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4035,4047,112>",(assertEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (expected_receiver) != "undefined") {_RecordType("<4048,4065,112>",(expected_receiver)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (receiver.value) != "undefined") {_RecordType("<4067,4081,112>",(receiver.value)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<4067,4075,112>",(receiver)); Inst107++; } } catch(e) {}
  assertEquals(expected_receiver, receiver.value());
}
try { if (Inst95 <= 1000 && typeof (listener_delegate) != "undefined") {_RecordType("<3907,3924,109>",(listener_delegate)); Inst95++; } } catch(e) {}

try { if (Inst108 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<4089,4098,115>",(BeginTest)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<4125,4138,115>",(TestNonStrict)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4139,4148,115>",(undefined)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<4151,4158,115>",(EndTest)); Inst111++; } } catch(e) {}
BeginTest("non-strict: undefined"); TestNonStrict(undefined); EndTest();
try { if (Inst112 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<4162,4171,116>",(BeginTest)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<4193,4206,116>",(TestNonStrict)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<4214,4221,116>",(EndTest)); Inst114++; } } catch(e) {}
BeginTest("non-strict: null"); TestNonStrict(null); EndTest();
try { if (Inst115 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<4225,4234,117>",(BeginTest)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<4253,4266,117>",(TestNonStrict)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<4271,4278,117>",(EndTest)); Inst117++; } } catch(e) {}
BeginTest("non-strict: 1"); TestNonStrict(1); EndTest();
try { if (Inst118 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<4282,4291,118>",(BeginTest)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<4312,4325,118>",(TestNonStrict)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<4332,4339,118>",(EndTest)); Inst120++; } } catch(e) {}
BeginTest("non-strict: 1.2"); TestNonStrict(1.2); EndTest();
try { if (Inst121 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<4343,4352,119>",(BeginTest)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<4376,4389,119>",(TestNonStrict)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<4399,4406,119>",(EndTest)); Inst123++; } } catch(e) {}
BeginTest("non-strict: 'asdf'"); TestNonStrict('asdf'); EndTest();
try { if (Inst124 <= 1000 && typeof (BeginTest) != "undefined") {_RecordType("<4410,4419,120>",(BeginTest)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (TestNonStrict) != "undefined") {_RecordType("<4441,4454,120>",(TestNonStrict)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (EndTest) != "undefined") {_RecordType("<4462,4469,120>",(EndTest)); Inst126++; } } catch(e) {}
BeginTest("non-strict: true"); TestNonStrict(true); EndTest();


try { if (Inst127 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4475,4487,123>",(assertEquals)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (begin_test_count) != "undefined") {_RecordType("<4488,4504,123>",(begin_test_count)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<4506,4517,123>",(break_count)); Inst129++; } } catch(e) {}
assertEquals(begin_test_count, break_count,
             'one or more tests did not enter the debugger');
try { if (Inst130 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4581,4593,125>",(assertEquals)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (begin_test_count) != "undefined") {_RecordType("<4594,4610,125>",(begin_test_count)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (end_test_count) != "undefined") {_RecordType("<4612,4626,125>",(end_test_count)); Inst132++; } } catch(e) {}
assertEquals(begin_test_count, end_test_count,
             'one or more tests did not have its result checked');

