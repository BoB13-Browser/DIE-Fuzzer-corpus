var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

listenerComplete = false;
try { if (Inst3 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<1723,1739,32>",(listenerComplete)); Inst3++; } } catch(e) {}
exception = false;
try { if (Inst4 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1749,1758,33>",(exception)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (checkArguments) != "undefined") {_RecordType("<1778,1792,35>",(checkArguments)); Inst5++; } } catch(e) {}
function checkArguments(frame, names, values) {
try { if (Inst6 <= 1000 && typeof (frame) != "undefined") {_RecordType("<1793,1798,35>",(frame)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (names) != "undefined") {_RecordType("<1800,1805,35>",(names)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (values) != "undefined") {_RecordType("<1807,1813,35>",(values)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (Math.max) != "undefined") {_RecordType("<1830,1838,36>",(Math.max)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1830,1834,36>",(Math)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (names.length) != "undefined") {_RecordType("<1839,1851,36>",(names.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (names) != "undefined") {_RecordType("<1839,1844,36>",(names)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (values.length) != "undefined") {_RecordType("<1853,1866,36>",(values.length)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (values) != "undefined") {_RecordType("<1853,1859,36>",(values)); Inst15++; } } catch(e) {}
  var argc = Math.max(names.length, values.length);
try { if (Inst9 <= 1000 && typeof (argc) != "undefined") {_RecordType("<1823,1827,36>",(argc)); Inst9++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1871,1883,37>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (argc) != "undefined") {_RecordType("<1884,1888,37>",(argc)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (frame.argumentCount) != "undefined") {_RecordType("<1890,1909,37>",(frame.argumentCount)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (frame) != "undefined") {_RecordType("<1890,1895,37>",(frame)); Inst19++; } } catch(e) {}
  assertEquals(argc, frame.argumentCount());
  for (var i = 0; i < argc; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1925,1926,38>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<1932,1933,38>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (argc) != "undefined") {_RecordType("<1936,1940,38>",(argc)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<1942,1943,38>",(i)); Inst23++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<1957,1958,39>",(i)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (names.length) != "undefined") {_RecordType("<1961,1973,39>",(names.length)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (names) != "undefined") {_RecordType("<1961,1966,39>",(names)); Inst26++; } } catch(e) {}
    if (i < names.length) {
try { if (Inst27 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1983,1995,40>",(assertEquals)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (names[i]) != "undefined") {_RecordType("<1996,2004,40>",(names[i])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (names) != "undefined") {_RecordType("<1996,2001,40>",(names)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (frame.argumentName) != "undefined") {_RecordType("<2006,2024,40>",(frame.argumentName)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2006,2011,40>",(frame)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2025,2026,40>",(i)); Inst32++; } } catch(e) {}
      assertEquals(names[i], frame.argumentName(i));
    } else {
try { if (Inst33 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2049,2061,42>",(assertEquals)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (frame.argumentName) != "undefined") {_RecordType("<2070,2088,42>",(frame.argumentName)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2070,2075,42>",(frame)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<2089,2090,42>",(i)); Inst36++; } } catch(e) {}
      assertEquals(void 0, frame.argumentName(i));
    }

try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<2109,2110,45>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (values.length) != "undefined") {_RecordType("<2113,2126,45>",(values.length)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (values) != "undefined") {_RecordType("<2113,2119,45>",(values)); Inst39++; } } catch(e) {}
    if (i < values.length) {
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2136,2148,46>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (values[i]) != "undefined") {_RecordType("<2149,2158,46>",(values[i])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (values) != "undefined") {_RecordType("<2149,2155,46>",(values)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (frame.argumentValue(i).value) != "undefined") {_RecordType("<2160,2188,46>",(frame.argumentValue(i).value)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (frame.argumentValue) != "undefined") {_RecordType("<2160,2179,46>",(frame.argumentValue)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2160,2165,46>",(frame)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<2180,2181,46>",(i)); Inst46++; } } catch(e) {}
      assertEquals(values[i], frame.argumentValue(i).value());
    } else {
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2212,2224,48>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (frame.argumentValue(i).value) != "undefined") {_RecordType("<2233,2261,48>",(frame.argumentValue(i).value)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (frame.argumentValue) != "undefined") {_RecordType("<2233,2252,48>",(frame.argumentValue)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (frame) != "undefined") {_RecordType("<2233,2238,48>",(frame)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<2253,2254,48>",(i)); Inst51++; } } catch(e) {}
      assertEquals(void 0, frame.argumentValue(i).value());
    }
  }
}

try { if (Inst52 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2288,2296,53>",(listener)); Inst52++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst53 <= 1000 && typeof (event) != "undefined") {_RecordType("<2297,2302,53>",(event)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2304,2314,53>",(exec_state)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2316,2326,53>",(event_data)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (data) != "undefined") {_RecordType("<2328,2332,53>",(data)); Inst56++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (e) != "undefined") {_RecordType("<2880,2881,69>",(e)); Inst71++; } } catch(e) {}
  try {
try { if (Inst57 <= 1000 && typeof (event) != "undefined") {_RecordType("<2352,2357,55>",(event)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<2361,2383,55>",(Debug.DebugEvent.Break)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2361,2377,55>",(Debug.DebugEvent)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2361,2366,55>",(Debug)); Inst60++; } } catch(e) {}
    if (event == Debug.DebugEvent.Break)
    {
      // Frame 0 - called with less parameters than arguments.
try { if (Inst61 <= 1000 && typeof (checkArguments) != "undefined") {_RecordType("<2460,2474,58>",(checkArguments)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<2475,2491,58>",(exec_state.frame)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2475,2485,58>",(exec_state)); Inst63++; } } catch(e) {}
      checkArguments(exec_state.frame(0), ['x', 'y'], [1]);

      // Frame 1 - called with more parameters than arguments.
try { if (Inst64 <= 1000 && typeof (checkArguments) != "undefined") {_RecordType("<2584,2598,61>",(checkArguments)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<2599,2615,61>",(exec_state.frame)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2599,2609,61>",(exec_state)); Inst66++; } } catch(e) {}
      checkArguments(exec_state.frame(1), ['x', 'y'], [1, 2, 3]);

      // Frame 2 - called with same number of parameters than arguments.
try { if (Inst67 <= 1000 && typeof (checkArguments) != "undefined") {_RecordType("<2724,2738,64>",(checkArguments)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<2739,2755,64>",(exec_state.frame)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2739,2749,64>",(exec_state)); Inst69++; } } catch(e) {}
      checkArguments(exec_state.frame(2), ['x', 'y', 'z'], [1, 2, 3]);

      // Indicate that all was processed.
      listenerComplete = true;
try { if (Inst70 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<2838,2854,67>",(listenerComplete)); Inst70++; } } catch(e) {}
    }
  } catch (e) {
try { if (Inst73 <= 1000 && typeof (e) != "undefined") {_RecordType("<2901,2902,70>",(e)); Inst73++; } } catch(e) {}
    exception = e
try { if (Inst72 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2889,2898,70>",(exception)); Inst72++; } } catch(e) {}
  };
};

// Add the debug event listener.
try { if (Inst74 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2945,2962,75>",(Debug.setListener)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2945,2950,75>",(Debug)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2963,2971,75>",(listener)); Inst76++; } } catch(e) {}
Debug.setListener(listener);

try { if (Inst77 <= 1000 && typeof (h) != "undefined") {_RecordType("<2984,2985,77>",(h)); Inst77++; } } catch(e) {}
function h(x, y) {
try { if (Inst78 <= 1000 && typeof (x) != "undefined") {_RecordType("<2986,2987,77>",(x)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (y) != "undefined") {_RecordType("<2989,2990,77>",(y)); Inst79++; } } catch(e) {}
  debugger;  // Breakpoint.
};

try { if (Inst80 <= 1000 && typeof (g) != "undefined") {_RecordType("<3035,3036,81>",(g)); Inst80++; } } catch(e) {}
function g(x, y) {
try { if (Inst81 <= 1000 && typeof (x) != "undefined") {_RecordType("<3037,3038,81>",(x)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (y) != "undefined") {_RecordType("<3040,3041,81>",(y)); Inst82++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (h) != "undefined") {_RecordType("<3047,3048,82>",(h)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (x) != "undefined") {_RecordType("<3049,3050,82>",(x)); Inst84++; } } catch(e) {}
  h(x);
};

try { if (Inst85 <= 1000 && typeof (f) != "undefined") {_RecordType("<3066,3067,85>",(f)); Inst85++; } } catch(e) {}
function f(x, y, z) {
try { if (Inst86 <= 1000 && typeof (x) != "undefined") {_RecordType("<3068,3069,85>",(x)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (y) != "undefined") {_RecordType("<3071,3072,85>",(y)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (z) != "undefined") {_RecordType("<3074,3075,85>",(z)); Inst88++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (g.apply) != "undefined") {_RecordType("<3081,3088,86>",(g.apply)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (g) != "undefined") {_RecordType("<3081,3082,86>",(g)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (x) != "undefined") {_RecordType("<3096,3097,86>",(x)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (y) != "undefined") {_RecordType("<3099,3100,86>",(y)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (z) != "undefined") {_RecordType("<3102,3103,86>",(z)); Inst93++; } } catch(e) {}
  g.apply(null, [x, y, z]);
};

try { if (Inst94 <= 1000 && typeof (f) != "undefined") {_RecordType("<3111,3112,89>",(f)); Inst94++; } } catch(e) {}
f(1, 2, 3);

// Make sure that the debug event listener vas invoked.
try { if (Inst95 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3180,3190,92>",(assertTrue)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<3191,3207,92>",(listenerComplete)); Inst96++; } } catch(e) {}
assertTrue(listenerComplete);
try { if (Inst97 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3210,3221,93>",(assertFalse)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3222,3231,93>",(exception)); Inst98++; } } catch(e) {}
assertFalse(exception, "exception in listener")

