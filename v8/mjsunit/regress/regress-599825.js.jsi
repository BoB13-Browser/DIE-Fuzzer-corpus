var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-wasm

try { if (Inst0 <= 1000 && typeof (__f_97) != "undefined") {_RecordType("<202,208,7>",(__f_97)); Inst0++; } } catch(e) {}
function __f_97(stdlib, buffer) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<209,215,7>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<217,223,7>",(buffer)); Inst2++; } } catch(e) {}
  "use asm";
try { if (Inst4 <= 1000 && typeof (stdlib.Int32Array) != "undefined") {_RecordType("<259,276,9>",(stdlib.Int32Array)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<259,265,9>",(stdlib)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<277,283,9>",(buffer)); Inst6++; } } catch(e) {}
  var __v_30 = new stdlib.Int32Array(buffer);
try { if (Inst3 <= 1000 && typeof (__v_30) != "undefined") {_RecordType("<246,252,9>",(__v_30)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (__f_74) != "undefined") {_RecordType("<297,303,10>",(__f_74)); Inst7++; } } catch(e) {}
  function __f_74() {
    var __v_27 = 4;
try { if (Inst8 <= 1000 && typeof (__v_27) != "undefined") {_RecordType("<316,322,11>",(__v_27)); Inst8++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (__v_30[-1073741825]) != "undefined") {_RecordType("<360,379,12>",(__v_30[-1073741825])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (__v_30) != "undefined") {_RecordType("<360,366,12>",(__v_30)); Inst14++; } } catch(e) {}
    __v_30[__v_27 >> __v_2] = ((__v_30[-1073741825]|-10) + 2) | 0;
try { if (Inst9 <= 1000 && typeof (__v_30[__v_27 >> __v_2]) != "undefined") {_RecordType("<332,355,12>",(__v_30[__v_27 >> __v_2])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (__v_30) != "undefined") {_RecordType("<332,338,12>",(__v_30)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (__v_27) != "undefined") {_RecordType("<339,345,12>",(__v_27)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (__v_2) != "undefined") {_RecordType("<349,354,12>",(__v_2)); Inst12++; } } catch(e) {}
  }
}
try { if (Inst15 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<401,413,15>",(assertThrows)); Inst15++; } } catch(e) {}
assertThrows(function() {
try { if (Inst17 <= 1000 && typeof (Wasm.instantiateModuleFromAsm) != "undefined") {_RecordType("<442,471,16>",(Wasm.instantiateModuleFromAsm)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Wasm) != "undefined") {_RecordType("<442,446,16>",(Wasm)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (__f_97.toString) != "undefined") {_RecordType("<473,488,16>",(__f_97.toString)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (__f_97) != "undefined") {_RecordType("<473,479,16>",(__f_97)); Inst20++; } } catch(e) {}
  var module = Wasm.instantiateModuleFromAsm( __f_97.toString());
try { if (Inst16 <= 1000 && typeof (module) != "undefined") {_RecordType("<433,439,16>",(module)); Inst16++; } } catch(e) {}
});

