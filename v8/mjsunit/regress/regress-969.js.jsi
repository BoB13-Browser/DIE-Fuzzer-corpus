var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Regression test for bugs when deoptimizing after assignments in effect
// contexts.

// Bug 989 is that there was an extra value on the expression stack when
// deoptimizing after an assignment in effect context (the value of the
// assignment was lingering).  This is hard to observe in the unoptimized
// code.
//
// This test uses comma expressions to put assignments in effect contexts,
// references to deleted global variables to force deoptimization, and
// function calls to observe an extra value.

try { if (Inst0 <= 1000 && typeof (first) != "undefined") {_RecordType("<2118,2123,40>",(first)); Inst0++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<2139,2140,40>",(x)); Inst3++; } } catch(e) {}
function first(x, y) { return x; }
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<2124,2125,40>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<2127,2128,40>",(y)); Inst2++; } } catch(e) {}
var y = 0;
try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<2148,2149,41>",(y)); Inst4++; } } catch(e) {}
var o = {};
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<2159,2160,42>",(o)); Inst5++; } } catch(e) {}
o.x = 0;
try { if (Inst6 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<2167,2170,43>",(o.x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o) != "undefined") {_RecordType("<2167,2168,43>",(o)); Inst7++; } } catch(e) {}
o[0] = 0;
try { if (Inst8 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<2176,2180,44>",(o[0])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (o) != "undefined") {_RecordType("<2176,2177,44>",(o)); Inst9++; } } catch(e) {}

// Assignment to global variable.
x0 = 0;
try { if (Inst10 <= 1000 && typeof (x0) != "undefined") {_RecordType("<2221,2223,47>",(x0)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (test0) != "undefined") {_RecordType("<2238,2243,48>",(test0)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (first) != "undefined") {_RecordType("<2255,2260,48>",(first)); Inst12++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (x0) != "undefined") {_RecordType("<2276,2278,48>",(x0)); Inst14++; } } catch(e) {}
function test0() { return first((y = 1, typeof x0), 2); }
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<2262,2263,48>",(y)); Inst13++; } } catch(e) {}
// Call the function once to compile it.
try { if (Inst15 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2328,2340,50>",(assertEquals)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (test0) != "undefined") {_RecordType("<2351,2356,50>",(test0)); Inst16++; } } catch(e) {}
assertEquals('number', test0());
// Delete to force deoptimization on the next call.
try { if (Inst17 <= 1000 && typeof (x0) != "undefined") {_RecordType("<2420,2422,52>",(x0)); Inst17++; } } catch(e) {}
delete x0;
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2424,2436,53>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (test0) != "undefined") {_RecordType("<2450,2455,53>",(test0)); Inst19++; } } catch(e) {}
assertEquals('undefined', test0());

// Compound assignment to global variable.
x1 = 0;
try { if (Inst20 <= 1000 && typeof (x1) != "undefined") {_RecordType("<2504,2506,56>",(x1)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (test1) != "undefined") {_RecordType("<2521,2526,57>",(test1)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (first) != "undefined") {_RecordType("<2538,2543,57>",(first)); Inst22++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x1) != "undefined") {_RecordType("<2560,2562,57>",(x1)); Inst24++; } } catch(e) {}
function test1() { return first((y += 1, typeof x1), 2); }
try { if (Inst23 <= 1000 && typeof (y) != "undefined") {_RecordType("<2545,2546,57>",(y)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2571,2583,58>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (test1) != "undefined") {_RecordType("<2594,2599,58>",(test1)); Inst26++; } } catch(e) {}
assertEquals('number', test1(), 'test1 before');
try { if (Inst27 <= 1000 && typeof (x1) != "undefined") {_RecordType("<2627,2629,59>",(x1)); Inst27++; } } catch(e) {}
delete x1;
try { if (Inst28 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2631,2643,60>",(assertEquals)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (test1) != "undefined") {_RecordType("<2657,2662,60>",(test1)); Inst29++; } } catch(e) {}
assertEquals('undefined', test1(), 'test1 after');

// Pre and post-increment of global variable.
x2 = 0;
try { if (Inst30 <= 1000 && typeof (x2) != "undefined") {_RecordType("<2729,2731,63>",(x2)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2746,2751,64>",(test2)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (first) != "undefined") {_RecordType("<2763,2768,64>",(first)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (y) != "undefined") {_RecordType("<2772,2773,64>",(y)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x2) != "undefined") {_RecordType("<2782,2784,64>",(x2)); Inst34++; } } catch(e) {}
function test2() { return first((++y, typeof x2), 2); }
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2793,2805,65>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2816,2821,65>",(test2)); Inst36++; } } catch(e) {}
assertEquals('number', test2(), 'test2 before');
try { if (Inst37 <= 1000 && typeof (x2) != "undefined") {_RecordType("<2849,2851,66>",(x2)); Inst37++; } } catch(e) {}
delete x2;
try { if (Inst38 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2853,2865,67>",(assertEquals)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (test2) != "undefined") {_RecordType("<2879,2884,67>",(test2)); Inst39++; } } catch(e) {}
assertEquals('undefined', test2(), 'test2 after');

x3 = 0;
try { if (Inst40 <= 1000 && typeof (x3) != "undefined") {_RecordType("<2905,2907,69>",(x3)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (test3) != "undefined") {_RecordType("<2922,2927,70>",(test3)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (first) != "undefined") {_RecordType("<2939,2944,70>",(first)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (y) != "undefined") {_RecordType("<2946,2947,70>",(y)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x3) != "undefined") {_RecordType("<2958,2960,70>",(x3)); Inst44++; } } catch(e) {}
function test3() { return first((y++, typeof x3), 2); }
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2969,2981,71>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (test3) != "undefined") {_RecordType("<2992,2997,71>",(test3)); Inst46++; } } catch(e) {}
assertEquals('number', test3(), 'test3 before');
try { if (Inst47 <= 1000 && typeof (x3) != "undefined") {_RecordType("<3025,3027,72>",(x3)); Inst47++; } } catch(e) {}
delete x3;
try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3029,3041,73>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (test3) != "undefined") {_RecordType("<3055,3060,73>",(test3)); Inst49++; } } catch(e) {}
assertEquals('undefined', test3(), 'test3 after');


// Assignment, compound assignment, and pre and post-increment of named
// properties.
x4 = 0;
try { if (Inst50 <= 1000 && typeof (x4) != "undefined") {_RecordType("<3169,3171,78>",(x4)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (test4) != "undefined") {_RecordType("<3186,3191,79>",(test4)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (first) != "undefined") {_RecordType("<3203,3208,79>",(first)); Inst52++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x4) != "undefined") {_RecordType("<3226,3228,79>",(x4)); Inst55++; } } catch(e) {}
function test4() { return first((o.x = 1, typeof x4), 2); }
try { if (Inst53 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<3210,3213,79>",(o.x)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (o) != "undefined") {_RecordType("<3210,3211,79>",(o)); Inst54++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3237,3249,80>",(assertEquals)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (test4) != "undefined") {_RecordType("<3260,3265,80>",(test4)); Inst57++; } } catch(e) {}
assertEquals('number', test4());
try { if (Inst58 <= 1000 && typeof (x4) != "undefined") {_RecordType("<3277,3279,81>",(x4)); Inst58++; } } catch(e) {}
delete x4;
try { if (Inst59 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3281,3293,82>",(assertEquals)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (test4) != "undefined") {_RecordType("<3307,3312,82>",(test4)); Inst60++; } } catch(e) {}
assertEquals('undefined', test4());

x5 = 0;
try { if (Inst61 <= 1000 && typeof (x5) != "undefined") {_RecordType("<3318,3320,84>",(x5)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (test5) != "undefined") {_RecordType("<3335,3340,85>",(test5)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (first) != "undefined") {_RecordType("<3352,3357,85>",(first)); Inst63++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (x5) != "undefined") {_RecordType("<3376,3378,85>",(x5)); Inst66++; } } catch(e) {}
function test5() { return first((o.x += 1, typeof x5), 2); }
try { if (Inst64 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<3359,3362,85>",(o.x)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (o) != "undefined") {_RecordType("<3359,3360,85>",(o)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3387,3399,86>",(assertEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (test5) != "undefined") {_RecordType("<3410,3415,86>",(test5)); Inst68++; } } catch(e) {}
assertEquals('number', test5());
try { if (Inst69 <= 1000 && typeof (x5) != "undefined") {_RecordType("<3427,3429,87>",(x5)); Inst69++; } } catch(e) {}
delete x5;
try { if (Inst70 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3431,3443,88>",(assertEquals)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (test5) != "undefined") {_RecordType("<3457,3462,88>",(test5)); Inst71++; } } catch(e) {}
assertEquals('undefined', test5());

x6 = 0;
try { if (Inst72 <= 1000 && typeof (x6) != "undefined") {_RecordType("<3468,3470,90>",(x6)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (test6) != "undefined") {_RecordType("<3485,3490,91>",(test6)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (first) != "undefined") {_RecordType("<3502,3507,91>",(first)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<3511,3514,91>",(o.x)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (o) != "undefined") {_RecordType("<3511,3512,91>",(o)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (x6) != "undefined") {_RecordType("<3523,3525,91>",(x6)); Inst77++; } } catch(e) {}
function test6() { return first((++o.x, typeof x6), 2); }
try { if (Inst78 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3534,3546,92>",(assertEquals)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (test6) != "undefined") {_RecordType("<3557,3562,92>",(test6)); Inst79++; } } catch(e) {}
assertEquals('number', test6());
try { if (Inst80 <= 1000 && typeof (x6) != "undefined") {_RecordType("<3574,3576,93>",(x6)); Inst80++; } } catch(e) {}
delete x6;
try { if (Inst81 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3578,3590,94>",(assertEquals)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (test6) != "undefined") {_RecordType("<3604,3609,94>",(test6)); Inst82++; } } catch(e) {}
assertEquals('undefined', test6());

x7 = 0;
try { if (Inst83 <= 1000 && typeof (x7) != "undefined") {_RecordType("<3615,3617,96>",(x7)); Inst83++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (test7) != "undefined") {_RecordType("<3632,3637,97>",(test7)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (first) != "undefined") {_RecordType("<3649,3654,97>",(first)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (o.x) != "undefined") {_RecordType("<3656,3659,97>",(o.x)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (o) != "undefined") {_RecordType("<3656,3657,97>",(o)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (x7) != "undefined") {_RecordType("<3670,3672,97>",(x7)); Inst88++; } } catch(e) {}
function test7() { return first((o.x++, typeof x7), 2); }
try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3681,3693,98>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (test7) != "undefined") {_RecordType("<3704,3709,98>",(test7)); Inst90++; } } catch(e) {}
assertEquals('number', test7());
try { if (Inst91 <= 1000 && typeof (x7) != "undefined") {_RecordType("<3721,3723,99>",(x7)); Inst91++; } } catch(e) {}
delete x7;
try { if (Inst92 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3725,3737,100>",(assertEquals)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (test7) != "undefined") {_RecordType("<3751,3756,100>",(test7)); Inst93++; } } catch(e) {}
assertEquals('undefined', test7());


// Assignment, compound assignment, and pre and post-increment of indexed
// properties.
x8 = 0;
try { if (Inst94 <= 1000 && typeof (x8) != "undefined") {_RecordType("<3852,3854,105>",(x8)); Inst94++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (test8) != "undefined") {_RecordType("<3869,3874,106>",(test8)); Inst95++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (first) != "undefined") {_RecordType("<3891,3896,106>",(first)); Inst97++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (x8) != "undefined") {_RecordType("<3919,3921,106>",(x8)); Inst100++; } } catch(e) {}
function test8(index) { return first((o[index] = 1, typeof x8), 2); }
try { if (Inst96 <= 1000 && typeof (index) != "undefined") {_RecordType("<3875,3880,106>",(index)); Inst96++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (o[index]) != "undefined") {_RecordType("<3898,3906,106>",(o[index])); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (o) != "undefined") {_RecordType("<3898,3899,106>",(o)); Inst99++; } } catch(e) {}
try { if (Inst101 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3930,3942,107>",(assertEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (test8) != "undefined") {_RecordType("<3953,3958,107>",(test8)); Inst102++; } } catch(e) {}
assertEquals('number', test8());
try { if (Inst103 <= 1000 && typeof (x8) != "undefined") {_RecordType("<3970,3972,108>",(x8)); Inst103++; } } catch(e) {}
delete x8;
try { if (Inst104 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3974,3986,109>",(assertEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (test8) != "undefined") {_RecordType("<4000,4005,109>",(test8)); Inst105++; } } catch(e) {}
assertEquals('undefined', test8());

x9 = 0;
try { if (Inst106 <= 1000 && typeof (x9) != "undefined") {_RecordType("<4011,4013,111>",(x9)); Inst106++; } } catch(e) {}
try { if (Inst107 <= 1000 && typeof (test9) != "undefined") {_RecordType("<4028,4033,112>",(test9)); Inst107++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (first) != "undefined") {_RecordType("<4050,4055,112>",(first)); Inst109++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (x9) != "undefined") {_RecordType("<4079,4081,112>",(x9)); Inst112++; } } catch(e) {}
function test9(index) { return first((o[index] += 1, typeof x9), 2); }
try { if (Inst108 <= 1000 && typeof (index) != "undefined") {_RecordType("<4034,4039,112>",(index)); Inst108++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (o[index]) != "undefined") {_RecordType("<4057,4065,112>",(o[index])); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (o) != "undefined") {_RecordType("<4057,4058,112>",(o)); Inst111++; } } catch(e) {}
try { if (Inst113 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4090,4102,113>",(assertEquals)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (test9) != "undefined") {_RecordType("<4113,4118,113>",(test9)); Inst114++; } } catch(e) {}
assertEquals('number', test9());
try { if (Inst115 <= 1000 && typeof (x9) != "undefined") {_RecordType("<4130,4132,114>",(x9)); Inst115++; } } catch(e) {}
delete x9;
try { if (Inst116 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4134,4146,115>",(assertEquals)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (test9) != "undefined") {_RecordType("<4160,4165,115>",(test9)); Inst117++; } } catch(e) {}
assertEquals('undefined', test9());

x10 = 0;
try { if (Inst118 <= 1000 && typeof (x10) != "undefined") {_RecordType("<4171,4174,117>",(x10)); Inst118++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (test10) != "undefined") {_RecordType("<4189,4195,118>",(test10)); Inst119++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (first) != "undefined") {_RecordType("<4212,4217,118>",(first)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (o[index]) != "undefined") {_RecordType("<4221,4229,118>",(o[index])); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (o) != "undefined") {_RecordType("<4221,4222,118>",(o)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (x10) != "undefined") {_RecordType("<4238,4241,118>",(x10)); Inst124++; } } catch(e) {}
function test10(index) { return first((++o[index], typeof x10), 2); }
try { if (Inst120 <= 1000 && typeof (index) != "undefined") {_RecordType("<4196,4201,118>",(index)); Inst120++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4250,4262,119>",(assertEquals)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (test10) != "undefined") {_RecordType("<4273,4279,119>",(test10)); Inst126++; } } catch(e) {}
assertEquals('number', test10());
try { if (Inst127 <= 1000 && typeof (x10) != "undefined") {_RecordType("<4291,4294,120>",(x10)); Inst127++; } } catch(e) {}
delete x10;
try { if (Inst128 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4296,4308,121>",(assertEquals)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (test10) != "undefined") {_RecordType("<4322,4328,121>",(test10)); Inst129++; } } catch(e) {}
assertEquals('undefined', test10());

x11 = 0;
try { if (Inst130 <= 1000 && typeof (x11) != "undefined") {_RecordType("<4334,4337,123>",(x11)); Inst130++; } } catch(e) {}
try { if (Inst131 <= 1000 && typeof (test11) != "undefined") {_RecordType("<4352,4358,124>",(test11)); Inst131++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (first) != "undefined") {_RecordType("<4375,4380,124>",(first)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (o[index]) != "undefined") {_RecordType("<4382,4390,124>",(o[index])); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (o) != "undefined") {_RecordType("<4382,4383,124>",(o)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (x11) != "undefined") {_RecordType("<4401,4404,124>",(x11)); Inst136++; } } catch(e) {}
function test11(index) { return first((o[index]++, typeof x11), 2); }
try { if (Inst132 <= 1000 && typeof (index) != "undefined") {_RecordType("<4359,4364,124>",(index)); Inst132++; } } catch(e) {}
try { if (Inst137 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4413,4425,125>",(assertEquals)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (test11) != "undefined") {_RecordType("<4436,4442,125>",(test11)); Inst138++; } } catch(e) {}
assertEquals('number', test11());
try { if (Inst139 <= 1000 && typeof (x11) != "undefined") {_RecordType("<4454,4457,126>",(x11)); Inst139++; } } catch(e) {}
delete x11;
try { if (Inst140 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4459,4471,127>",(assertEquals)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (test11) != "undefined") {_RecordType("<4485,4491,127>",(test11)); Inst141++; } } catch(e) {}
assertEquals('undefined', test11());

