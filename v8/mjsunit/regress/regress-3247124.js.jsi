var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

try { if (Inst1 <= 1000 && typeof (unescape) != "undefined") {_RecordType("<1608,1616,28>",(unescape)); Inst1++; } } catch(e) {}
var foo = unescape("%E0%E2%EA%F4%FB%E3%F5%E1%E9%ED%F3%FA%E7%FC%C0%C2%CA%D4%DB%C3%D5%C1%C9%CD%D3%DA%C7%DC");
try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1602,1605,28>",(foo)); Inst0++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (bar) != "undefined") {_RecordType("<1716,1719,30>",(bar)); Inst2++; } } catch(e) {}
function bar(x) {
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<1720,1721,30>",(x)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (String) != "undefined") {_RecordType("<1739,1745,31>",(String)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<1746,1747,31>",(x)); Inst6++; } } catch(e) {}
  var s = new String(x);
try { if (Inst4 <= 1000 && typeof (s) != "undefined") {_RecordType("<1731,1732,31>",(s)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (String) != "undefined") {_RecordType("<1764,1770,32>",(String)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1771,1774,32>",(foo)); Inst9++; } } catch(e) {}
  var a = new String(foo);
try { if (Inst7 <= 1000 && typeof (a) != "undefined") {_RecordType("<1756,1757,32>",(a)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (String) != "undefined") {_RecordType("<1791,1797,33>",(String)); Inst11++; } } catch(e) {}
  var b = new String('aaeouaoaeioucuAAEOUAOAEIOUCU');
try { if (Inst10 <= 1000 && typeof (b) != "undefined") {_RecordType("<1783,1784,33>",(b)); Inst10++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1846,1852,35>",(Number)); Inst13++; } } catch(e) {}
  var i = new Number();
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1838,1839,35>",(i)); Inst12++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1870,1876,36>",(Number)); Inst15++; } } catch(e) {}
  var j = new Number();
try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<1862,1863,36>",(j)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (String) != "undefined") {_RecordType("<1894,1900,37>",(String)); Inst17++; } } catch(e) {}
  var c = new String();
try { if (Inst16 <= 1000 && typeof (c) != "undefined") {_RecordType("<1886,1887,37>",(c)); Inst16++; } } catch(e) {}
  var r = '';
try { if (Inst18 <= 1000 && typeof (r) != "undefined") {_RecordType("<1910,1911,38>",(r)); Inst18++; } } catch(e) {}

  for (i = 0; i < s.length; i++) {
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<1926,1927,40>",(i)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<1933,1934,40>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (s.length) != "undefined") {_RecordType("<1937,1945,40>",(s.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (s) != "undefined") {_RecordType("<1937,1938,40>",(s)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<1947,1948,40>",(i)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (s.substring) != "undefined") {_RecordType("<1962,1973,41>",(s.substring)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (s) != "undefined") {_RecordType("<1962,1963,41>",(s)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1974,1975,41>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1977,1978,41>",(i)); Inst28++; } } catch(e) {}
    c = s.substring(i, i + 1);
try { if (Inst24 <= 1000 && typeof (c) != "undefined") {_RecordType("<1958,1959,41>",(c)); Inst24++; } } catch(e) {}
    for (j = 0; j < a.length; j++) {
try { if (Inst29 <= 1000 && typeof (j) != "undefined") {_RecordType("<1994,1995,42>",(j)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (j) != "undefined") {_RecordType("<2001,2002,42>",(j)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<2005,2013,42>",(a.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<2005,2006,42>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (j) != "undefined") {_RecordType("<2015,2016,42>",(j)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (a.substring) != "undefined") {_RecordType("<2032,2043,43>",(a.substring)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (a) != "undefined") {_RecordType("<2032,2033,43>",(a)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (j) != "undefined") {_RecordType("<2044,2045,43>",(j)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (j) != "undefined") {_RecordType("<2047,2048,43>",(j)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (c) != "undefined") {_RecordType("<2057,2058,43>",(c)); Inst38++; } } catch(e) {}
      if (a.substring(j, j + 1) == c) {
try { if (Inst40 <= 1000 && typeof (b.substring) != "undefined") {_RecordType("<2074,2085,44>",(b.substring)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (b) != "undefined") {_RecordType("<2074,2075,44>",(b)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (j) != "undefined") {_RecordType("<2086,2087,44>",(j)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (j) != "undefined") {_RecordType("<2089,2090,44>",(j)); Inst43++; } } catch(e) {}
        c = b.substring(j, j + 1);
try { if (Inst39 <= 1000 && typeof (c) != "undefined") {_RecordType("<2070,2071,44>",(c)); Inst39++; } } catch(e) {}
      }
    }
try { if (Inst45 <= 1000 && typeof (c) != "undefined") {_RecordType("<2120,2121,47>",(c)); Inst45++; } } catch(e) {}
    r += c;
try { if (Inst44 <= 1000 && typeof (r) != "undefined") {_RecordType("<2115,2116,47>",(r)); Inst44++; } } catch(e) {}
  }

try { if (Inst46 <= 1000 && typeof (r.toLowerCase) != "undefined") {_RecordType("<2137,2150,50>",(r.toLowerCase)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (r) != "undefined") {_RecordType("<2137,2138,50>",(r)); Inst47++; } } catch(e) {}
  return r.toLowerCase();
}

try { if (Inst51 <= 1000 && typeof (bar) != "undefined") {_RecordType("<2187,2190,53>",(bar)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2191,2194,53>",(foo)); Inst52++; } } catch(e) {}
for (var i = 0; i < 100; i++) bar(foo);
try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<2166,2167,53>",(i)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (i) != "undefined") {_RecordType("<2173,2174,53>",(i)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<2182,2183,53>",(i)); Inst50++; } } catch(e) {}

