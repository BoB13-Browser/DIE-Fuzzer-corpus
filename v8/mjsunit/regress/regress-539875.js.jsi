var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

try { if (Inst0 <= 1000 && typeof (testSeal) != "undefined") {_RecordType("<178,186,5>",(testSeal)); Inst0++; } } catch(e) {}
(function testSeal() {
try { if (Inst2 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<206,215,6>",(arguments)); Inst2++; } } catch(e) {}
  var sloppy = arguments;
try { if (Inst1 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<197,203,6>",(sloppy)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<229,235,7>",(Symbol)); Inst4++; } } catch(e) {}
  var sym = Symbol();
try { if (Inst3 <= 1000 && typeof (sym) != "undefined") {_RecordType("<223,226,7>",(sym)); Inst3++; } } catch(e) {}
  sloppy[sym] = 123;
try { if (Inst5 <= 1000 && typeof (sloppy[sym]) != "undefined") {_RecordType("<241,252,8>",(sloppy[sym])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<241,247,8>",(sloppy)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (Object.seal) != "undefined") {_RecordType("<262,273,9>",(Object.seal)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Object) != "undefined") {_RecordType("<262,268,9>",(Object)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<274,280,9>",(sloppy)); Inst9++; } } catch(e) {}
  Object.seal(sloppy);
try { if (Inst10 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<285,295,10>",(assertTrue)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<296,311,10>",(Object.isSealed)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Object) != "undefined") {_RecordType("<296,302,10>",(Object)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<312,318,10>",(sloppy)); Inst13++; } } catch(e) {}
  assertTrue(Object.isSealed(sloppy));
try { if (Inst15 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<335,366,11>",(Object.getOwnPropertyDescriptor)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object) != "undefined") {_RecordType("<335,341,11>",(Object)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<367,373,11>",(sloppy)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (sym) != "undefined") {_RecordType("<375,378,11>",(sym)); Inst18++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(sloppy, sym);
try { if (Inst14 <= 1000 && typeof (desc) != "undefined") {_RecordType("<328,332,11>",(desc)); Inst14++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<383,395,12>",(assertEquals)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (desc.value) != "undefined") {_RecordType("<401,411,12>",(desc.value)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<401,405,12>",(desc)); Inst21++; } } catch(e) {}
  assertEquals(123, desc.value);
try { if (Inst22 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<416,427,13>",(assertFalse)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<428,445,13>",(desc.configurable)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (desc) != "undefined") {_RecordType("<428,432,13>",(desc)); Inst24++; } } catch(e) {}
  assertFalse(desc.configurable);
try { if (Inst25 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<450,460,14>",(assertTrue)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<461,474,14>",(desc.writable)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (desc) != "undefined") {_RecordType("<461,465,14>",(desc)); Inst27++; } } catch(e) {}
  assertTrue(desc.writable);
})();


try { if (Inst28 <= 1000 && typeof (testFreeze) != "undefined") {_RecordType("<495,505,18>",(testFreeze)); Inst28++; } } catch(e) {}
(function testFreeze() {
try { if (Inst30 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<525,534,19>",(arguments)); Inst30++; } } catch(e) {}
  var sloppy = arguments;
try { if (Inst29 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<516,522,19>",(sloppy)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<548,554,20>",(Symbol)); Inst32++; } } catch(e) {}
  var sym = Symbol();
try { if (Inst31 <= 1000 && typeof (sym) != "undefined") {_RecordType("<542,545,20>",(sym)); Inst31++; } } catch(e) {}
  sloppy[sym] = 123;
try { if (Inst33 <= 1000 && typeof (sloppy[sym]) != "undefined") {_RecordType("<560,571,21>",(sloppy[sym])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<560,566,21>",(sloppy)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<581,594,22>",(Object.freeze)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Object) != "undefined") {_RecordType("<581,587,22>",(Object)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<595,601,22>",(sloppy)); Inst37++; } } catch(e) {}
  Object.freeze(sloppy);
try { if (Inst38 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<606,616,23>",(assertTrue)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Object.isFrozen) != "undefined") {_RecordType("<617,632,23>",(Object.isFrozen)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Object) != "undefined") {_RecordType("<617,623,23>",(Object)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<633,639,23>",(sloppy)); Inst41++; } } catch(e) {}
  assertTrue(Object.isFrozen(sloppy));
try { if (Inst43 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<656,687,24>",(Object.getOwnPropertyDescriptor)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Object) != "undefined") {_RecordType("<656,662,24>",(Object)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (sloppy) != "undefined") {_RecordType("<688,694,24>",(sloppy)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (sym) != "undefined") {_RecordType("<696,699,24>",(sym)); Inst46++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(sloppy, sym);
try { if (Inst42 <= 1000 && typeof (desc) != "undefined") {_RecordType("<649,653,24>",(desc)); Inst42++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<704,716,25>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (desc.value) != "undefined") {_RecordType("<722,732,25>",(desc.value)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (desc) != "undefined") {_RecordType("<722,726,25>",(desc)); Inst49++; } } catch(e) {}
  assertEquals(123, desc.value);
try { if (Inst50 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<737,748,26>",(assertFalse)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<749,766,26>",(desc.configurable)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (desc) != "undefined") {_RecordType("<749,753,26>",(desc)); Inst52++; } } catch(e) {}
  assertFalse(desc.configurable);
try { if (Inst53 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<771,782,27>",(assertFalse)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (desc.writable) != "undefined") {_RecordType("<783,796,27>",(desc.writable)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (desc) != "undefined") {_RecordType("<783,787,27>",(desc)); Inst55++; } } catch(e) {}
  assertFalse(desc.writable);
})();


try { if (Inst56 <= 1000 && typeof (testIsFrozenAndIsSealed) != "undefined") {_RecordType("<817,840,31>",(testIsFrozenAndIsSealed)); Inst56++; } } catch(e) {}
(function testIsFrozenAndIsSealed() {
try { if (Inst58 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<857,863,32>",(Symbol)); Inst58++; } } catch(e) {}
  var sym = Symbol();
try { if (Inst57 <= 1000 && typeof (sym) != "undefined") {_RecordType("<851,854,32>",(sym)); Inst57++; } } catch(e) {}
  var obj = { [sym]: 123 };
try { if (Inst59 <= 1000 && typeof (obj) != "undefined") {_RecordType("<873,876,33>",(obj)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (Object.preventExtensions) != "undefined") {_RecordType("<897,921,34>",(Object.preventExtensions)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object) != "undefined") {_RecordType("<897,903,34>",(Object)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (obj) != "undefined") {_RecordType("<922,925,34>",(obj)); Inst62++; } } catch(e) {}
  Object.preventExtensions(obj);
try { if (Inst63 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<930,941,35>",(assertFalse)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Object.isFrozen) != "undefined") {_RecordType("<942,957,35>",(Object.isFrozen)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Object) != "undefined") {_RecordType("<942,948,35>",(Object)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (obj) != "undefined") {_RecordType("<958,961,35>",(obj)); Inst66++; } } catch(e) {}
  assertFalse(Object.isFrozen(obj));
try { if (Inst67 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<967,978,36>",(assertFalse)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object.isSealed) != "undefined") {_RecordType("<979,994,36>",(Object.isSealed)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Object) != "undefined") {_RecordType("<979,985,36>",(Object)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (obj) != "undefined") {_RecordType("<995,998,36>",(obj)); Inst70++; } } catch(e) {}
  assertFalse(Object.isSealed(obj));
})();

