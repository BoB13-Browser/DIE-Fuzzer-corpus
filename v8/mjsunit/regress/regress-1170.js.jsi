var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

var setter_value = 0;
try { if (Inst0 <= 1000 && typeof (setter_value) != "undefined") {_RecordType("<1602,1614,28>",(setter_value)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (this.__defineSetter__) != "undefined") {_RecordType("<1621,1642,30>",(this.__defineSetter__)); Inst1++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (v) != "undefined") {_RecordType("<1677,1678,30>",(v)); Inst4++; } } catch(e) {}
this.__defineSetter__("a", function(v) { setter_value = v; });
try { if (Inst2 <= 1000 && typeof (v) != "undefined") {_RecordType("<1657,1658,30>",(v)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (setter_value) != "undefined") {_RecordType("<1662,1674,30>",(setter_value)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (eval) != "undefined") {_RecordType("<1684,1688,31>",(eval)); Inst5++; } } catch(e) {}
eval("var a = 1");
try { if (Inst6 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1703,1715,32>",(assertEquals)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (setter_value) != "undefined") {_RecordType("<1719,1731,32>",(setter_value)); Inst7++; } } catch(e) {}
assertEquals(1, setter_value);
try { if (Inst8 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1734,1745,33>",(assertFalse)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1757,1788,33>",(Object.getOwnPropertyDescriptor)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1757,1763,33>",(Object)); Inst10++; } } catch(e) {}
assertFalse("value" in Object.getOwnPropertyDescriptor(this, "a"));

try { if (Inst11 <= 1000 && typeof (eval) != "undefined") {_RecordType("<1803,1807,35>",(eval)); Inst11++; } } catch(e) {}
eval("with({}) { eval('var a = 2') }");
try { if (Inst12 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1843,1853,36>",(assertTrue)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1863,1894,36>",(Object.getOwnPropertyDescriptor)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1863,1869,36>",(Object)); Inst14++; } } catch(e) {}
assertTrue("get" in Object.getOwnPropertyDescriptor(this, "a"));
try { if (Inst15 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1908,1919,37>",(assertFalse)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1931,1962,37>",(Object.getOwnPropertyDescriptor)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1931,1937,37>",(Object)); Inst17++; } } catch(e) {}
assertFalse("value" in Object.getOwnPropertyDescriptor(this, "a"));
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1976,1988,38>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (setter_value) != "undefined") {_RecordType("<1992,2004,38>",(setter_value)); Inst19++; } } catch(e) {}
assertEquals(2, setter_value);

// Function declarations are treated specially to match Safari. We do
// not call setters for them.
try { if (Inst20 <= 1000 && typeof (this.__defineSetter__) != "undefined") {_RecordType("<2108,2129,42>",(this.__defineSetter__)); Inst20++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<2149,2166,42>",(assertUnreachable)); Inst22++; } } catch(e) {}
this.__defineSetter__("a", function(v) { assertUnreachable(); });
try { if (Inst21 <= 1000 && typeof (v) != "undefined") {_RecordType("<2144,2145,42>",(v)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2174,2178,43>",(eval)); Inst23++; } } catch(e) {}
eval("function a() {}");
try { if (Inst24 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2199,2209,44>",(assertTrue)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2221,2252,44>",(Object.getOwnPropertyDescriptor)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2221,2227,44>",(Object)); Inst26++; } } catch(e) {}
assertTrue("value" in Object.getOwnPropertyDescriptor(this, "a"));

try { if (Inst27 <= 1000 && typeof (this.__defineSetter__) != "undefined") {_RecordType("<2267,2288,46>",(this.__defineSetter__)); Inst27++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (v) != "undefined") {_RecordType("<2323,2324,46>",(v)); Inst30++; } } catch(e) {}
this.__defineSetter__("b", function(v) { setter_value = v; });
try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<2303,2304,46>",(v)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (setter_value) != "undefined") {_RecordType("<2308,2320,46>",(setter_value)); Inst29++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<2367,2368,49>",(e)); Inst32++; } } catch(e) {}
try {
try { if (Inst31 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2338,2342,48>",(eval)); Inst31++; } } catch(e) {}
  eval("const b = 3");
} catch(e) { }
try { if (Inst33 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2374,2386,50>",(assertEquals)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (setter_value) != "undefined") {_RecordType("<2390,2402,50>",(setter_value)); Inst34++; } } catch(e) {}
assertEquals(2, setter_value);

try { if (Inst36 <= 1000 && typeof (e) != "undefined") {_RecordType("<2465,2466,54>",(e)); Inst36++; } } catch(e) {}
try {
try { if (Inst35 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2414,2418,53>",(eval)); Inst35++; } } catch(e) {}
  eval("with({}) { eval('const b = 23') }");
} catch(e) {
try { if (Inst37 <= 1000 && typeof (assertInstanceof) != "undefined") {_RecordType("<2472,2488,55>",(assertInstanceof)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<2489,2490,55>",(e)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<2492,2501,55>",(TypeError)); Inst39++; } } catch(e) {}
  assertInstanceof(e, TypeError);
}

try { if (Inst40 <= 1000 && typeof (this.__defineSetter__) != "undefined") {_RecordType("<2507,2528,58>",(this.__defineSetter__)); Inst40++; } } catch(e) {}
this.__defineSetter__("c", function(v) { throw 42; });
try { if (Inst41 <= 1000 && typeof (v) != "undefined") {_RecordType("<2543,2544,58>",(v)); Inst41++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (e) != "undefined") {_RecordType("<2620,2621,62>",(e)); Inst44++; } } catch(e) {}
try {
try { if (Inst42 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2570,2574,60>",(eval)); Inst42++; } } catch(e) {}
  eval("var c = 1");
try { if (Inst43 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<2591,2608,61>",(assertUnreachable)); Inst43++; } } catch(e) {}
  assertUnreachable();
} catch(e) {
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2627,2639,63>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<2644,2645,63>",(e)); Inst46++; } } catch(e) {}
  assertEquals(42, e);
try { if (Inst47 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2650,2661,64>",(assertFalse)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2673,2704,64>",(Object.getOwnPropertyDescriptor)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2673,2679,64>",(Object)); Inst49++; } } catch(e) {}
  assertFalse("value" in Object.getOwnPropertyDescriptor(this, "c"));
}




try { if (Inst50 <= 1000 && typeof (__proto__.__defineSetter__) != "undefined") {_RecordType("<2724,2750,70>",(__proto__.__defineSetter__)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<2724,2733,70>",(__proto__)); Inst51++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<2771,2788,70>",(assertUnreachable)); Inst53++; } } catch(e) {}
__proto__.__defineSetter__("aa", function(v) { assertUnreachable(); });
try { if (Inst52 <= 1000 && typeof (v) != "undefined") {_RecordType("<2766,2767,70>",(v)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2796,2800,71>",(eval)); Inst54++; } } catch(e) {}
eval("var aa = 1");
try { if (Inst55 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2816,2826,72>",(assertTrue)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (this.hasOwnProperty) != "undefined") {_RecordType("<2827,2846,72>",(this.hasOwnProperty)); Inst56++; } } catch(e) {}
assertTrue(this.hasOwnProperty("aa"));

try { if (Inst57 <= 1000 && typeof (__proto__.__defineSetter__) != "undefined") {_RecordType("<2856,2882,74>",(__proto__.__defineSetter__)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<2856,2865,74>",(__proto__)); Inst58++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<2903,2920,74>",(assertUnreachable)); Inst60++; } } catch(e) {}
__proto__.__defineSetter__("bb", function(v) { assertUnreachable(); });
try { if (Inst59 <= 1000 && typeof (v) != "undefined") {_RecordType("<2898,2899,74>",(v)); Inst59++; } } catch(e) {}
try { if (Inst61 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2928,2932,75>",(eval)); Inst61++; } } catch(e) {}
eval("with({}) { eval('var bb = 2') }");
try { if (Inst62 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2969,2979,76>",(assertTrue)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (this.hasOwnProperty) != "undefined") {_RecordType("<2980,2999,76>",(this.hasOwnProperty)); Inst63++; } } catch(e) {}
assertTrue(this.hasOwnProperty("bb"));

// Function declarations are treated specially to match Safari. We do
// not call setters for them.
try { if (Inst64 <= 1000 && typeof (__proto__.__defineSetter__) != "undefined") {_RecordType("<3109,3135,80>",(__proto__.__defineSetter__)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<3109,3118,80>",(__proto__)); Inst65++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<3156,3173,80>",(assertUnreachable)); Inst67++; } } catch(e) {}
__proto__.__defineSetter__("cc", function(v) { assertUnreachable(); });
try { if (Inst66 <= 1000 && typeof (v) != "undefined") {_RecordType("<3151,3152,80>",(v)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3181,3185,81>",(eval)); Inst68++; } } catch(e) {}
eval("function cc() {}");
try { if (Inst69 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3207,3217,82>",(assertTrue)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (this.hasOwnProperty) != "undefined") {_RecordType("<3218,3237,82>",(this.hasOwnProperty)); Inst70++; } } catch(e) {}
assertTrue(this.hasOwnProperty("cc"));

try { if (Inst71 <= 1000 && typeof (__proto__.__defineSetter__) != "undefined") {_RecordType("<3247,3273,84>",(__proto__.__defineSetter__)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (__proto__) != "undefined") {_RecordType("<3247,3256,84>",(__proto__)); Inst72++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<3294,3311,84>",(assertUnreachable)); Inst74++; } } catch(e) {}
__proto__.__defineSetter__("dd", function(v) { assertUnreachable(); });
try { if (Inst73 <= 1000 && typeof (v) != "undefined") {_RecordType("<3289,3290,84>",(v)); Inst73++; } } catch(e) {}
try { if (Inst76 <= 1000 && typeof (e) != "undefined") {_RecordType("<3358,3359,87>",(e)); Inst76++; } } catch(e) {}
try {
try { if (Inst75 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3327,3331,86>",(eval)); Inst75++; } } catch(e) {}
  eval("const dd = 23");
} catch(e) {
try { if (Inst77 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<3365,3382,88>",(assertUnreachable)); Inst77++; } } catch(e) {}
  assertUnreachable();
}

try { if (Inst79 <= 1000 && typeof (e) != "undefined") {_RecordType("<3449,3450,93>",(e)); Inst79++; } } catch(e) {}
try {
try { if (Inst78 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3397,3401,92>",(eval)); Inst78++; } } catch(e) {}
  eval("with({}) { eval('const dd = 23') }");
} catch(e) {
try { if (Inst80 <= 1000 && typeof (assertInstanceof) != "undefined") {_RecordType("<3456,3472,94>",(assertInstanceof)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (e) != "undefined") {_RecordType("<3473,3474,94>",(e)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<3476,3485,94>",(TypeError)); Inst82++; } } catch(e) {}
  assertInstanceof(e, TypeError);
}

