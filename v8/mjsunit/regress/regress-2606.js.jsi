var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Check baseline for __proto__.
try { if (Inst1 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<1642,1673,29>",(Object.getOwnPropertyDescriptor)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1642,1648,29>",(Object)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1674,1690,29>",(Object.prototype)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1674,1680,29>",(Object)); Inst4++; } } catch(e) {}
var desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
try { if (Inst0 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1635,1639,29>",(desc)); Inst0++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1706,1717,30>",(assertFalse)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<1718,1733,30>",(desc.enumerable)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1718,1722,30>",(desc)); Inst7++; } } catch(e) {}
assertFalse(desc.enumerable);
try { if (Inst8 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1736,1746,31>",(assertTrue)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<1747,1764,31>",(desc.configurable)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1747,1751,31>",(desc)); Inst10++; } } catch(e) {}
assertTrue(desc.configurable);
try { if (Inst11 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1767,1779,32>",(assertEquals)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<1799,1807,32>",(desc.get)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1799,1803,32>",(desc)); Inst13++; } } catch(e) {}
assertEquals("function", typeof desc.get);
try { if (Inst14 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1810,1822,33>",(assertEquals)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<1842,1850,33>",(desc.set)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1842,1846,33>",(desc)); Inst16++; } } catch(e) {}
assertEquals("function", typeof desc.set);

// Check redefining getter for __proto__.
try { if (Inst17 <= 1000 && typeof (replaced_get) != "undefined") {_RecordType("<1905,1917,36>",(replaced_get)); Inst17++; } } catch(e) {}
function replaced_get() {};
try { if (Inst18 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1924,1945,37>",(Object.defineProperty)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1924,1930,37>",(Object)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1946,1962,37>",(Object.prototype)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1946,1952,37>",(Object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (replaced_get) != "undefined") {_RecordType("<1983,1995,37>",(replaced_get)); Inst22++; } } catch(e) {}
Object.defineProperty(Object.prototype, "__proto__", { get:replaced_get });
try { if (Inst24 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2007,2038,38>",(Object.getOwnPropertyDescriptor)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2007,2013,38>",(Object)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2039,2055,38>",(Object.prototype)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2039,2045,38>",(Object)); Inst27++; } } catch(e) {}
desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
try { if (Inst23 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2000,2004,38>",(desc)); Inst23++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2071,2082,39>",(assertFalse)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<2083,2098,39>",(desc.enumerable)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2083,2087,39>",(desc)); Inst30++; } } catch(e) {}
assertFalse(desc.enumerable);
try { if (Inst31 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2101,2111,40>",(assertTrue)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<2112,2129,40>",(desc.configurable)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2112,2116,40>",(desc)); Inst33++; } } catch(e) {}
assertTrue(desc.configurable);
try { if (Inst34 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2132,2142,41>",(assertSame)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (replaced_get) != "undefined") {_RecordType("<2143,2155,41>",(replaced_get)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<2157,2165,41>",(desc.get)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2157,2161,41>",(desc)); Inst37++; } } catch(e) {}
assertSame(replaced_get, desc.get);

// Check redefining setter for __proto__.
try { if (Inst38 <= 1000 && typeof (replaced_set) != "undefined") {_RecordType("<2220,2232,44>",(replaced_set)); Inst38++; } } catch(e) {}
function replaced_set(x) {};
try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<2233,2234,44>",(x)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2240,2261,45>",(Object.defineProperty)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2240,2246,45>",(Object)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2262,2278,45>",(Object.prototype)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2262,2268,45>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (replaced_set) != "undefined") {_RecordType("<2299,2311,45>",(replaced_set)); Inst44++; } } catch(e) {}
Object.defineProperty(Object.prototype, "__proto__", { set:replaced_set });
try { if (Inst46 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2323,2354,46>",(Object.getOwnPropertyDescriptor)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2323,2329,46>",(Object)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2355,2371,46>",(Object.prototype)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2355,2361,46>",(Object)); Inst49++; } } catch(e) {}
desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
try { if (Inst45 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2316,2320,46>",(desc)); Inst45++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2387,2398,47>",(assertFalse)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<2399,2414,47>",(desc.enumerable)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2399,2403,47>",(desc)); Inst52++; } } catch(e) {}
assertFalse(desc.enumerable);
try { if (Inst53 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2417,2427,48>",(assertTrue)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<2428,2445,48>",(desc.configurable)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2428,2432,48>",(desc)); Inst55++; } } catch(e) {}
assertTrue(desc.configurable);
try { if (Inst56 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2448,2458,49>",(assertSame)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (replaced_set) != "undefined") {_RecordType("<2459,2471,49>",(replaced_set)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<2473,2481,49>",(desc.set)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2473,2477,49>",(desc)); Inst59++; } } catch(e) {}
assertSame(replaced_set, desc.set);

// Check changing configurability of __proto__.
try { if (Inst60 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2533,2554,52>",(Object.defineProperty)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2533,2539,52>",(Object)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2555,2571,52>",(Object.prototype)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2555,2561,52>",(Object)); Inst63++; } } catch(e) {}
Object.defineProperty(Object.prototype, "__proto__", { configurable:false });
try { if (Inst65 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2618,2649,53>",(Object.getOwnPropertyDescriptor)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2618,2624,53>",(Object)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2650,2666,53>",(Object.prototype)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2650,2656,53>",(Object)); Inst68++; } } catch(e) {}
desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
try { if (Inst64 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2611,2615,53>",(desc)); Inst64++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2682,2693,54>",(assertFalse)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (desc.enumerable) != "undefined") {_RecordType("<2694,2709,54>",(desc.enumerable)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2694,2698,54>",(desc)); Inst71++; } } catch(e) {}
assertFalse(desc.enumerable);
try { if (Inst72 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2712,2723,55>",(assertFalse)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (desc.configurable) != "undefined") {_RecordType("<2724,2741,55>",(desc.configurable)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2724,2728,55>",(desc)); Inst74++; } } catch(e) {}
assertFalse(desc.configurable);
try { if (Inst75 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2744,2754,56>",(assertSame)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (replaced_get) != "undefined") {_RecordType("<2755,2767,56>",(replaced_get)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<2769,2777,56>",(desc.get)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2769,2773,56>",(desc)); Inst78++; } } catch(e) {}
assertSame(replaced_get, desc.get);
try { if (Inst79 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2780,2790,57>",(assertSame)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (replaced_set) != "undefined") {_RecordType("<2791,2803,57>",(replaced_set)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<2805,2813,57>",(desc.set)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (desc) != "undefined") {_RecordType("<2805,2809,57>",(desc)); Inst82++; } } catch(e) {}
assertSame(replaced_set, desc.set);

// Check freezing Object.prototype completely.
try { if (Inst83 <= 1000 && typeof (Object.freeze) != "undefined") {_RecordType("<2864,2877,60>",(Object.freeze)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2864,2870,60>",(Object)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2878,2894,60>",(Object.prototype)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2878,2884,60>",(Object)); Inst86++; } } catch(e) {}
Object.freeze(Object.prototype);
try { if (Inst87 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2897,2907,61>",(assertTrue)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Object.isFrozen) != "undefined") {_RecordType("<2908,2923,61>",(Object.isFrozen)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2908,2914,61>",(Object)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<2924,2940,61>",(Object.prototype)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2924,2930,61>",(Object)); Inst91++; } } catch(e) {}
assertTrue(Object.isFrozen(Object.prototype));

