var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

try { if (Inst0 <= 1000 && typeof (props) != "undefined") {_RecordType("<1607,1612,28>",(props)); Inst0++; } } catch(e) {}
function props(x) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1613,1614,28>",(x)); Inst1++; } } catch(e) {}
  var result = [];
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<1624,1630,29>",(result)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (result.push) != "undefined") {_RecordType("<1656,1667,30>",(result.push)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (result) != "undefined") {_RecordType("<1656,1662,30>",(result)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (p) != "undefined") {_RecordType("<1668,1669,30>",(p)); Inst7++; } } catch(e) {}
  for (var p in x) result.push(p);
try { if (Inst3 <= 1000 && typeof (p) != "undefined") {_RecordType("<1648,1649,30>",(p)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1653,1654,30>",(x)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<1681,1687,31>",(result)); Inst8++; } } catch(e) {}
  return result;
}

try { if (Inst9 <= 1000 && typeof (A) != "undefined") {_RecordType("<1701,1702,34>",(A)); Inst9++; } } catch(e) {}
function A() {
  this.a1 = 1234;
try { if (Inst10 <= 1000 && typeof (this.a1) != "undefined") {_RecordType("<1709,1716,35>",(this.a1)); Inst10++; } } catch(e) {}
  this.a2 = "D";
try { if (Inst11 <= 1000 && typeof (this.a2) != "undefined") {_RecordType("<1727,1734,36>",(this.a2)); Inst11++; } } catch(e) {}
  this.a3 = false;
try { if (Inst12 <= 1000 && typeof (this.a3) != "undefined") {_RecordType("<1744,1751,37>",(this.a3)); Inst12++; } } catch(e) {}
}

try { if (Inst13 <= 1000 && typeof (B) != "undefined") {_RecordType("<1773,1774,40>",(B)); Inst13++; } } catch(e) {}
function B() {
  this.b3 = false;
try { if (Inst14 <= 1000 && typeof (this.b3) != "undefined") {_RecordType("<1781,1788,41>",(this.b3)); Inst14++; } } catch(e) {}
  this.b2 = "D";
try { if (Inst15 <= 1000 && typeof (this.b2) != "undefined") {_RecordType("<1800,1807,42>",(this.b2)); Inst15++; } } catch(e) {}
  this.b1 = 1234;
try { if (Inst16 <= 1000 && typeof (this.b1) != "undefined") {_RecordType("<1817,1824,43>",(this.b1)); Inst16++; } } catch(e) {}
}

try { if (Inst17 <= 1000 && typeof (C) != "undefined") {_RecordType("<1845,1846,46>",(C)); Inst17++; } } catch(e) {}
function C() {
  this.c3 = false;
try { if (Inst18 <= 1000 && typeof (this.c3) != "undefined") {_RecordType("<1853,1860,47>",(this.c3)); Inst18++; } } catch(e) {}
  this.c1 = 1234;
try { if (Inst19 <= 1000 && typeof (this.c1) != "undefined") {_RecordType("<1872,1879,48>",(this.c1)); Inst19++; } } catch(e) {}
  this.c2 = "D";
try { if (Inst20 <= 1000 && typeof (this.c2) != "undefined") {_RecordType("<1890,1897,49>",(this.c2)); Inst20++; } } catch(e) {}
}

try { if (Inst21 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1908,1925,52>",(assertArrayEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (props) != "undefined") {_RecordType("<1946,1951,52>",(props)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (A) != "undefined") {_RecordType("<1956,1957,52>",(A)); Inst23++; } } catch(e) {}
assertArrayEquals(["a1", "a2", "a3"], props(new A()));
try { if (Inst24 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<1963,1980,53>",(assertArrayEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (props) != "undefined") {_RecordType("<2001,2006,53>",(props)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (B) != "undefined") {_RecordType("<2011,2012,53>",(B)); Inst26++; } } catch(e) {}
assertArrayEquals(["b3", "b2", "b1"], props(new B()));
try { if (Inst27 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2018,2035,54>",(assertArrayEquals)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (props) != "undefined") {_RecordType("<2056,2061,54>",(props)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (C) != "undefined") {_RecordType("<2066,2067,54>",(C)); Inst29++; } } catch(e) {}
assertArrayEquals(["c3", "c1", "c2"], props(new C()));
try { if (Inst30 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2073,2090,55>",(assertArrayEquals)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (props) != "undefined") {_RecordType("<2111,2116,55>",(props)); Inst31++; } } catch(e) {}
assertArrayEquals(["s1", "s2", "s3"], props({s1: 0, s2: 0, s3: 0}));
try { if (Inst32 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2142,2159,56>",(assertArrayEquals)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (props) != "undefined") {_RecordType("<2180,2185,56>",(props)); Inst33++; } } catch(e) {}
assertArrayEquals(["s3", "s2", "s1"], props({s3: 0, s2: 0, s1: 0}));
try { if (Inst34 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2211,2228,57>",(assertArrayEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (props) != "undefined") {_RecordType("<2249,2254,57>",(props)); Inst35++; } } catch(e) {}
assertArrayEquals(["s3", "s1", "s2"], props({s3: 0, s1: 0, s2: 0}));

try { if (Inst37 <= 1000 && typeof (A) != "undefined") {_RecordType("<2293,2294,59>",(A)); Inst37++; } } catch(e) {}
var a = new A()
try { if (Inst36 <= 1000 && typeof (a) != "undefined") {_RecordType("<2285,2286,59>",(a)); Inst36++; } } catch(e) {}
a.a0 = 0;
try { if (Inst38 <= 1000 && typeof (a.a0) != "undefined") {_RecordType("<2297,2301,60>",(a.a0)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (a) != "undefined") {_RecordType("<2297,2298,60>",(a)); Inst39++; } } catch(e) {}
a.a4 = 0;
try { if (Inst40 <= 1000 && typeof (a.a4) != "undefined") {_RecordType("<2307,2311,61>",(a.a4)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<2307,2308,61>",(a)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2317,2334,62>",(assertArrayEquals)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (props) != "undefined") {_RecordType("<2367,2372,62>",(props)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a) != "undefined") {_RecordType("<2373,2374,62>",(a)); Inst44++; } } catch(e) {}
assertArrayEquals(["a1", "a2", "a3", "a0", "a4"], props(a));

try { if (Inst46 <= 1000 && typeof (B) != "undefined") {_RecordType("<2391,2392,64>",(B)); Inst46++; } } catch(e) {}
var b = new B()
try { if (Inst45 <= 1000 && typeof (b) != "undefined") {_RecordType("<2383,2384,64>",(b)); Inst45++; } } catch(e) {}
b.b4 = 0;
try { if (Inst47 <= 1000 && typeof (b.b4) != "undefined") {_RecordType("<2395,2399,65>",(b.b4)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (b) != "undefined") {_RecordType("<2395,2396,65>",(b)); Inst48++; } } catch(e) {}
b.b0 = 0;
try { if (Inst49 <= 1000 && typeof (b.b0) != "undefined") {_RecordType("<2405,2409,66>",(b.b0)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (b) != "undefined") {_RecordType("<2405,2406,66>",(b)); Inst50++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2415,2432,67>",(assertArrayEquals)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (props) != "undefined") {_RecordType("<2465,2470,67>",(props)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (b) != "undefined") {_RecordType("<2471,2472,67>",(b)); Inst53++; } } catch(e) {}
assertArrayEquals(["b3", "b2", "b1", "b4", "b0"], props(b));

var o1 = {s1: 0, s2: 0, s3: 0}
try { if (Inst54 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2481,2483,69>",(o1)); Inst54++; } } catch(e) {}
o1.s0 = 0;
try { if (Inst55 <= 1000 && typeof (o1.s0) != "undefined") {_RecordType("<2508,2513,70>",(o1.s0)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2508,2510,70>",(o1)); Inst56++; } } catch(e) {}
o1.s4 = 0;
try { if (Inst57 <= 1000 && typeof (o1.s4) != "undefined") {_RecordType("<2519,2524,71>",(o1.s4)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2519,2521,71>",(o1)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2530,2547,72>",(assertArrayEquals)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (props) != "undefined") {_RecordType("<2580,2585,72>",(props)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (o1) != "undefined") {_RecordType("<2586,2588,72>",(o1)); Inst61++; } } catch(e) {}
assertArrayEquals(["s1", "s2", "s3", "s0", "s4"], props(o1));

var o2 = {s3: 0, s2: 0, s1: 0}
try { if (Inst62 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2597,2599,74>",(o2)); Inst62++; } } catch(e) {}
o2.s4 = 0;
try { if (Inst63 <= 1000 && typeof (o2.s4) != "undefined") {_RecordType("<2624,2629,75>",(o2.s4)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2624,2626,75>",(o2)); Inst64++; } } catch(e) {}
o2.s0 = 0;
try { if (Inst65 <= 1000 && typeof (o2.s0) != "undefined") {_RecordType("<2635,2640,76>",(o2.s0)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2635,2637,76>",(o2)); Inst66++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2646,2663,77>",(assertArrayEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (props) != "undefined") {_RecordType("<2696,2701,77>",(props)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (o2) != "undefined") {_RecordType("<2702,2704,77>",(o2)); Inst69++; } } catch(e) {}
assertArrayEquals(["s3", "s2", "s1", "s4", "s0"], props(o2));

