var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

try { if (Inst0 <= 1000 && typeof (fn1) != "undefined") {_RecordType("<177,180,5>",(fn1)); Inst0++; } } catch(e) {}
function fn1() {
}

try { if (Inst1 <= 1000 && typeof (fn2) != "undefined") {_RecordType("<197,200,8>",(fn2)); Inst1++; } } catch(e) {}
function fn2() {
}

try { if (Inst2 <= 1000 && typeof (fn3) != "undefined") {_RecordType("<217,220,11>",(fn3)); Inst2++; } } catch(e) {}
function fn3() {
}

try { if (Inst3 <= 1000 && typeof (create) != "undefined") {_RecordType("<237,243,14>",(create)); Inst3++; } } catch(e) {}
function create(id) {
try { if (Inst4 <= 1000 && typeof (id) != "undefined") {_RecordType("<244,246,14>",(id)); Inst4++; } } catch(e) {}
  // Just some `FunctionTemplate` to hang on
try { if (Inst6 <= 1000 && typeof (version) != "undefined") {_RecordType("<309,316,16>",(version)); Inst6++; } } catch(e) {}
  var o = new version();
try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<301,302,16>",(o)); Inst5++; } } catch(e) {}

try { if (Inst9 <= 1000 && typeof (id) != "undefined") {_RecordType("<330,332,18>",(id)); Inst9++; } } catch(e) {}
  o.id = id;
try { if (Inst7 <= 1000 && typeof (o.id) != "undefined") {_RecordType("<323,327,18>",(o.id)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<323,324,18>",(o)); Inst8++; } } catch(e) {}
  o[0] = null;
try { if (Inst10 <= 1000 && typeof (o[0]) != "undefined") {_RecordType("<336,340,19>",(o[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<336,337,19>",(o)); Inst11++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (o) != "undefined") {_RecordType("<359,360,21>",(o)); Inst12++; } } catch(e) {}
  return o;
}

try { if (Inst13 <= 1000 && typeof (setM1) != "undefined") {_RecordType("<374,379,24>",(setM1)); Inst13++; } } catch(e) {}
function setM1(o) {
try { if (Inst14 <= 1000 && typeof (o) != "undefined") {_RecordType("<380,381,24>",(o)); Inst14++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (fn1) != "undefined") {_RecordType("<394,397,25>",(fn1)); Inst17++; } } catch(e) {}
  o.m1 = fn1;
try { if (Inst15 <= 1000 && typeof (o.m1) != "undefined") {_RecordType("<387,391,25>",(o.m1)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (o) != "undefined") {_RecordType("<387,388,25>",(o)); Inst16++; } } catch(e) {}
}

try { if (Inst18 <= 1000 && typeof (setM2) != "undefined") {_RecordType("<411,416,28>",(setM2)); Inst18++; } } catch(e) {}
function setM2(o) {
try { if (Inst19 <= 1000 && typeof (o) != "undefined") {_RecordType("<417,418,28>",(o)); Inst19++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (fn2) != "undefined") {_RecordType("<431,434,29>",(fn2)); Inst22++; } } catch(e) {}
  o.m2 = fn2;
try { if (Inst20 <= 1000 && typeof (o.m2) != "undefined") {_RecordType("<424,428,29>",(o.m2)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (o) != "undefined") {_RecordType("<424,425,29>",(o)); Inst21++; } } catch(e) {}
}

try { if (Inst23 <= 1000 && typeof (setAltM2) != "undefined") {_RecordType("<448,456,32>",(setAltM2)); Inst23++; } } catch(e) {}
function setAltM2(o) {
try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<457,458,32>",(o)); Inst24++; } } catch(e) {}
  // Failing StoreIC happens here
try { if (Inst27 <= 1000 && typeof (fn3) != "undefined") {_RecordType("<505,508,34>",(fn3)); Inst27++; } } catch(e) {}
  o.m2 = fn3;
try { if (Inst25 <= 1000 && typeof (o.m2) != "undefined") {_RecordType("<498,502,34>",(o.m2)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<498,499,34>",(o)); Inst26++; } } catch(e) {}
}

try { if (Inst28 <= 1000 && typeof (setAltM1) != "undefined") {_RecordType("<522,530,37>",(setAltM1)); Inst28++; } } catch(e) {}
function setAltM1(o) {
try { if (Inst29 <= 1000 && typeof (o) != "undefined") {_RecordType("<531,532,37>",(o)); Inst29++; } } catch(e) {}
  o.m1 = null;
try { if (Inst30 <= 1000 && typeof (o.m1) != "undefined") {_RecordType("<538,542,38>",(o.m1)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (o) != "undefined") {_RecordType("<538,539,38>",(o)); Inst31++; } } catch(e) {}
}

try { if (Inst32 <= 1000 && typeof (test) != "undefined") {_RecordType("<563,567,41>",(test)); Inst32++; } } catch(e) {}
function test(o) {
try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<568,569,41>",(o)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (o.m2) != "undefined") {_RecordType("<575,579,42>",(o.m2)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (o) != "undefined") {_RecordType("<575,576,42>",(o)); Inst35++; } } catch(e) {}
  o.m2();
try { if (Inst36 <= 1000 && typeof (o.m1) != "undefined") {_RecordType("<585,589,43>",(o.m1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (o) != "undefined") {_RecordType("<585,586,43>",(o)); Inst37++; } } catch(e) {}
  o.m1();
}

try { if (Inst39 <= 1000 && typeof (create) != "undefined") {_RecordType("<605,611,46>",(create)); Inst39++; } } catch(e) {}
var p0 = create(0);
try { if (Inst38 <= 1000 && typeof (p0) != "undefined") {_RecordType("<600,602,46>",(p0)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (create) != "undefined") {_RecordType("<625,631,47>",(create)); Inst41++; } } catch(e) {}
var p1 = create(1);
try { if (Inst40 <= 1000 && typeof (p1) != "undefined") {_RecordType("<620,622,47>",(p1)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (create) != "undefined") {_RecordType("<645,651,48>",(create)); Inst43++; } } catch(e) {}
var p2 = create(2);
try { if (Inst42 <= 1000 && typeof (p2) != "undefined") {_RecordType("<640,642,48>",(p2)); Inst42++; } } catch(e) {}

try { if (Inst44 <= 1000 && typeof (setM1) != "undefined") {_RecordType("<657,662,50>",(setM1)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (p0) != "undefined") {_RecordType("<663,665,50>",(p0)); Inst45++; } } catch(e) {}
setM1(p0);
try { if (Inst46 <= 1000 && typeof (setM1) != "undefined") {_RecordType("<668,673,51>",(setM1)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (p1) != "undefined") {_RecordType("<674,676,51>",(p1)); Inst47++; } } catch(e) {}
setM1(p1);
try { if (Inst48 <= 1000 && typeof (setM1) != "undefined") {_RecordType("<679,684,52>",(setM1)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (p2) != "undefined") {_RecordType("<685,687,52>",(p2)); Inst49++; } } catch(e) {}
setM1(p2);

try { if (Inst50 <= 1000 && typeof (setM2) != "undefined") {_RecordType("<691,696,54>",(setM2)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (p0) != "undefined") {_RecordType("<697,699,54>",(p0)); Inst51++; } } catch(e) {}
setM2(p0);
try { if (Inst52 <= 1000 && typeof (setAltM2) != "undefined") {_RecordType("<702,710,55>",(setAltM2)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (p0) != "undefined") {_RecordType("<711,713,55>",(p0)); Inst53++; } } catch(e) {}
setAltM2(p0);
try { if (Inst54 <= 1000 && typeof (setAltM1) != "undefined") {_RecordType("<716,724,56>",(setAltM1)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (p0) != "undefined") {_RecordType("<725,727,56>",(p0)); Inst55++; } } catch(e) {}
setAltM1(p0);

try { if (Inst56 <= 1000 && typeof (setAltM2) != "undefined") {_RecordType("<731,739,58>",(setAltM2)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (p1) != "undefined") {_RecordType("<740,742,58>",(p1)); Inst57++; } } catch(e) {}
setAltM2(p1);

try { if (Inst58 <= 1000 && typeof (setAltM2) != "undefined") {_RecordType("<746,754,60>",(setAltM2)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (p2) != "undefined") {_RecordType("<755,757,60>",(p2)); Inst59++; } } catch(e) {}
setAltM2(p2);
try { if (Inst60 <= 1000 && typeof (test) != "undefined") {_RecordType("<760,764,61>",(test)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (p2) != "undefined") {_RecordType("<765,767,61>",(p2)); Inst61++; } } catch(e) {}
test(p2);

