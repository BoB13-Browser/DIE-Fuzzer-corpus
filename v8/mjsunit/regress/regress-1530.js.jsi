var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Test that redefining the 'prototype' property of a function object
// does actually set the internal value and does not screw up any
// shadowing between said property and the internal value.

var f = function() {};
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<1798,1799,32>",(f)); Inst0++; } } catch(e) {}

// Verify that normal assignment of 'prototype' property works properly
// and updates the internal value.
var a = { foo: 'bar' };
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1929,1930,36>",(a)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (a) != "undefined") {_RecordType("<1963,1964,37>",(a)); Inst4++; } } catch(e) {}
f.prototype = a;
try { if (Inst2 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<1949,1960,37>",(f.prototype)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1949,1950,37>",(f)); Inst3++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<1966,1976,38>",(assertSame)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<1977,1988,38>",(f.prototype)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<1977,1978,38>",(f)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (a) != "undefined") {_RecordType("<1990,1991,38>",(a)); Inst8++; } } catch(e) {}
assertSame(f.prototype, a);
try { if (Inst9 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<1994,2004,39>",(assertSame)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f.prototype.foo) != "undefined") {_RecordType("<2005,2020,39>",(f.prototype.foo)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2005,2016,39>",(f.prototype)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<2005,2006,39>",(f)); Inst12++; } } catch(e) {}
assertSame(f.prototype.foo, 'bar');
try { if (Inst13 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2030,2040,40>",(assertSame)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (new f().foo) != "undefined") {_RecordType("<2041,2052,40>",(new f().foo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<2045,2046,40>",(f)); Inst15++; } } catch(e) {}
assertSame(new f().foo, 'bar');
try { if (Inst16 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2062,2072,41>",(assertSame)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<2073,2094,41>",(Object.getPrototypeOf)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2073,2079,41>",(Object)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<2099,2100,41>",(f)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (a) != "undefined") {_RecordType("<2105,2106,41>",(a)); Inst20++; } } catch(e) {}
assertSame(Object.getPrototypeOf(new f()), a);
try { if (Inst21 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2109,2119,42>",(assertSame)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').value) != "undefined") {_RecordType("<2120,2173,42>",(Object.getOwnPropertyDescriptor(f, 'prototype').value)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2120,2151,42>",(Object.getOwnPropertyDescriptor)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2120,2126,42>",(Object)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f) != "undefined") {_RecordType("<2152,2153,42>",(f)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a) != "undefined") {_RecordType("<2175,2176,42>",(a)); Inst26++; } } catch(e) {}
assertSame(Object.getOwnPropertyDescriptor(f, 'prototype').value, a);
try { if (Inst27 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2179,2189,43>",(assertTrue)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').writable) != "undefined") {_RecordType("<2190,2246,43>",(Object.getOwnPropertyDescriptor(f, 'prototype').writable)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2190,2221,43>",(Object.getOwnPropertyDescriptor)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2190,2196,43>",(Object)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<2222,2223,43>",(f)); Inst31++; } } catch(e) {}
assertTrue(Object.getOwnPropertyDescriptor(f, 'prototype').writable);

// Verify that 'prototype' behaves like a data property when it comes to
// redefining with Object.defineProperty() and the internal value gets
// updated.
var b = { foo: 'baz' };
try { if (Inst32 <= 1000 && typeof (b) != "undefined") {_RecordType("<2410,2411,48>",(b)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<2430,2451,49>",(Object.defineProperty)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2430,2436,49>",(Object)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<2452,2453,49>",(f)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (b) != "undefined") {_RecordType("<2477,2478,49>",(b)); Inst36++; } } catch(e) {}
Object.defineProperty(f, 'prototype', { value: b, writable: true });
try { if (Inst37 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2499,2509,50>",(assertSame)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2510,2521,50>",(f.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f) != "undefined") {_RecordType("<2510,2511,50>",(f)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (b) != "undefined") {_RecordType("<2523,2524,50>",(b)); Inst40++; } } catch(e) {}
assertSame(f.prototype, b);
try { if (Inst41 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2527,2537,51>",(assertSame)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (f.prototype.foo) != "undefined") {_RecordType("<2538,2553,51>",(f.prototype.foo)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2538,2549,51>",(f.prototype)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (f) != "undefined") {_RecordType("<2538,2539,51>",(f)); Inst44++; } } catch(e) {}
assertSame(f.prototype.foo, 'baz');
try { if (Inst45 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2563,2573,52>",(assertSame)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (new f().foo) != "undefined") {_RecordType("<2574,2585,52>",(new f().foo)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (f) != "undefined") {_RecordType("<2578,2579,52>",(f)); Inst47++; } } catch(e) {}
assertSame(new f().foo, 'baz');
try { if (Inst48 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2595,2605,53>",(assertSame)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<2606,2627,53>",(Object.getPrototypeOf)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2606,2612,53>",(Object)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (f) != "undefined") {_RecordType("<2632,2633,53>",(f)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (b) != "undefined") {_RecordType("<2638,2639,53>",(b)); Inst52++; } } catch(e) {}
assertSame(Object.getPrototypeOf(new f()), b);
try { if (Inst53 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2642,2652,54>",(assertSame)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').value) != "undefined") {_RecordType("<2653,2706,54>",(Object.getOwnPropertyDescriptor(f, 'prototype').value)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2653,2684,54>",(Object.getOwnPropertyDescriptor)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2653,2659,54>",(Object)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (f) != "undefined") {_RecordType("<2685,2686,54>",(f)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (b) != "undefined") {_RecordType("<2708,2709,54>",(b)); Inst58++; } } catch(e) {}
assertSame(Object.getOwnPropertyDescriptor(f, 'prototype').value, b);
try { if (Inst59 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2712,2722,55>",(assertTrue)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').writable) != "undefined") {_RecordType("<2723,2779,55>",(Object.getOwnPropertyDescriptor(f, 'prototype').writable)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<2723,2754,55>",(Object.getOwnPropertyDescriptor)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2723,2729,55>",(Object)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (f) != "undefined") {_RecordType("<2755,2756,55>",(f)); Inst63++; } } catch(e) {}
assertTrue(Object.getOwnPropertyDescriptor(f, 'prototype').writable);

// Verify that the previous redefinition didn't screw up callbacks and
// the internal value still gets updated.
var c = { foo: 'other' };
try { if (Inst64 <= 1000 && typeof (c) != "undefined") {_RecordType("<2900,2901,59>",(c)); Inst64++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (c) != "undefined") {_RecordType("<2936,2937,60>",(c)); Inst67++; } } catch(e) {}
f.prototype = c;
try { if (Inst65 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2922,2933,60>",(f.prototype)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (f) != "undefined") {_RecordType("<2922,2923,60>",(f)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2939,2949,61>",(assertSame)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2950,2961,61>",(f.prototype)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (f) != "undefined") {_RecordType("<2950,2951,61>",(f)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (c) != "undefined") {_RecordType("<2963,2964,61>",(c)); Inst71++; } } catch(e) {}
assertSame(f.prototype, c);
try { if (Inst72 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<2967,2977,62>",(assertSame)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (f.prototype.foo) != "undefined") {_RecordType("<2978,2993,62>",(f.prototype.foo)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<2978,2989,62>",(f.prototype)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (f) != "undefined") {_RecordType("<2978,2979,62>",(f)); Inst75++; } } catch(e) {}
assertSame(f.prototype.foo, 'other');
try { if (Inst76 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3005,3015,63>",(assertSame)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (new f().foo) != "undefined") {_RecordType("<3016,3027,63>",(new f().foo)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (f) != "undefined") {_RecordType("<3020,3021,63>",(f)); Inst78++; } } catch(e) {}
assertSame(new f().foo, 'other');
try { if (Inst79 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3039,3049,64>",(assertSame)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<3050,3071,64>",(Object.getPrototypeOf)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3050,3056,64>",(Object)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (f) != "undefined") {_RecordType("<3076,3077,64>",(f)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (c) != "undefined") {_RecordType("<3082,3083,64>",(c)); Inst83++; } } catch(e) {}
assertSame(Object.getPrototypeOf(new f()), c);
try { if (Inst84 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3086,3096,65>",(assertSame)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').value) != "undefined") {_RecordType("<3097,3150,65>",(Object.getOwnPropertyDescriptor(f, 'prototype').value)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3097,3128,65>",(Object.getOwnPropertyDescriptor)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3097,3103,65>",(Object)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (f) != "undefined") {_RecordType("<3129,3130,65>",(f)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (c) != "undefined") {_RecordType("<3152,3153,65>",(c)); Inst89++; } } catch(e) {}
assertSame(Object.getOwnPropertyDescriptor(f, 'prototype').value, c);
try { if (Inst90 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3156,3166,66>",(assertTrue)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').writable) != "undefined") {_RecordType("<3167,3223,66>",(Object.getOwnPropertyDescriptor(f, 'prototype').writable)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3167,3198,66>",(Object.getOwnPropertyDescriptor)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3167,3173,66>",(Object)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (f) != "undefined") {_RecordType("<3199,3200,66>",(f)); Inst94++; } } catch(e) {}
assertTrue(Object.getOwnPropertyDescriptor(f, 'prototype').writable);

// Verify that 'prototype' can be redefined to contain a different value
// and have a different writability attribute at the same time.
var d = { foo: 'final' };
try { if (Inst95 <= 1000 && typeof (d) != "undefined") {_RecordType("<3368,3369,70>",(d)); Inst95++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<3390,3411,71>",(Object.defineProperty)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3390,3396,71>",(Object)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (f) != "undefined") {_RecordType("<3412,3413,71>",(f)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (d) != "undefined") {_RecordType("<3437,3438,71>",(d)); Inst99++; } } catch(e) {}
Object.defineProperty(f, 'prototype', { value: d, writable: false });
try { if (Inst100 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3460,3470,72>",(assertSame)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<3471,3482,72>",(f.prototype)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (f) != "undefined") {_RecordType("<3471,3472,72>",(f)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (d) != "undefined") {_RecordType("<3484,3485,72>",(d)); Inst103++; } } catch(e) {}
assertSame(f.prototype, d);
try { if (Inst104 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3488,3498,73>",(assertSame)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (f.prototype.foo) != "undefined") {_RecordType("<3499,3514,73>",(f.prototype.foo)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<3499,3510,73>",(f.prototype)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (f) != "undefined") {_RecordType("<3499,3500,73>",(f)); Inst107++; } } catch(e) {}
assertSame(f.prototype.foo, 'final');
try { if (Inst108 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3526,3536,74>",(assertSame)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (new f().foo) != "undefined") {_RecordType("<3537,3548,74>",(new f().foo)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (f) != "undefined") {_RecordType("<3541,3542,74>",(f)); Inst110++; } } catch(e) {}
assertSame(new f().foo, 'final');
try { if (Inst111 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3560,3570,75>",(assertSame)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<3571,3592,75>",(Object.getPrototypeOf)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3571,3577,75>",(Object)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (f) != "undefined") {_RecordType("<3597,3598,75>",(f)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (d) != "undefined") {_RecordType("<3603,3604,75>",(d)); Inst115++; } } catch(e) {}
assertSame(Object.getPrototypeOf(new f()), d);
try { if (Inst116 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<3607,3617,76>",(assertSame)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').value) != "undefined") {_RecordType("<3618,3671,76>",(Object.getOwnPropertyDescriptor(f, 'prototype').value)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3618,3649,76>",(Object.getOwnPropertyDescriptor)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3618,3624,76>",(Object)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (f) != "undefined") {_RecordType("<3650,3651,76>",(f)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (d) != "undefined") {_RecordType("<3673,3674,76>",(d)); Inst121++; } } catch(e) {}
assertSame(Object.getOwnPropertyDescriptor(f, 'prototype').value, d);
try { if (Inst122 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3677,3688,77>",(assertFalse)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Object.getOwnPropertyDescriptor(f, 'prototype').writable) != "undefined") {_RecordType("<3689,3745,77>",(Object.getOwnPropertyDescriptor(f, 'prototype').writable)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<3689,3720,77>",(Object.getOwnPropertyDescriptor)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3689,3695,77>",(Object)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (f) != "undefined") {_RecordType("<3721,3722,77>",(f)); Inst126++; } } catch(e) {}
assertFalse(Object.getOwnPropertyDescriptor(f, 'prototype').writable);

// Verify that non-writability of redefined 'prototype' is respected.
try { if (Inst127 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3819,3831,80>",(assertThrows)); Inst127++; } } catch(e) {}
assertThrows("'use strict'; f.prototype = {}");
try { if (Inst128 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3867,3879,81>",(assertThrows)); Inst128++; } } catch(e) {}
assertThrows("Object.defineProperty(f, 'prototype', { value: {} })");

// Verify that non-configurability of other properties is respected, but
// non-writability is ignored by Object.defineProperty().
// name and length are configurable in ES6
try { if (Inst129 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<4112,4133,86>",(Object.defineProperty)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4112,4118,86>",(Object)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (f) != "undefined") {_RecordType("<4134,4135,86>",(f)); Inst131++; } } catch(e) {}
Object.defineProperty(f, 'name', { value: {} });
try { if (Inst132 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<4161,4182,87>",(Object.defineProperty)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (Object) != "undefined") {_RecordType("<4161,4167,87>",(Object)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (f) != "undefined") {_RecordType("<4183,4184,87>",(f)); Inst134++; } } catch(e) {}
Object.defineProperty(f, 'length', { value: {} });
try { if (Inst135 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4212,4224,88>",(assertThrows)); Inst135++; } } catch(e) {}
assertThrows("Object.defineProperty(f, 'caller', { value: {} })");
try { if (Inst136 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4279,4291,89>",(assertThrows)); Inst136++; } } catch(e) {}
assertThrows("Object.defineProperty(f, 'arguments', { value: {} })");

