var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Test that we do no use r12 as a receiver in inlined NamedStores on x64.

// See: http://code.google.com/p/v8/issues/detail?id=806

try { if (Inst0 <= 1000 && typeof (foo) != "undefined") {_RecordType("<1741,1744,32>",(foo)); Inst0++; } } catch(e) {}
function foo(a) {
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<1745,1746,32>",(a)); Inst1++; } } catch(e) {}
  for (var o = 1; o < 2; o++) {
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<1761,1762,33>",(o)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (o) != "undefined") {_RecordType("<1768,1769,33>",(o)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (o) != "undefined") {_RecordType("<1775,1776,33>",(o)); Inst4++; } } catch(e) {}
    for (var n = 1; n < 2; n++) {
try { if (Inst5 <= 1000 && typeof (n) != "undefined") {_RecordType("<1795,1796,34>",(n)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (n) != "undefined") {_RecordType("<1802,1803,34>",(n)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (n) != "undefined") {_RecordType("<1809,1810,34>",(n)); Inst7++; } } catch(e) {}
      for (var m = 1; m < 2; m++) {
try { if (Inst8 <= 1000 && typeof (m) != "undefined") {_RecordType("<1831,1832,35>",(m)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (m) != "undefined") {_RecordType("<1838,1839,35>",(m)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (m) != "undefined") {_RecordType("<1845,1846,35>",(m)); Inst10++; } } catch(e) {}
        for (var l = 1; l < 2; l++) {
try { if (Inst11 <= 1000 && typeof (l) != "undefined") {_RecordType("<1869,1870,36>",(l)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (l) != "undefined") {_RecordType("<1876,1877,36>",(l)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (l) != "undefined") {_RecordType("<1883,1884,36>",(l)); Inst13++; } } catch(e) {}
          for (var i = 1; i < 2; i++) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<1909,1910,37>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<1916,1917,37>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<1923,1924,37>",(i)); Inst16++; } } catch(e) {}
            for (var j = 1; j < 2; j++) {
try { if (Inst17 <= 1000 && typeof (j) != "undefined") {_RecordType("<1951,1952,38>",(j)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (j) != "undefined") {_RecordType("<1958,1959,38>",(j)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (j) != "undefined") {_RecordType("<1965,1966,38>",(j)); Inst19++; } } catch(e) {}
              for (var k = 1; k < 2; k++) {
try { if (Inst20 <= 1000 && typeof (k) != "undefined") {_RecordType("<1995,1996,39>",(k)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (k) != "undefined") {_RecordType("<2002,2003,39>",(k)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (k) != "undefined") {_RecordType("<2009,2010,39>",(k)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (a.foo) != "undefined") {_RecordType("<2040,2045,40>",(a.foo)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (a) != "undefined") {_RecordType("<2040,2041,40>",(a)); Inst25++; } } catch(e) {}
                var z = a.foo;
try { if (Inst23 <= 1000 && typeof (z) != "undefined") {_RecordType("<2036,2037,40>",(z)); Inst23++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<2071,2072,41>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (j) != "undefined") {_RecordType("<2075,2076,41>",(j)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (k) != "undefined") {_RecordType("<2079,2080,41>",(k)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (m) != "undefined") {_RecordType("<2083,2084,41>",(m)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (n) != "undefined") {_RecordType("<2087,2088,41>",(n)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (o) != "undefined") {_RecordType("<2091,2092,41>",(o)); Inst33++; } } catch(e) {}
                z.foo = i * j * k * m * n * o;
try { if (Inst26 <= 1000 && typeof (z.foo) != "undefined") {_RecordType("<2063,2068,41>",(z.foo)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (z) != "undefined") {_RecordType("<2063,2064,41>",(z)); Inst27++; } } catch(e) {}
              }
            }
          }
        }
      }
    }
  }
}

try { if (Inst34 <= 1000 && typeof (foo) != "undefined") {_RecordType("<2167,2170,51>",(foo)); Inst34++; } } catch(e) {}
foo({foo: {foo: 1}});

