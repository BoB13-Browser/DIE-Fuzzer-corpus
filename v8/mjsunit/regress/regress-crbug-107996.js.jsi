var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug

try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1641,1652,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1641,1646,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug;
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1633,1638,30>",(Debug)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<1655,1672,32>",(Debug.setListener)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1655,1660,32>",(Debug)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (listener) != "undefined") {_RecordType("<1673,1681,32>",(listener)); Inst5++; } } catch(e) {}
Debug.setListener(listener);

var fourteen;
try { if (Inst6 <= 1000 && typeof (fourteen) != "undefined") {_RecordType("<1689,1697,34>",(fourteen)); Inst6++; } } catch(e) {}
var four_in_debugger = [];
try { if (Inst7 <= 1000 && typeof (four_in_debugger) != "undefined") {_RecordType("<1703,1719,35>",(four_in_debugger)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (listener) != "undefined") {_RecordType("<1736,1744,37>",(listener)); Inst8++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst9 <= 1000 && typeof (event) != "undefined") {_RecordType("<1745,1750,37>",(event)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<1752,1762,37>",(exec_state)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<1764,1774,37>",(event_data)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (data) != "undefined") {_RecordType("<1776,1780,37>",(data)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (event) != "undefined") {_RecordType("<1790,1795,38>",(event)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<1799,1821,38>",(Debug.DebugEvent.Break)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<1799,1815,38>",(Debug.DebugEvent)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1799,1804,38>",(Debug)); Inst16++; } } catch(e) {}
  if (event == Debug.DebugEvent.Break) {
    for (var i = 0; i < exec_state.frameCount(); i++) {
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<1838,1839,39>",(i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<1845,1846,39>",(i)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (exec_state.frameCount) != "undefined") {_RecordType("<1849,1870,39>",(exec_state.frameCount)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<1849,1859,39>",(exec_state)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<1874,1875,39>",(i)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<1899,1915,40>",(exec_state.frame)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<1899,1909,40>",(exec_state)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1916,1917,40>",(i)); Inst25++; } } catch(e) {}
      var frame = exec_state.frame(i);
try { if (Inst22 <= 1000 && typeof (frame) != "undefined") {_RecordType("<1891,1896,40>",(frame)); Inst22++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (frame.evaluate("four", false).value) != "undefined") {_RecordType("<1948,1983,41>",(frame.evaluate("four", false).value)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (frame.evaluate) != "undefined") {_RecordType("<1948,1962,41>",(frame.evaluate)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (frame) != "undefined") {_RecordType("<1948,1953,41>",(frame)); Inst30++; } } catch(e) {}
      four_in_debugger[i] = frame.evaluate("four", false).value();
try { if (Inst26 <= 1000 && typeof (four_in_debugger[i]) != "undefined") {_RecordType("<1926,1945,41>",(four_in_debugger[i])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (four_in_debugger) != "undefined") {_RecordType("<1926,1942,41>",(four_in_debugger)); Inst27++; } } catch(e) {}
    }
  }
}

try { if (Inst31 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2009,2011,46>",(f1)); Inst31++; } } catch(e) {}
function f1() {
  var three = 3;
try { if (Inst32 <= 1000 && typeof (three) != "undefined") {_RecordType("<2022,2027,47>",(three)); Inst32++; } } catch(e) {}
  var four = 4;
try { if (Inst33 <= 1000 && typeof (four) != "undefined") {_RecordType("<2039,2043,48>",(four)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2061,2063,49>",(f2)); Inst34++; } } catch(e) {}
  (function f2() {
     var seven = 7;
try { if (Inst35 <= 1000 && typeof (seven) != "undefined") {_RecordType("<2077,2082,50>",(seven)); Inst35++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (f3) != "undefined") {_RecordType("<2103,2105,51>",(f3)); Inst36++; } } catch(e) {}
     (function f3() {
        debugger;
try { if (Inst38 <= 1000 && typeof (three) != "undefined") {_RecordType("<2147,2152,53>",(three)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (four) != "undefined") {_RecordType("<2155,2159,53>",(four)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (seven) != "undefined") {_RecordType("<2162,2167,53>",(seven)); Inst40++; } } catch(e) {}
        fourteen = three + four + seven;
try { if (Inst37 <= 1000 && typeof (fourteen) != "undefined") {_RecordType("<2136,2144,53>",(fourteen)); Inst37++; } } catch(e) {}
     })();
  })();
}

try { if (Inst41 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2191,2193,58>",(f1)); Inst41++; } } catch(e) {}
f1();
try { if (Inst42 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2197,2209,59>",(assertEquals)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (fourteen) != "undefined") {_RecordType("<2214,2222,59>",(fourteen)); Inst43++; } } catch(e) {}
assertEquals(14, fourteen);
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2225,2237,60>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (four_in_debugger[0]) != "undefined") {_RecordType("<2241,2260,60>",(four_in_debugger[0])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (four_in_debugger) != "undefined") {_RecordType("<2241,2257,60>",(four_in_debugger)); Inst46++; } } catch(e) {}
assertEquals(4, four_in_debugger[0]);
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2263,2275,61>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (four_in_debugger[1]) != "undefined") {_RecordType("<2279,2298,61>",(four_in_debugger[1])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (four_in_debugger) != "undefined") {_RecordType("<2279,2295,61>",(four_in_debugger)); Inst49++; } } catch(e) {}
assertEquals(4, four_in_debugger[1]);
try { if (Inst50 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2301,2313,62>",(assertEquals)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (four_in_debugger[2]) != "undefined") {_RecordType("<2317,2336,62>",(four_in_debugger[2])); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (four_in_debugger) != "undefined") {_RecordType("<2317,2333,62>",(four_in_debugger)); Inst52++; } } catch(e) {}
assertEquals(4, four_in_debugger[2]);

try { if (Inst53 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2340,2357,64>",(Debug.setListener)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2340,2345,64>",(Debug)); Inst54++; } } catch(e) {}
Debug.setListener(null);

