var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-debug-as debug

try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<212,213,7>",(f)); Inst0++; } } catch(e) {}
function f() {
  var a = 1;
try { if (Inst1 <= 1000 && typeof (a) != "undefined") {_RecordType("<224,225,8>",(a)); Inst1++; } } catch(e) {}
  var b = 2;
try { if (Inst2 <= 1000 && typeof (b) != "undefined") {_RecordType("<237,238,9>",(b)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<253,254,10>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (b) != "undefined") {_RecordType("<257,258,10>",(b)); Inst4++; } } catch(e) {}
  return a + b;
}

var exception = null;
try { if (Inst5 <= 1000 && typeof (exception) != "undefined") {_RecordType("<267,276,13>",(exception)); Inst5++; } } catch(e) {}
var break_count = 0;
try { if (Inst6 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<289,300,14>",(break_count)); Inst6++; } } catch(e) {}
var throw_count = 0;
try { if (Inst7 <= 1000 && typeof (throw_count) != "undefined") {_RecordType("<310,321,15>",(throw_count)); Inst7++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (listener) != "undefined") {_RecordType("<337,345,17>",(listener)); Inst8++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst9 <= 1000 && typeof (event) != "undefined") {_RecordType("<346,351,17>",(event)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<353,363,17>",(exec_state)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<365,375,17>",(event_data)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (data) != "undefined") {_RecordType("<377,381,17>",(data)); Inst12++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<814,815,28>",(e)); Inst31++; } } catch(e) {}
  try {
try { if (Inst13 <= 1000 && typeof (event) != "undefined") {_RecordType("<401,406,19>",(event)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<410,432,19>",(Debug.DebugEvent.Break)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<410,426,19>",(Debug.DebugEvent)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<410,415,19>",(Debug)); Inst16++; } } catch(e) {}
    if (event == Debug.DebugEvent.Break) {
try { if (Inst17 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<442,453,20>",(break_count)); Inst17++; } } catch(e) {}
      break_count++;
      // Disable all breakpoints from within the debug event callback.
try { if (Inst18 <= 1000 && typeof (Debug.debuggerFlags().breakPointsActive.setValue) != "undefined") {_RecordType("<534,582,22>",(Debug.debuggerFlags().breakPointsActive.setValue)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Debug.debuggerFlags().breakPointsActive) != "undefined") {_RecordType("<534,573,22>",(Debug.debuggerFlags().breakPointsActive)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Debug.debuggerFlags) != "undefined") {_RecordType("<534,553,22>",(Debug.debuggerFlags)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<534,539,22>",(Debug)); Inst21++; } } catch(e) {}
      Debug.debuggerFlags().breakPointsActive.setValue(false);
try { if (Inst23 <= 1000 && typeof (Debug.DebugEvent.Exception) != "undefined") {_RecordType("<614,640,23>",(Debug.DebugEvent.Exception)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<614,630,23>",(Debug.DebugEvent)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<614,619,23>",(Debug)); Inst25++; } } catch(e) {}
    } else if (event = Debug.DebugEvent.Exception) {
try { if (Inst26 <= 1000 && typeof (throw_count) != "undefined") {_RecordType("<650,661,24>",(throw_count)); Inst26++; } } catch(e) {}
      throw_count++;
      // Enable all breakpoints from within the debug event callback.
try { if (Inst27 <= 1000 && typeof (Debug.debuggerFlags().breakPointsActive.setValue) != "undefined") {_RecordType("<741,789,26>",(Debug.debuggerFlags().breakPointsActive.setValue)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Debug.debuggerFlags().breakPointsActive) != "undefined") {_RecordType("<741,780,26>",(Debug.debuggerFlags().breakPointsActive)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Debug.debuggerFlags) != "undefined") {_RecordType("<741,760,26>",(Debug.debuggerFlags)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<741,746,26>",(Debug)); Inst30++; } } catch(e) {}
      Debug.debuggerFlags().breakPointsActive.setValue(true);
    }
try { if (Inst22 <= 1000 && typeof (event) != "undefined") {_RecordType("<606,611,23>",(event)); Inst22++; } } catch(e) {}
  } catch (e) {
try { if (Inst33 <= 1000 && typeof (e) != "undefined") {_RecordType("<835,836,29>",(e)); Inst33++; } } catch(e) {}
    exception = e;
try { if (Inst32 <= 1000 && typeof (exception) != "undefined") {_RecordType("<823,832,29>",(exception)); Inst32++; } } catch(e) {}
  }
}

try { if (Inst35 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<853,864,33>",(debug.Debug)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (debug) != "undefined") {_RecordType("<853,858,33>",(debug)); Inst36++; } } catch(e) {}
Debug = debug.Debug;
try { if (Inst34 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<845,850,33>",(Debug)); Inst34++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<867,884,35>",(Debug.setListener)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<867,872,35>",(Debug)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (listener) != "undefined") {_RecordType("<885,893,35>",(listener)); Inst39++; } } catch(e) {}
Debug.setListener(listener);
try { if (Inst40 <= 1000 && typeof (Debug.setBreakOnException) != "undefined") {_RecordType("<896,921,36>",(Debug.setBreakOnException)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<896,901,36>",(Debug)); Inst41++; } } catch(e) {}
Debug.setBreakOnException();
try { if (Inst42 <= 1000 && typeof (Debug.setBreakPoint) != "undefined") {_RecordType("<925,944,37>",(Debug.setBreakPoint)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<925,930,37>",(Debug)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (f) != "undefined") {_RecordType("<945,946,37>",(f)); Inst44++; } } catch(e) {}
Debug.setBreakPoint(f, 2);

try { if (Inst45 <= 1000 && typeof (f) != "undefined") {_RecordType("<953,954,39>",(f)); Inst45++; } } catch(e) {}
f();
try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<958,959,40>",(f)); Inst46++; } } catch(e) {}
f();

try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<964,976,42>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<980,991,42>",(break_count)); Inst48++; } } catch(e) {}
assertEquals(1, break_count);
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<994,1006,43>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (throw_count) != "undefined") {_RecordType("<1010,1021,43>",(throw_count)); Inst50++; } } catch(e) {}
assertEquals(0, throw_count);

// Trigger exception event.
try { if (Inst51 <= 1000 && typeof (e) != "undefined") {_RecordType("<1077,1078,46>",(e)); Inst51++; } } catch(e) {}
try { throw 1; } catch (e) {}

try { if (Inst52 <= 1000 && typeof (f) != "undefined") {_RecordType("<1084,1085,48>",(f)); Inst52++; } } catch(e) {}
f();
try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<1089,1090,49>",(f)); Inst53++; } } catch(e) {}
f();

try { if (Inst54 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<1095,1112,51>",(Debug.setListener)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1095,1100,51>",(Debug)); Inst55++; } } catch(e) {}
Debug.setListener(null);
try { if (Inst56 <= 1000 && typeof (Debug.clearBreakOnException) != "undefined") {_RecordType("<1120,1147,52>",(Debug.clearBreakOnException)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1120,1125,52>",(Debug)); Inst57++; } } catch(e) {}
Debug.clearBreakOnException();
try { if (Inst58 <= 1000 && typeof (Debug.debuggerFlags().breakPointsActive.setValue) != "undefined") {_RecordType("<1151,1199,53>",(Debug.debuggerFlags().breakPointsActive.setValue)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Debug.debuggerFlags().breakPointsActive) != "undefined") {_RecordType("<1151,1190,53>",(Debug.debuggerFlags().breakPointsActive)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Debug.debuggerFlags) != "undefined") {_RecordType("<1151,1170,53>",(Debug.debuggerFlags)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1151,1156,53>",(Debug)); Inst61++; } } catch(e) {}
Debug.debuggerFlags().breakPointsActive.setValue(true);

try { if (Inst62 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1208,1220,55>",(assertEquals)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<1224,1235,55>",(break_count)); Inst63++; } } catch(e) {}
assertEquals(2, break_count);
try { if (Inst64 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1238,1250,56>",(assertEquals)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (throw_count) != "undefined") {_RecordType("<1254,1265,56>",(throw_count)); Inst65++; } } catch(e) {}
assertEquals(1, throw_count);
try { if (Inst66 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<1268,1278,57>",(assertNull)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1279,1288,57>",(exception)); Inst67++; } } catch(e) {}
assertNull(exception);

