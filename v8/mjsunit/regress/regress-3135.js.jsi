var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Properties are serialized once.
try { if (Inst0 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<203,215,6>",(assertEquals)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<227,241,6>",(JSON.stringify)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<227,231,6>",(JSON)); Inst2++; } } catch(e) {}
assertEquals('{"x":1}', JSON.stringify({ x : 1 }, ["x", 1, "x", 1]));
try { if (Inst3 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<273,285,7>",(assertEquals)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<297,311,7>",(JSON.stringify)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<297,301,7>",(JSON)); Inst5++; } } catch(e) {}
assertEquals('{"1":1}', JSON.stringify({ 1 : 1 }, ["x", 1, "x", 1]));
try { if (Inst6 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<343,355,8>",(assertEquals)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<367,381,8>",(JSON.stringify)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<367,371,8>",(JSON)); Inst8++; } } catch(e) {}
assertEquals('{"1":1}', JSON.stringify({ 1 : 1 }, ["1", 1, "1", 1]));
try { if (Inst9 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<413,425,9>",(assertEquals)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<437,451,9>",(JSON.stringify)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<437,441,9>",(JSON)); Inst11++; } } catch(e) {}
assertEquals('{"1":1}', JSON.stringify({ 1 : 1 }, [1, "1", 1, "1"]));

// Properties are visited at most once.
var fired = 0;
try { if (Inst12 <= 1000 && typeof (fired) != "undefined") {_RecordType("<528,533,12>",(fired)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<562,563,13>",(x)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (fired) != "undefined") {_RecordType("<568,573,13>",(fired)); Inst15++; } } catch(e) {}
var getter_obj = { get x() { fired++; return 2; } };
try { if (Inst13 <= 1000 && typeof (getter_obj) != "undefined") {_RecordType("<543,553,13>",(getter_obj)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<592,604,14>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<616,630,14>",(JSON.stringify)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<616,620,14>",(JSON)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (getter_obj) != "undefined") {_RecordType("<631,641,14>",(getter_obj)); Inst19++; } } catch(e) {}
assertEquals('{"x":2}', JSON.stringify(getter_obj, ["x", "y", "x"]));
try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<662,674,15>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (fired) != "undefined") {_RecordType("<678,683,15>",(fired)); Inst21++; } } catch(e) {}
assertEquals(1, fired);

// Order of the replacer array is followed.
try { if (Inst22 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<731,743,18>",(assertEquals)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<761,775,18>",(JSON.stringify)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<761,765,18>",(JSON)); Inst24++; } } catch(e) {}
assertEquals('{"y":4,"x":3}', JSON.stringify({ x : 3, y : 4}, ["y", "x"]));
try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<807,819,19>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<856,870,20>",(JSON.stringify)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<856,860,20>",(JSON)); Inst27++; } } catch(e) {}
assertEquals('{"y":4,"1":2,"x":3}',
             JSON.stringify({ x : 3, y : 4, 1 : 2 }, ["y", 1, "x"]));

// With a replacer array the value of the property is retrieved using [[Get]]
// ignoring own and enumerability.
var a = { x : 8 };
try { if (Inst28 <= 1000 && typeof (a) != "undefined") {_RecordType("<1031,1032,24>",(a)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1046,1058,25>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1114,1128,26>",(JSON.stringify)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1114,1118,26>",(JSON)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<1129,1130,26>",(a)); Inst32++; } } catch(e) {}
assertEquals('{"__proto__":{"__proto__":null},"x":8}',
             JSON.stringify(a, ["__proto__", "x", "__proto__"]));
a.__proto__ = { x : 7 };
try { if (Inst33 <= 1000 && typeof (a.__proto__) != "undefined") {_RecordType("<1167,1178,27>",(a.__proto__)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<1167,1168,27>",(a)); Inst34++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1192,1204,28>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1280,1294,29>",(JSON.stringify)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1280,1284,29>",(JSON)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (a) != "undefined") {_RecordType("<1295,1296,29>",(a)); Inst38++; } } catch(e) {}
assertEquals('{"__proto__":{"__proto__":{"__proto__":null},"x":7},"x":8}',
             JSON.stringify(a, ["__proto__", "x"]));
var b = { __proto__: { x: 9 } };
try { if (Inst39 <= 1000 && typeof (b) != "undefined") {_RecordType("<1324,1325,30>",(b)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1353,1365,31>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1372,1386,31>",(JSON.stringify)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1372,1376,31>",(JSON)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (b) != "undefined") {_RecordType("<1387,1388,31>",(b)); Inst43++; } } catch(e) {}
assertEquals('{}', JSON.stringify(b));
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1392,1404,32>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1416,1430,32>",(JSON.stringify)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1416,1420,32>",(JSON)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (b) != "undefined") {_RecordType("<1431,1432,32>",(b)); Inst47++; } } catch(e) {}
assertEquals('{"x":9}', JSON.stringify(b, ["x"]));
var c = {x: 10};
try { if (Inst48 <= 1000 && typeof (c) != "undefined") {_RecordType("<1447,1448,33>",(c)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1460,1481,34>",(Object.defineProperty)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1460,1466,34>",(Object)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (c) != "undefined") {_RecordType("<1482,1483,34>",(c)); Inst51++; } } catch(e) {}
Object.defineProperty(c, 'x', { enumerable: false });
try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1514,1526,35>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1533,1547,35>",(JSON.stringify)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1533,1537,35>",(JSON)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (c) != "undefined") {_RecordType("<1548,1549,35>",(c)); Inst55++; } } catch(e) {}
assertEquals('{}', JSON.stringify(c));
try { if (Inst56 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1553,1565,36>",(assertEquals)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1578,1592,36>",(JSON.stringify)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1578,1582,36>",(JSON)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (c) != "undefined") {_RecordType("<1593,1594,36>",(c)); Inst59++; } } catch(e) {}
assertEquals('{"x":10}', JSON.stringify(c, ["x"]));

// Arrays are not affected by the replacer array.
try { if (Inst60 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1656,1668,39>",(assertEquals)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1680,1694,39>",(JSON.stringify)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1680,1684,39>",(JSON)); Inst62++; } } catch(e) {}
assertEquals("[9,8,7]", JSON.stringify([9, 8, 7], [1, 1]));
var mixed_arr = [11,12,13];
try { if (Inst63 <= 1000 && typeof (mixed_arr) != "undefined") {_RecordType("<1720,1729,40>",(mixed_arr)); Inst63++; } } catch(e) {}
mixed_arr.x = 10;
try { if (Inst64 <= 1000 && typeof (mixed_arr.x) != "undefined") {_RecordType("<1744,1755,41>",(mixed_arr.x)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (mixed_arr) != "undefined") {_RecordType("<1744,1753,41>",(mixed_arr)); Inst65++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1762,1774,42>",(assertEquals)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1789,1803,42>",(JSON.stringify)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1789,1793,42>",(JSON)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (mixed_arr) != "undefined") {_RecordType("<1804,1813,42>",(mixed_arr)); Inst69++; } } catch(e) {}
assertEquals('[11,12,13]', JSON.stringify(mixed_arr, [1, 0, 1]));

// Array elements of objects are affected.
var mixed_obj = { x : 3 };
try { if (Inst70 <= 1000 && typeof (mixed_obj) != "undefined") {_RecordType("<1876,1885,45>",(mixed_obj)); Inst70++; } } catch(e) {}
mixed_obj[0] = 6;
try { if (Inst71 <= 1000 && typeof (mixed_obj[0]) != "undefined") {_RecordType("<1899,1911,46>",(mixed_obj[0])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (mixed_obj) != "undefined") {_RecordType("<1899,1908,46>",(mixed_obj)); Inst72++; } } catch(e) {}
mixed_obj[1] = 5;
try { if (Inst73 <= 1000 && typeof (mixed_obj[1]) != "undefined") {_RecordType("<1917,1929,47>",(mixed_obj[1])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (mixed_obj) != "undefined") {_RecordType("<1917,1926,47>",(mixed_obj)); Inst74++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1935,1947,48>",(assertEquals)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1965,1979,48>",(JSON.stringify)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1965,1969,48>",(JSON)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (mixed_obj) != "undefined") {_RecordType("<1980,1989,48>",(mixed_obj)); Inst78++; } } catch(e) {}
assertEquals('{"1":5,"0":6}', JSON.stringify(mixed_obj, [1, 0, 1]));

// Nested object.
try { if (Inst79 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2023,2035,51>",(assertEquals)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2072,2086,52>",(JSON.stringify)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2072,2076,52>",(JSON)); Inst81++; } } catch(e) {}
assertEquals('{"z":{"x":3},"x":1}',
             JSON.stringify({ x: 1, y:2, z: {x:3, b:4}}, ["z","x"]));

// Objects in the replacer array are ignored.
try { if (Inst82 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2176,2188,55>",(assertEquals)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2208,2222,56>",(JSON.stringify)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2208,2212,56>",(JSON)); Inst84++; } } catch(e) {}
assertEquals('{}',
             JSON.stringify({ x : 1, "1": 1 }, [{}]));
try { if (Inst85 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2250,2262,57>",(assertEquals)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2282,2296,58>",(JSON.stringify)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2282,2286,58>",(JSON)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2323,2332,58>",(undefined)); Inst88++; } } catch(e) {}
assertEquals('{}',
             JSON.stringify({ x : 1, "1": 1 }, [true, undefined, null]));
try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2343,2355,59>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2375,2389,60>",(JSON.stringify)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2375,2379,60>",(JSON)); Inst91++; } } catch(e) {}
assertEquals('{}',
             JSON.stringify({ x : 1, "1": 1 },
                            [{ toString: function() { return "x";} }]));
try { if (Inst92 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2482,2494,62>",(assertEquals)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2514,2528,63>",(JSON.stringify)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2514,2518,63>",(JSON)); Inst94++; } } catch(e) {}
assertEquals('{}',
             JSON.stringify({ x : 1, "1": 1 },
                            [{ valueOf: function() { return 1;} }]));

// Make sure that property names that clash with the names of Object.prototype
// still works.
try { if (Inst95 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2714,2726,68>",(assertEquals)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2746,2760,68>",(JSON.stringify)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2746,2750,68>",(JSON)); Inst97++; } } catch(e) {}
assertEquals('{"toString":42}', JSON.stringify({ toString: 42 }, ["toString"]));

// Number wrappers and String wrappers should be unwrapped.
try { if (Inst98 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2856,2868,71>",(assertEquals)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2901,2915,72>",(JSON.stringify)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2901,2905,72>",(JSON)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2967,2973,73>",(Number)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (String) != "undefined") {_RecordType("<2982,2988,73>",(String)); Inst102++; } } catch(e) {}
assertEquals('{"1":1,"s":"s"}',
             JSON.stringify({ 1: 1, s: "s" },
                            [new Number(1), new String("s")]));

