var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Flags: --expose-gc

try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<202,203,7>",(f)); Inst0++; } } catch(e) {}
function f() {
  this.foo00 = 0;
try { if (Inst1 <= 1000 && typeof (this.foo00) != "undefined") {_RecordType("<210,220,8>",(this.foo00)); Inst1++; } } catch(e) {}
  this.foo01 = 0;
try { if (Inst2 <= 1000 && typeof (this.foo01) != "undefined") {_RecordType("<228,238,9>",(this.foo01)); Inst2++; } } catch(e) {}
  this.foo02 = 0;
try { if (Inst3 <= 1000 && typeof (this.foo02) != "undefined") {_RecordType("<246,256,10>",(this.foo02)); Inst3++; } } catch(e) {}
  this.foo03 = 0;
try { if (Inst4 <= 1000 && typeof (this.foo03) != "undefined") {_RecordType("<264,274,11>",(this.foo03)); Inst4++; } } catch(e) {}
  this.foo04 = 0;
try { if (Inst5 <= 1000 && typeof (this.foo04) != "undefined") {_RecordType("<282,292,12>",(this.foo04)); Inst5++; } } catch(e) {}
  this.foo05 = 0;
try { if (Inst6 <= 1000 && typeof (this.foo05) != "undefined") {_RecordType("<300,310,13>",(this.foo05)); Inst6++; } } catch(e) {}
  this.foo06 = 0;
try { if (Inst7 <= 1000 && typeof (this.foo06) != "undefined") {_RecordType("<318,328,14>",(this.foo06)); Inst7++; } } catch(e) {}
  this.foo07 = 0;
try { if (Inst8 <= 1000 && typeof (this.foo07) != "undefined") {_RecordType("<336,346,15>",(this.foo07)); Inst8++; } } catch(e) {}
  this.foo08 = 0;
try { if (Inst9 <= 1000 && typeof (this.foo08) != "undefined") {_RecordType("<354,364,16>",(this.foo08)); Inst9++; } } catch(e) {}
  this.foo09 = 0;
try { if (Inst10 <= 1000 && typeof (this.foo09) != "undefined") {_RecordType("<372,382,17>",(this.foo09)); Inst10++; } } catch(e) {}
  this.foo0a = 0;
try { if (Inst11 <= 1000 && typeof (this.foo0a) != "undefined") {_RecordType("<390,400,18>",(this.foo0a)); Inst11++; } } catch(e) {}
  this.foo0b = 0;
try { if (Inst12 <= 1000 && typeof (this.foo0b) != "undefined") {_RecordType("<408,418,19>",(this.foo0b)); Inst12++; } } catch(e) {}
  this.foo0c = 0;
try { if (Inst13 <= 1000 && typeof (this.foo0c) != "undefined") {_RecordType("<426,436,20>",(this.foo0c)); Inst13++; } } catch(e) {}
  this.foo0d = 0;
try { if (Inst14 <= 1000 && typeof (this.foo0d) != "undefined") {_RecordType("<444,454,21>",(this.foo0d)); Inst14++; } } catch(e) {}
  this.foo0e = 0;
try { if (Inst15 <= 1000 && typeof (this.foo0e) != "undefined") {_RecordType("<462,472,22>",(this.foo0e)); Inst15++; } } catch(e) {}
  this.foo0f = 0;
try { if (Inst16 <= 1000 && typeof (this.foo0f) != "undefined") {_RecordType("<480,490,23>",(this.foo0f)); Inst16++; } } catch(e) {}
  this.foo10 = 0;
try { if (Inst17 <= 1000 && typeof (this.foo10) != "undefined") {_RecordType("<498,508,24>",(this.foo10)); Inst17++; } } catch(e) {}
  this.foo11 = 0;
try { if (Inst18 <= 1000 && typeof (this.foo11) != "undefined") {_RecordType("<516,526,25>",(this.foo11)); Inst18++; } } catch(e) {}
  this.foo12 = 0;
try { if (Inst19 <= 1000 && typeof (this.foo12) != "undefined") {_RecordType("<534,544,26>",(this.foo12)); Inst19++; } } catch(e) {}
  this.foo13 = 0;
try { if (Inst20 <= 1000 && typeof (this.foo13) != "undefined") {_RecordType("<552,562,27>",(this.foo13)); Inst20++; } } catch(e) {}
  this.foo14 = 0;
try { if (Inst21 <= 1000 && typeof (this.foo14) != "undefined") {_RecordType("<570,580,28>",(this.foo14)); Inst21++; } } catch(e) {}
  this.foo15 = 0;
try { if (Inst22 <= 1000 && typeof (this.foo15) != "undefined") {_RecordType("<588,598,29>",(this.foo15)); Inst22++; } } catch(e) {}
  this.foo16 = 0;
try { if (Inst23 <= 1000 && typeof (this.foo16) != "undefined") {_RecordType("<606,616,30>",(this.foo16)); Inst23++; } } catch(e) {}
  this.foo17 = 0;
try { if (Inst24 <= 1000 && typeof (this.foo17) != "undefined") {_RecordType("<624,634,31>",(this.foo17)); Inst24++; } } catch(e) {}
  this.foo18 = 0;
try { if (Inst25 <= 1000 && typeof (this.foo18) != "undefined") {_RecordType("<642,652,32>",(this.foo18)); Inst25++; } } catch(e) {}
  this.foo19 = 0;
try { if (Inst26 <= 1000 && typeof (this.foo19) != "undefined") {_RecordType("<660,670,33>",(this.foo19)); Inst26++; } } catch(e) {}
  this.foo1a = 0;
try { if (Inst27 <= 1000 && typeof (this.foo1a) != "undefined") {_RecordType("<678,688,34>",(this.foo1a)); Inst27++; } } catch(e) {}
  this.foo1b = 0;
try { if (Inst28 <= 1000 && typeof (this.foo1b) != "undefined") {_RecordType("<696,706,35>",(this.foo1b)); Inst28++; } } catch(e) {}
  this.foo1c = 0;
try { if (Inst29 <= 1000 && typeof (this.foo1c) != "undefined") {_RecordType("<714,724,36>",(this.foo1c)); Inst29++; } } catch(e) {}
  this.foo1d = 0;
try { if (Inst30 <= 1000 && typeof (this.foo1d) != "undefined") {_RecordType("<732,742,37>",(this.foo1d)); Inst30++; } } catch(e) {}
  this.foo1e = 0;
try { if (Inst31 <= 1000 && typeof (this.foo1e) != "undefined") {_RecordType("<750,760,38>",(this.foo1e)); Inst31++; } } catch(e) {}
  this.foo1f = 0;
try { if (Inst32 <= 1000 && typeof (this.foo1f) != "undefined") {_RecordType("<768,778,39>",(this.foo1f)); Inst32++; } } catch(e) {}
  this.d = 1.3;
try { if (Inst33 <= 1000 && typeof (this.d) != "undefined") {_RecordType("<786,792,40>",(this.d)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (gc) != "undefined") {_RecordType("<802,804,41>",(gc)); Inst34++; } } catch(e) {}
  gc();
  this.boom = 230;
try { if (Inst35 <= 1000 && typeof (this.boom) != "undefined") {_RecordType("<810,819,42>",(this.boom)); Inst35++; } } catch(e) {}
  this.boom = 1.4;
try { if (Inst36 <= 1000 && typeof (this.boom) != "undefined") {_RecordType("<829,838,43>",(this.boom)); Inst36++; } } catch(e) {}
}

try { if (Inst37 <= 1000 && typeof (g) != "undefined") {_RecordType("<858,859,46>",(g)); Inst37++; } } catch(e) {}
function g() {
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<877,878,47>",(f)); Inst38++; } } catch(e) {}
  return new f();
}
try { if (Inst39 <= 1000 && typeof (g) != "undefined") {_RecordType("<884,885,49>",(g)); Inst39++; } } catch(e) {}
g();
try { if (Inst40 <= 1000 && typeof (g) != "undefined") {_RecordType("<889,890,50>",(g)); Inst40++; } } catch(e) {}
g();
try { if (Inst42 <= 1000 && typeof (g) != "undefined") {_RecordType("<902,903,51>",(g)); Inst42++; } } catch(e) {}
var o = g();
try { if (Inst41 <= 1000 && typeof (o) != "undefined") {_RecordType("<898,899,51>",(o)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<907,919,52>",(assertEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (o.foo00) != "undefined") {_RecordType("<923,930,52>",(o.foo00)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<923,924,52>",(o)); Inst45++; } } catch(e) {}
assertEquals(0, o.foo00);
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<933,945,53>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o.boom) != "undefined") {_RecordType("<951,957,53>",(o.boom)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<951,952,53>",(o)); Inst48++; } } catch(e) {}
assertEquals(1.4, o.boom);

