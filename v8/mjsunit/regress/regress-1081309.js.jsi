var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

// Make sure that the backtrace command can be processed when the receiver is
// undefined.
listenerCalled = false;
try { if (Inst3 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<1815,1829,34>",(listenerCalled)); Inst3++; } } catch(e) {}
exception = false;
try { if (Inst4 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1839,1848,35>",(exception)); Inst4++; } } catch(e) {}

try { if (Inst5 <= 1000 && typeof (ParsedResponse) != "undefined") {_RecordType("<1868,1882,37>",(ParsedResponse)); Inst5++; } } catch(e) {}
function ParsedResponse(json) {
try { if (Inst6 <= 1000 && typeof (json) != "undefined") {_RecordType("<1883,1887,37>",(json)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (eval) != "undefined") {_RecordType("<1910,1914,38>",(eval)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (json) != "undefined") {_RecordType("<1921,1925,38>",(json)); Inst9++; } } catch(e) {}
  this.response_ = eval('(' + json + ')');
try { if (Inst7 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<1893,1907,38>",(this.response_)); Inst7++; } } catch(e) {}
  this.refs_ = [];
try { if (Inst10 <= 1000 && typeof (this.refs_) != "undefined") {_RecordType("<1936,1946,39>",(this.refs_)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (this.response_.refs) != "undefined") {_RecordType("<1959,1978,40>",(this.response_.refs)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<1959,1973,40>",(this.response_)); Inst12++; } } catch(e) {}
  if (this.response_.refs) {
    for (var i = 0; i < this.response_.refs.length; i++) {
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<1995,1996,41>",(i)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<2002,2003,41>",(i)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (this.response_.refs.length) != "undefined") {_RecordType("<2006,2032,41>",(this.response_.refs.length)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (this.response_.refs) != "undefined") {_RecordType("<2006,2025,41>",(this.response_.refs)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<2006,2020,41>",(this.response_)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<2034,2035,41>",(i)); Inst18++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (this.response_.refs[i]) != "undefined") {_RecordType("<2091,2113,42>",(this.response_.refs[i])); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (this.response_.refs) != "undefined") {_RecordType("<2091,2110,42>",(this.response_.refs)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<2091,2105,42>",(this.response_)); Inst27++; } } catch(e) {}
      this.refs_[this.response_.refs[i].handle] = this.response_.refs[i];
try { if (Inst19 <= 1000 && typeof (this.refs_[this.response_.refs[i].handle]) != "undefined") {_RecordType("<2047,2088,42>",(this.refs_[this.response_.refs[i].handle])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (this.refs_) != "undefined") {_RecordType("<2047,2057,42>",(this.refs_)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (this.response_.refs[i].handle) != "undefined") {_RecordType("<2058,2087,42>",(this.response_.refs[i].handle)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (this.response_.refs[i]) != "undefined") {_RecordType("<2058,2080,42>",(this.response_.refs[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (this.response_.refs) != "undefined") {_RecordType("<2058,2077,42>",(this.response_.refs)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<2058,2072,42>",(this.response_)); Inst24++; } } catch(e) {}
    }
  }
}


ParsedResponse.prototype.response = function() {
try { if (Inst31 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<2187,2201,49>",(this.response_)); Inst31++; } } catch(e) {}
  return this.response_;
}
try { if (Inst28 <= 1000 && typeof (ParsedResponse.prototype.response) != "undefined") {_RecordType("<2129,2162,48>",(ParsedResponse.prototype.response)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (ParsedResponse.prototype) != "undefined") {_RecordType("<2129,2153,48>",(ParsedResponse.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ParsedResponse) != "undefined") {_RecordType("<2129,2143,48>",(ParsedResponse)); Inst30++; } } catch(e) {}


ParsedResponse.prototype.body = function() {
try { if (Inst35 <= 1000 && typeof (this.response_.body) != "undefined") {_RecordType("<2261,2280,54>",(this.response_.body)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (this.response_) != "undefined") {_RecordType("<2261,2275,54>",(this.response_)); Inst36++; } } catch(e) {}
  return this.response_.body;
}
try { if (Inst32 <= 1000 && typeof (ParsedResponse.prototype.body) != "undefined") {_RecordType("<2207,2236,53>",(ParsedResponse.prototype.body)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ParsedResponse.prototype) != "undefined") {_RecordType("<2207,2231,53>",(ParsedResponse.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (ParsedResponse) != "undefined") {_RecordType("<2207,2221,53>",(ParsedResponse)); Inst34++; } } catch(e) {}


ParsedResponse.prototype.lookup = function(handle) {
try { if (Inst40 <= 1000 && typeof (handle) != "undefined") {_RecordType("<2329,2335,58>",(handle)); Inst40++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (this.refs_[handle]) != "undefined") {_RecordType("<2348,2366,59>",(this.refs_[handle])); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (this.refs_) != "undefined") {_RecordType("<2348,2358,59>",(this.refs_)); Inst42++; } } catch(e) {}
  return this.refs_[handle];
}
try { if (Inst37 <= 1000 && typeof (ParsedResponse.prototype.lookup) != "undefined") {_RecordType("<2286,2317,58>",(ParsedResponse.prototype.lookup)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (ParsedResponse.prototype) != "undefined") {_RecordType("<2286,2310,58>",(ParsedResponse.prototype)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ParsedResponse) != "undefined") {_RecordType("<2286,2300,58>",(ParsedResponse)); Inst39++; } } catch(e) {}


try { if (Inst43 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2381,2389,63>",(listener)); Inst43++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst44 <= 1000 && typeof (event) != "undefined") {_RecordType("<2390,2395,63>",(event)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2397,2407,63>",(exec_state)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2409,2419,63>",(event_data)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (data) != "undefined") {_RecordType("<2421,2425,63>",(data)); Inst47++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (e) != "undefined") {_RecordType("<3144,3145,87>",(e)); Inst91++; } } catch(e) {}
  try {
try { if (Inst48 <= 1000 && typeof (event) != "undefined") {_RecordType("<2443,2448,65>",(event)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Debug.DebugEvent.Exception) != "undefined") {_RecordType("<2452,2478,65>",(Debug.DebugEvent.Exception)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2452,2468,65>",(Debug.DebugEvent)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2452,2457,65>",(Debug)); Inst51++; } } catch(e) {}
  if (event == Debug.DebugEvent.Exception)
  {
    // The expected backtrace is
    // 1: g
    // 0: [anonymous]

    // Get the debug command processor.
try { if (Inst53 <= 1000 && typeof (exec_state.debugCommandProcessor) != "undefined") {_RecordType("<2606,2638,72>",(exec_state.debugCommandProcessor)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2606,2616,72>",(exec_state)); Inst54++; } } catch(e) {}
    var dcp = exec_state.debugCommandProcessor(false);
try { if (Inst52 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2600,2603,72>",(dcp)); Inst52++; } } catch(e) {}

    // Get the backtrace.
    var json;
try { if (Inst55 <= 1000 && typeof (json) != "undefined") {_RecordType("<2682,2686,75>",(json)); Inst55++; } } catch(e) {}
    json = '{"seq":0,"type":"request","command":"backtrace"}'
try { if (Inst56 <= 1000 && typeof (json) != "undefined") {_RecordType("<2692,2696,76>",(json)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (ParsedResponse) != "undefined") {_RecordType("<2773,2787,77>",(ParsedResponse)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (dcp.processDebugJSONRequest) != "undefined") {_RecordType("<2788,2815,77>",(dcp.processDebugJSONRequest)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2788,2791,77>",(dcp)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (json) != "undefined") {_RecordType("<2816,2820,77>",(json)); Inst61++; } } catch(e) {}
    var response = new ParsedResponse(dcp.processDebugJSONRequest(json));
try { if (Inst57 <= 1000 && typeof (response) != "undefined") {_RecordType("<2758,2766,77>",(response)); Inst57++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (response.body) != "undefined") {_RecordType("<2844,2857,78>",(response.body)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (response) != "undefined") {_RecordType("<2844,2852,78>",(response)); Inst64++; } } catch(e) {}
    var backtrace = response.body();
try { if (Inst62 <= 1000 && typeof (backtrace) != "undefined") {_RecordType("<2832,2841,78>",(backtrace)); Inst62++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2865,2877,79>",(assertEquals)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (backtrace.totalFrames) != "undefined") {_RecordType("<2881,2902,79>",(backtrace.totalFrames)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (backtrace) != "undefined") {_RecordType("<2881,2890,79>",(backtrace)); Inst67++; } } catch(e) {}
    assertEquals(2, backtrace.totalFrames);
try { if (Inst68 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2909,2921,80>",(assertEquals)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (backtrace.frames.length) != "undefined") {_RecordType("<2925,2948,80>",(backtrace.frames.length)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (backtrace.frames) != "undefined") {_RecordType("<2925,2941,80>",(backtrace.frames)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (backtrace) != "undefined") {_RecordType("<2925,2934,80>",(backtrace)); Inst71++; } } catch(e) {}
    assertEquals(2, backtrace.frames.length);

try { if (Inst72 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2956,2968,82>",(assertEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (response.lookup(backtrace.frames[0].func.ref).name) != "undefined") {_RecordType("<2974,3024,82>",(response.lookup(backtrace.frames[0].func.ref).name)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (response.lookup) != "undefined") {_RecordType("<2974,2989,82>",(response.lookup)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (response) != "undefined") {_RecordType("<2974,2982,82>",(response)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (backtrace.frames[0].func.ref) != "undefined") {_RecordType("<2990,3018,82>",(backtrace.frames[0].func.ref)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (backtrace.frames[0].func) != "undefined") {_RecordType("<2990,3014,82>",(backtrace.frames[0].func)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (backtrace.frames[0]) != "undefined") {_RecordType("<2990,3009,82>",(backtrace.frames[0])); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (backtrace.frames) != "undefined") {_RecordType("<2990,3006,82>",(backtrace.frames)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (backtrace) != "undefined") {_RecordType("<2990,2999,82>",(backtrace)); Inst80++; } } catch(e) {}
    assertEquals("g", response.lookup(backtrace.frames[0].func.ref).name);
try { if (Inst81 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3031,3043,83>",(assertEquals)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (response.lookup(backtrace.frames[1].func.ref).name) != "undefined") {_RecordType("<3048,3098,83>",(response.lookup(backtrace.frames[1].func.ref).name)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (response.lookup) != "undefined") {_RecordType("<3048,3063,83>",(response.lookup)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (response) != "undefined") {_RecordType("<3048,3056,83>",(response)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (backtrace.frames[1].func.ref) != "undefined") {_RecordType("<3064,3092,83>",(backtrace.frames[1].func.ref)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (backtrace.frames[1].func) != "undefined") {_RecordType("<3064,3088,83>",(backtrace.frames[1].func)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (backtrace.frames[1]) != "undefined") {_RecordType("<3064,3083,83>",(backtrace.frames[1])); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (backtrace.frames) != "undefined") {_RecordType("<3064,3080,83>",(backtrace.frames)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (backtrace) != "undefined") {_RecordType("<3064,3073,83>",(backtrace)); Inst89++; } } catch(e) {}
    assertEquals("", response.lookup(backtrace.frames[1].func.ref).name);

    listenerCalled = true;
try { if (Inst90 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<3106,3120,85>",(listenerCalled)); Inst90++; } } catch(e) {}
  }
  } catch (e) {
try { if (Inst93 <= 1000 && typeof (e) != "undefined") {_RecordType("<3165,3166,88>",(e)); Inst93++; } } catch(e) {}
    exception = e
try { if (Inst92 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3153,3162,88>",(exception)); Inst92++; } } catch(e) {}
  };
};

// Add the debug event listener.
try { if (Inst94 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<3209,3226,93>",(Debug.setListener)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3209,3214,93>",(Debug)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (listener) != "undefined") {_RecordType("<3227,3235,93>",(listener)); Inst96++; } } catch(e) {}
Debug.setListener(listener);

// Call method on undefined.
try { if (Inst97 <= 1000 && typeof (g) != "undefined") {_RecordType("<3277,3278,96>",(g)); Inst97++; } } catch(e) {}
function g() {
try { if (Inst98 <= 1000 && typeof ((void 0).f) != "undefined") {_RecordType("<3285,3295,97>",((void 0).f)); Inst98++; } } catch(e) {}
  (void 0).f();
};

// Break on the exception to do a backtrace with undefined as receiver.
try { if (Inst99 <= 1000 && typeof (Debug.setBreakOnException) != "undefined") {_RecordType("<3375,3400,101>",(Debug.setBreakOnException)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3375,3380,101>",(Debug)); Inst100++; } } catch(e) {}
Debug.setBreakOnException(true);
try { if (Inst102 <= 1000 && typeof (e) != "undefined") {_RecordType("<3429,3430,104>",(e)); Inst102++; } } catch(e) {}
try {
try { if (Inst101 <= 1000 && typeof (g) != "undefined") {_RecordType("<3416,3417,103>",(g)); Inst101++; } } catch(e) {}
  g();
} catch(e) {
  // Ignore the exception "Cannot call method 'x' of undefined"
}

try { if (Inst103 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3501,3512,108>",(assertFalse)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3513,3522,108>",(exception)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3549,3558,108>",(exception)); Inst105++; } } catch(e) {}
assertFalse(exception, "exception in listener", exception)
// Make sure that the debug event listener vas invoked.
try { if (Inst106 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3616,3626,110>",(assertTrue)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<3627,3641,110>",(listenerCalled)); Inst107++; } } catch(e) {}
assertTrue(listenerCalled, "listener not called");

