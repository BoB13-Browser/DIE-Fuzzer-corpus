var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug

try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1641,1652,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1641,1646,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug;
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1633,1638,30>",(Debug)); Inst0++; } } catch(e) {}

var exception = false;
try { if (Inst3 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1659,1668,32>",(exception)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (listener) != "undefined") {_RecordType("<1688,1696,34>",(listener)); Inst4++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst5 <= 1000 && typeof (event) != "undefined") {_RecordType("<1697,1702,34>",(event)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<1704,1714,34>",(exec_state)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<1716,1726,34>",(event_data)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (data) != "undefined") {_RecordType("<1728,1732,34>",(data)); Inst8++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (e) != "undefined") {_RecordType("<2161,2162,51>",(e)); Inst32++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (event) != "undefined") {_RecordType("<1752,1757,36>",(event)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<1761,1783,36>",(Debug.DebugEvent.Break)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<1761,1777,36>",(Debug.DebugEvent)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1761,1766,36>",(Debug)); Inst12++; } } catch(e) {}
    if (event == Debug.DebugEvent.Break) {
try { if (Inst13 <= 1000 && typeof (lookup) != "undefined") {_RecordType("<1802,1808,37>",(lookup)); Inst13++; } } catch(e) {}
      function lookup(name) {
try { if (Inst14 <= 1000 && typeof (name) != "undefined") {_RecordType("<1809,1813,37>",(name)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (exec_state.frame(0).evaluate(name).value) != "undefined") {_RecordType("<1832,1872,38>",(exec_state.frame(0).evaluate(name).value)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (exec_state.frame(0).evaluate) != "undefined") {_RecordType("<1832,1860,38>",(exec_state.frame(0).evaluate)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<1832,1848,38>",(exec_state.frame)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<1832,1842,38>",(exec_state)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (name) != "undefined") {_RecordType("<1861,1865,38>",(name)); Inst19++; } } catch(e) {}
        return exec_state.frame(0).evaluate(name).value();
      }

try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1891,1903,41>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (lookup) != "undefined") {_RecordType("<1907,1913,41>",(lookup)); Inst21++; } } catch(e) {}
      assertEquals(3, lookup("e"));
try { if (Inst22 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1927,1939,42>",(assertEquals)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (lookup) != "undefined") {_RecordType("<1943,1949,42>",(lookup)); Inst23++; } } catch(e) {}
      assertEquals(4, lookup("f"));
try { if (Inst24 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1963,1975,43>",(assertEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (lookup) != "undefined") {_RecordType("<1979,1985,43>",(lookup)); Inst25++; } } catch(e) {}
      assertEquals(1, lookup("a"));

try { if (Inst28 <= 1000 && typeof (e) != "undefined") {_RecordType("<2059,2060,47>",(e)); Inst28++; } } catch(e) {}
      try {
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2014,2026,46>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (lookup) != "undefined") {_RecordType("<2030,2036,46>",(lookup)); Inst27++; } } catch(e) {}
        assertEquals(2, lookup("b"));
      } catch (e) {
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2072,2084,48>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<2121,2131,48>",(e.toString)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<2121,2122,48>",(e)); Inst31++; } } catch(e) {}
        assertEquals("ReferenceError: b is not defined", e.toString());
      }
    }
  } catch (e) {
try { if (Inst34 <= 1000 && typeof (e.toString) != "undefined") {_RecordType("<2182,2192,52>",(e.toString)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<2182,2183,52>",(e)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2197,2204,52>",(e.stack)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<2197,2198,52>",(e)); Inst37++; } } catch(e) {}
    exception = e.toString() + e.stack;
try { if (Inst33 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2170,2179,52>",(exception)); Inst33++; } } catch(e) {}
  }
}

try { if (Inst38 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2213,2230,56>",(Debug.setListener)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2213,2218,56>",(Debug)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2231,2239,56>",(listener)); Inst40++; } } catch(e) {}
Debug.setListener(listener);

try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<2252,2253,58>",(f)); Inst41++; } } catch(e) {}
function f(a, b) {
try { if (Inst42 <= 1000 && typeof (a) != "undefined") {_RecordType("<2254,2255,58>",(a)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (b) != "undefined") {_RecordType("<2257,2258,58>",(b)); Inst43++; } } catch(e) {}
  var c = 3;
try { if (Inst44 <= 1000 && typeof (c) != "undefined") {_RecordType("<2268,2269,59>",(c)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (d) != "undefined") {_RecordType("<2286,2287,60>",(d)); Inst45++; } } catch(e) {}
  function d(e, f) {
try { if (Inst46 <= 1000 && typeof (e) != "undefined") {_RecordType("<2288,2289,60>",(e)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (f) != "undefined") {_RecordType("<2291,2292,60>",(f)); Inst47++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<2308,2309,61>",(a)); Inst49++; } } catch(e) {}
    var g = a;
try { if (Inst48 <= 1000 && typeof (g) != "undefined") {_RecordType("<2304,2305,61>",(g)); Inst48++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (c) != "undefined") {_RecordType("<2323,2324,62>",(c)); Inst51++; } } catch(e) {}
    var h = c;
try { if (Inst50 <= 1000 && typeof (h) != "undefined") {_RecordType("<2319,2320,62>",(h)); Inst50++; } } catch(e) {}
    debugger;
  }

try { if (Inst52 <= 1000 && typeof (d) != "undefined") {_RecordType("<2354,2355,66>",(d)); Inst52++; } } catch(e) {}
  return d;
}

try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<2360,2361,69>",(f)); Inst53++; } } catch(e) {}
f(1, 2)(3, 4);

try { if (Inst54 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2376,2387,71>",(assertFalse)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2388,2397,71>",(exception)); Inst55++; } } catch(e) {}
assertFalse(exception);

