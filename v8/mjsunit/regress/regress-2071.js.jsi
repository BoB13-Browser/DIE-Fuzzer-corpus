var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

a = {};
try { if (Inst0 <= 1000 && typeof (a) != "undefined") {_RecordType("<1598,1599,28>",(a)); Inst0++; } } catch(e) {}

a.b = 42;
try { if (Inst1 <= 1000 && typeof (a.b) != "undefined") {_RecordType("<1607,1610,30>",(a.b)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (a) != "undefined") {_RecordType("<1607,1608,30>",(a)); Inst2++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<1623,1624,32>",(a)); Inst3++; } } catch(e) {}
with(a) {
try { if (Inst6 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1646,1648,33>",(f1)); Inst6++; } } catch(e) {}
  a.f = (function f1() {
try { if (Inst7 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1666,1668,34>",(f2)); Inst7++; } } catch(e) {}
    function f2() {
try { if (Inst8 <= 1000 && typeof (b) != "undefined") {_RecordType("<1686,1687,35>",(b)); Inst8++; } } catch(e) {}
      return b;
    };
try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1707,1709,37>",(f2)); Inst9++; } } catch(e) {}
    return f2;
  })();
try { if (Inst4 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<1630,1633,33>",(a.f)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1630,1631,33>",(a)); Inst5++; } } catch(e) {}
}

for(var i = 0; i < 10000; i++) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<1730,1731,41>",(i)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<1737,1738,41>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<1748,1749,41>",(i)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1757,1769,42>",(assertEquals)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (a.f) != "undefined") {_RecordType("<1774,1777,42>",(a.f)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (a) != "undefined") {_RecordType("<1774,1775,42>",(a)); Inst15++; } } catch(e) {}
  assertEquals(42, a.f());
}

try { if (Inst16 <= 1000 && typeof (a) != "undefined") {_RecordType("<1790,1791,45>",(a)); Inst16++; } } catch(e) {}
with(a) {
try { if (Inst19 <= 1000 && typeof (f1) != "undefined") {_RecordType("<1813,1815,46>",(f1)); Inst19++; } } catch(e) {}
  a.g = (function f1() {
try { if (Inst20 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1833,1835,47>",(f2)); Inst20++; } } catch(e) {}
    function f2() {
try { if (Inst21 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1855,1857,48>",(f3)); Inst21++; } } catch(e) {}
      function f3() {
try { if (Inst22 <= 1000 && typeof (b) != "undefined") {_RecordType("<1877,1878,49>",(b)); Inst22++; } } catch(e) {}
        return b;
      }
try { if (Inst23 <= 1000 && typeof (f3) != "undefined") {_RecordType("<1901,1903,51>",(f3)); Inst23++; } } catch(e) {}
      return f3;
    };
try { if (Inst24 <= 1000 && typeof (f2) != "undefined") {_RecordType("<1923,1925,53>",(f2)); Inst24++; } } catch(e) {}
    return f2();
  })();
try { if (Inst17 <= 1000 && typeof (a.g) != "undefined") {_RecordType("<1797,1800,46>",(a.g)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (a) != "undefined") {_RecordType("<1797,1798,46>",(a)); Inst18++; } } catch(e) {}
}

for(var i = 0; i < 10000; i++) {
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<1948,1949,57>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<1955,1956,57>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1966,1967,57>",(i)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1975,1987,58>",(assertEquals)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (a.g) != "undefined") {_RecordType("<1992,1995,58>",(a.g)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (a) != "undefined") {_RecordType("<1992,1993,58>",(a)); Inst30++; } } catch(e) {}
  assertEquals(42, a.g());
}

try { if (Inst31 <= 1000 && typeof (outer) != "undefined") {_RecordType("<2012,2017,61>",(outer)); Inst31++; } } catch(e) {}
function outer() {
try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<2029,2030,62>",(a)); Inst32++; } } catch(e) {}
  with(a) {
try { if (Inst35 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2054,2056,63>",(f1)); Inst35++; } } catch(e) {}
    a.h = (function f1() {
try { if (Inst36 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2076,2078,64>",(f2)); Inst36++; } } catch(e) {}
      function f2() {
try { if (Inst37 <= 1000 && typeof (f3) != "undefined") {_RecordType("<2100,2102,65>",(f3)); Inst37++; } } catch(e) {}
        function f3() {
try { if (Inst38 <= 1000 && typeof (b) != "undefined") {_RecordType("<2124,2125,66>",(b)); Inst38++; } } catch(e) {}
          return b;
        }
try { if (Inst39 <= 1000 && typeof (f3) != "undefined") {_RecordType("<2152,2154,68>",(f3)); Inst39++; } } catch(e) {}
        return f3;
      };
try { if (Inst40 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2178,2180,70>",(f2)); Inst40++; } } catch(e) {}
      return f2();
    })();
try { if (Inst33 <= 1000 && typeof (a.h) != "undefined") {_RecordType("<2038,2041,63>",(a.h)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (a) != "undefined") {_RecordType("<2038,2039,63>",(a)); Inst34++; } } catch(e) {}
  }
};

try { if (Inst41 <= 1000 && typeof (outer) != "undefined") {_RecordType("<2202,2207,75>",(outer)); Inst41++; } } catch(e) {}
outer();

for(var i = 0; i < 10000; i++) {
try { if (Inst42 <= 1000 && typeof (i) != "undefined") {_RecordType("<2220,2221,77>",(i)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<2227,2228,77>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<2238,2239,77>",(i)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2247,2259,78>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (a.h) != "undefined") {_RecordType("<2264,2267,78>",(a.h)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (a) != "undefined") {_RecordType("<2264,2265,78>",(a)); Inst47++; } } catch(e) {}
  assertEquals(42, a.h());
}

