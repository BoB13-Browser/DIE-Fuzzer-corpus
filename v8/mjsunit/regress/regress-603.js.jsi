var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Calling non-objects directly or via Function.prototype.call should
// not mess up the stack.
// http://code.google.com/p/v8/issues/detail?id=603

var re = /b../;
try { if (Inst0 <= 1000 && typeof (re) != "undefined") {_RecordType("<1751,1753,32>",(re)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1763,1775,33>",(assertThrows)); Inst1++; } } catch(e) {}
assertThrows(function() {
try { if (Inst2 <= 1000 && typeof (re) != "undefined") {_RecordType("<1798,1800,34>",(re)); Inst2++; } } catch(e) {}
  return re('abcdefghijklm') + 'z';
});

var re1 = /c../;
try { if (Inst3 <= 1000 && typeof (re1) != "undefined") {_RecordType("<1834,1837,37>",(re1)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<1858,1881,38>",(Function.prototype.call)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1858,1876,38>",(Function.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1858,1866,38>",(Function)); Inst8++; } } catch(e) {}
re1.call = Function.prototype.call;
try { if (Inst4 <= 1000 && typeof (re1.call) != "undefined") {_RecordType("<1847,1855,38>",(re1.call)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (re1) != "undefined") {_RecordType("<1847,1850,38>",(re1)); Inst5++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1883,1895,39>",(assertThrows)); Inst9++; } } catch(e) {}
assertThrows(function() {
try { if (Inst10 <= 1000 && typeof (re1.call) != "undefined") {_RecordType("<1911,1919,40>",(re1.call)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (re1) != "undefined") {_RecordType("<1911,1914,40>",(re1)); Inst11++; } } catch(e) {}
  re1.call(null, 'abcdefghijklm') + 'z';
});

var re2 = /d../;
try { if (Inst12 <= 1000 && typeof (re2) != "undefined") {_RecordType("<1959,1962,43>",(re2)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1972,1984,44>",(assertThrows)); Inst13++; } } catch(e) {}
assertThrows(function() {
try { if (Inst14 <= 1000 && typeof (Function.prototype.call.call) != "undefined") {_RecordType("<2000,2028,45>",(Function.prototype.call.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2000,2023,45>",(Function.prototype.call)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2000,2018,45>",(Function.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2000,2008,45>",(Function)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (re2) != "undefined") {_RecordType("<2029,2032,45>",(re2)); Inst18++; } } catch(e) {}
  Function.prototype.call.call(re2, null, 'abcdefghijklm') + 'z';
});

var re3 = /e../;
try { if (Inst19 <= 1000 && typeof (re3) != "undefined") {_RecordType("<2073,2076,48>",(re3)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2086,2098,49>",(assertThrows)); Inst20++; } } catch(e) {}
assertThrows(function() {
try { if (Inst21 <= 1000 && typeof (Function.prototype.call.apply) != "undefined") {_RecordType("<2114,2143,50>",(Function.prototype.call.apply)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2114,2137,50>",(Function.prototype.call)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2114,2132,50>",(Function.prototype)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2114,2122,50>",(Function)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (re3) != "undefined") {_RecordType("<2151,2154,51>",(re3)); Inst25++; } } catch(e) {}
  Function.prototype.call.apply(
      re3, [null, 'abcdefghijklm']) + 'z';
});

var re4 = /f../;
try { if (Inst26 <= 1000 && typeof (re4) != "undefined") {_RecordType("<2197,2200,54>",(re4)); Inst26++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2210,2222,55>",(assertThrows)); Inst27++; } } catch(e) {}
assertThrows(function() {
try { if (Inst28 <= 1000 && typeof (Function.prototype.apply.call) != "undefined") {_RecordType("<2238,2267,56>",(Function.prototype.apply.call)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Function.prototype.apply) != "undefined") {_RecordType("<2238,2262,56>",(Function.prototype.apply)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2238,2256,56>",(Function.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2238,2246,56>",(Function)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (re4) != "undefined") {_RecordType("<2275,2278,57>",(re4)); Inst32++; } } catch(e) {}
  Function.prototype.apply.call(
      re4, null, ['abcdefghijklm']) + 'z';
});

var re5 = /g../;
try { if (Inst33 <= 1000 && typeof (re5) != "undefined") {_RecordType("<2321,2324,60>",(re5)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<2334,2346,61>",(assertThrows)); Inst34++; } } catch(e) {}
assertThrows(function() {
try { if (Inst35 <= 1000 && typeof (Function.prototype.apply.apply) != "undefined") {_RecordType("<2362,2392,62>",(Function.prototype.apply.apply)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Function.prototype.apply) != "undefined") {_RecordType("<2362,2386,62>",(Function.prototype.apply)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2362,2380,62>",(Function.prototype)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2362,2370,62>",(Function)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (re4) != "undefined") {_RecordType("<2400,2403,63>",(re4)); Inst39++; } } catch(e) {}
  Function.prototype.apply.apply(
      re4, [null, ['abcdefghijklm']]) + 'z';
});

