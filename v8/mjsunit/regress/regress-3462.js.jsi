var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


try { if (Inst0 <= 1000 && typeof (TestFunctionPrototypeSetter) != "undefined") {_RecordType("<178,205,6>",(TestFunctionPrototypeSetter)); Inst0++; } } catch(e) {}
function TestFunctionPrototypeSetter() {
  var f = function() {};
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<216,217,7>",(f)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<257,258,8>",(f)); Inst3++; } } catch(e) {}
  var o = {__proto__: f};
try { if (Inst2 <= 1000 && typeof (o) != "undefined") {_RecordType("<241,242,8>",(o)); Inst2++; } } catch(e) {}
  o.prototype = 42;
try { if (Inst4 <= 1000 && typeof (o.prototype) != "undefined") {_RecordType("<263,274,9>",(o.prototype)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (o) != "undefined") {_RecordType("<263,264,9>",(o)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<283,295,10>",(assertEquals)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (o.prototype) != "undefined") {_RecordType("<300,311,10>",(o.prototype)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (o) != "undefined") {_RecordType("<300,301,10>",(o)); Inst8++; } } catch(e) {}
  assertEquals(42, o.prototype);
try { if (Inst9 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<316,326,11>",(assertTrue)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<327,343,11>",(o.hasOwnProperty)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (o) != "undefined") {_RecordType("<327,328,11>",(o)); Inst11++; } } catch(e) {}
  assertTrue(o.hasOwnProperty('prototype'));
}
try { if (Inst12 <= 1000 && typeof (TestFunctionPrototypeSetter) != "undefined") {_RecordType("<361,388,13>",(TestFunctionPrototypeSetter)); Inst12++; } } catch(e) {}
TestFunctionPrototypeSetter();


try { if (Inst13 <= 1000 && typeof (TestFunctionPrototypeSetterOnValue) != "undefined") {_RecordType("<403,437,16>",(TestFunctionPrototypeSetterOnValue)); Inst13++; } } catch(e) {}
function TestFunctionPrototypeSetterOnValue() {
  var f = function() {};
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<448,449,17>",(f)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<478,489,18>",(f.prototype)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f) != "undefined") {_RecordType("<478,479,18>",(f)); Inst17++; } } catch(e) {}
  var fp = f.prototype;
try { if (Inst15 <= 1000 && typeof (fp) != "undefined") {_RecordType("<473,475,18>",(fp)); Inst15++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<522,523,19>",(f)); Inst21++; } } catch(e) {}
  Number.prototype.__proto__ = f;
try { if (Inst18 <= 1000 && typeof (Number.prototype.__proto__) != "undefined") {_RecordType("<493,519,19>",(Number.prototype.__proto__)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<493,509,19>",(Number.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Number) != "undefined") {_RecordType("<493,499,19>",(Number)); Inst20++; } } catch(e) {}
  var n = 42;
try { if (Inst22 <= 1000 && typeof (n) != "undefined") {_RecordType("<531,532,20>",(n)); Inst22++; } } catch(e) {}
  var o = {};
try { if (Inst23 <= 1000 && typeof (o) != "undefined") {_RecordType("<545,546,21>",(o)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (o) != "undefined") {_RecordType("<569,570,22>",(o)); Inst26++; } } catch(e) {}
  n.prototype = o;
try { if (Inst24 <= 1000 && typeof (n.prototype) != "undefined") {_RecordType("<555,566,22>",(n.prototype)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (n) != "undefined") {_RecordType("<555,556,22>",(n)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<574,586,23>",(assertEquals)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (fp) != "undefined") {_RecordType("<587,589,23>",(fp)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (n.prototype) != "undefined") {_RecordType("<591,602,23>",(n.prototype)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (n) != "undefined") {_RecordType("<591,592,23>",(n)); Inst30++; } } catch(e) {}
  assertEquals(fp, n.prototype);
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<607,619,24>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (fp) != "undefined") {_RecordType("<620,622,24>",(fp)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f.prototype) != "undefined") {_RecordType("<624,635,24>",(f.prototype)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<624,625,24>",(f)); Inst34++; } } catch(e) {}
  assertEquals(fp, f.prototype);
try { if (Inst35 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<640,651,25>",(assertFalse)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Number.prototype.hasOwnProperty) != "undefined") {_RecordType("<652,683,25>",(Number.prototype.hasOwnProperty)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<652,668,25>",(Number.prototype)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Number) != "undefined") {_RecordType("<652,658,25>",(Number)); Inst38++; } } catch(e) {}
  assertFalse(Number.prototype.hasOwnProperty('prototype'));
}
try { if (Inst39 <= 1000 && typeof (TestFunctionPrototypeSetterOnValue) != "undefined") {_RecordType("<701,735,27>",(TestFunctionPrototypeSetterOnValue)); Inst39++; } } catch(e) {}
TestFunctionPrototypeSetterOnValue();


try { if (Inst40 <= 1000 && typeof (TestArrayLengthSetter) != "undefined") {_RecordType("<750,771,30>",(TestArrayLengthSetter)); Inst40++; } } catch(e) {}
function TestArrayLengthSetter() {
  var a = [1];
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<782,783,31>",(a)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (a) != "undefined") {_RecordType("<813,814,32>",(a)); Inst43++; } } catch(e) {}
  var o = {__proto__: a};
try { if (Inst42 <= 1000 && typeof (o) != "undefined") {_RecordType("<797,798,32>",(o)); Inst42++; } } catch(e) {}
  o.length = 2;
try { if (Inst44 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<819,827,33>",(o.length)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (o) != "undefined") {_RecordType("<819,820,33>",(o)); Inst45++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<835,847,34>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o.length) != "undefined") {_RecordType("<851,859,34>",(o.length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (o) != "undefined") {_RecordType("<851,852,34>",(o)); Inst48++; } } catch(e) {}
  assertEquals(2, o.length);
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<864,876,35>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (a.length) != "undefined") {_RecordType("<880,888,35>",(a.length)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (a) != "undefined") {_RecordType("<880,881,35>",(a)); Inst51++; } } catch(e) {}
  assertEquals(1, a.length);
try { if (Inst52 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<893,903,36>",(assertTrue)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (o.hasOwnProperty) != "undefined") {_RecordType("<904,920,36>",(o.hasOwnProperty)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (o) != "undefined") {_RecordType("<904,905,36>",(o)); Inst54++; } } catch(e) {}
  assertTrue(o.hasOwnProperty('length'));
}
try { if (Inst55 <= 1000 && typeof (TestArrayLengthSetter) != "undefined") {_RecordType("<935,956,38>",(TestArrayLengthSetter)); Inst55++; } } catch(e) {}
TestArrayLengthSetter();


try { if (Inst56 <= 1000 && typeof (TestArrayLengthSetterOnValue) != "undefined") {_RecordType("<971,999,41>",(TestArrayLengthSetterOnValue)); Inst56++; } } catch(e) {}
function TestArrayLengthSetterOnValue() {
  Number.prototype.__proto__ = [1];
try { if (Inst57 <= 1000 && typeof (Number.prototype.__proto__) != "undefined") {_RecordType("<1006,1032,42>",(Number.prototype.__proto__)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<1006,1022,42>",(Number.prototype)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1006,1012,42>",(Number)); Inst59++; } } catch(e) {}
  var n = 42;
try { if (Inst60 <= 1000 && typeof (n) != "undefined") {_RecordType("<1046,1047,43>",(n)); Inst60++; } } catch(e) {}
  n.length = 2;
try { if (Inst61 <= 1000 && typeof (n.length) != "undefined") {_RecordType("<1056,1064,44>",(n.length)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (n) != "undefined") {_RecordType("<1056,1057,44>",(n)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1072,1084,45>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (n.length) != "undefined") {_RecordType("<1088,1096,45>",(n.length)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (n) != "undefined") {_RecordType("<1088,1089,45>",(n)); Inst65++; } } catch(e) {}
  assertEquals(1, n.length);
try { if (Inst66 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1101,1112,46>",(assertFalse)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Number.prototype.hasOwnProperty) != "undefined") {_RecordType("<1113,1144,46>",(Number.prototype.hasOwnProperty)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<1113,1129,46>",(Number.prototype)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1113,1119,46>",(Number)); Inst69++; } } catch(e) {}
  assertFalse(Number.prototype.hasOwnProperty('length'));
}
try { if (Inst70 <= 1000 && typeof (TestArrayLengthSetterOnValue) != "undefined") {_RecordType("<1159,1187,48>",(TestArrayLengthSetterOnValue)); Inst70++; } } catch(e) {}
TestArrayLengthSetterOnValue();

