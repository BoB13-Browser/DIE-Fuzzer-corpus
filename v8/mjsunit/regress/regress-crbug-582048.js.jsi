var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-debug-as debug

try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<215,226,7>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<215,220,7>",(debug)); Inst2++; } } catch(e) {}
var Debug = debug.Debug;
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<207,212,7>",(Debug)); Inst0++; } } catch(e) {}

try { if (Inst3 <= 1000 && typeof (listener) != "undefined") {_RecordType("<238,246,9>",(listener)); Inst3++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst4 <= 1000 && typeof (event) != "undefined") {_RecordType("<247,252,9>",(event)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<254,264,9>",(exec_state)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<266,276,9>",(event_data)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (data) != "undefined") {_RecordType("<278,282,9>",(data)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (event) != "undefined") {_RecordType("<292,297,10>",(event)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<301,323,10>",(Debug.DebugEvent.Break)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<301,317,10>",(Debug.DebugEvent)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<301,306,10>",(Debug)); Inst11++; } } catch(e) {}
  if (event != Debug.DebugEvent.Break) return;
try { if (Inst39 <= 1000 && typeof (e) != "undefined") {_RecordType("<690,691,21>",(e)); Inst39++; } } catch(e) {}
  try {
try { if (Inst13 <= 1000 && typeof (exec_state.frameCount) != "undefined") {_RecordType("<363,384,12>",(exec_state.frameCount)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<363,373,12>",(exec_state)); Inst14++; } } catch(e) {}
    var frame_count = exec_state.frameCount();
try { if (Inst12 <= 1000 && typeof (frame_count) != "undefined") {_RecordType("<349,360,12>",(frame_count)); Inst12++; } } catch(e) {}
    for (var i = 0; i < frame_count; i++) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<401,402,13>",(i)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<408,409,13>",(i)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (frame_count) != "undefined") {_RecordType("<412,423,13>",(frame_count)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,13>",(i)); Inst18++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<450,466,14>",(exec_state.frame)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<450,460,14>",(exec_state)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<467,468,14>",(i)); Inst22++; } } catch(e) {}
      var frame = exec_state.frame(i);
try { if (Inst19 <= 1000 && typeof (frame) != "undefined") {_RecordType("<442,447,14>",(frame)); Inst19++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (frame.scopeCount) != "undefined") {_RecordType("<495,511,15>",(frame.scopeCount)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (frame) != "undefined") {_RecordType("<495,500,15>",(frame)); Inst25++; } } catch(e) {}
      var scope_count = frame.scopeCount();
try { if (Inst23 <= 1000 && typeof (scope_count) != "undefined") {_RecordType("<481,492,15>",(scope_count)); Inst23++; } } catch(e) {}
      for (var j = 0; j < scope_count; j++) {
try { if (Inst26 <= 1000 && typeof (j) != "undefined") {_RecordType("<530,531,16>",(j)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (j) != "undefined") {_RecordType("<537,538,16>",(j)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (scope_count) != "undefined") {_RecordType("<541,552,16>",(scope_count)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (j) != "undefined") {_RecordType("<554,555,16>",(j)); Inst29++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (frame.scope) != "undefined") {_RecordType("<581,592,17>",(frame.scope)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (frame) != "undefined") {_RecordType("<581,586,17>",(frame)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (j) != "undefined") {_RecordType("<593,594,17>",(j)); Inst33++; } } catch(e) {}
        var scope = frame.scope(j);
try { if (Inst30 <= 1000 && typeof (scope) != "undefined") {_RecordType("<573,578,17>",(scope)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<605,615,18>",(assertTrue)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (scope.scopeObject().property('').isUndefined) != "undefined") {_RecordType("<616,660,18>",(scope.scopeObject().property('').isUndefined)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (scope.scopeObject().property) != "undefined") {_RecordType("<616,644,18>",(scope.scopeObject().property)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (scope.scopeObject) != "undefined") {_RecordType("<616,633,18>",(scope.scopeObject)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (scope) != "undefined") {_RecordType("<616,621,18>",(scope)); Inst38++; } } catch(e) {}
        assertTrue(scope.scopeObject().property('').isUndefined());
      }
    }
  } catch (e) {
try { if (Inst40 <= 1000 && typeof (print) != "undefined") {_RecordType("<699,704,22>",(print)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (e) != "undefined") {_RecordType("<705,706,22>",(e)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<708,715,22>",(e.stack)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (e) != "undefined") {_RecordType("<708,709,22>",(e)); Inst43++; } } catch(e) {}
    print(e, e.stack);
try { if (Inst45 <= 1000 && typeof (e) != "undefined") {_RecordType("<734,735,23>",(e)); Inst45++; } } catch(e) {}
    exception = e;
try { if (Inst44 <= 1000 && typeof (exception) != "undefined") {_RecordType("<722,731,23>",(exception)); Inst44++; } } catch(e) {}
  }
}

try { if (Inst46 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<744,761,27>",(Debug.setListener)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<744,749,27>",(Debug)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (listener) != "undefined") {_RecordType("<762,770,27>",(listener)); Inst48++; } } catch(e) {}
Debug.setListener(listener);

(function(a = 1) { debugger; })();
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<784,785,29>",(a)); Inst49++; } } catch(e) {}

try { if (Inst50 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<810,827,31>",(Debug.setListener)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<810,815,31>",(Debug)); Inst51++; } } catch(e) {}
Debug.setListener(null);

