var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

var builtInPropertyNames = [
  'prototype', 'length', 'caller', 0, 1, '$1', 'arguments', 'name', 'message', 'constructor'
];
try { if (Inst0 <= 1000 && typeof (builtInPropertyNames) != "undefined") {_RecordType("<1602,1622,28>",(builtInPropertyNames)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (getAnException) != "undefined") {_RecordType("<1733,1747,32>",(getAnException)); Inst1++; } } catch(e) {}
function getAnException() {
try { if (Inst2 <= 1000 && typeof (e) != "undefined") {_RecordType("<1786,1787,35>",(e)); Inst2++; } } catch(e) {}
  try {
    ("str")();
  } catch (e) {
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<1802,1803,36>",(e)); Inst3++; } } catch(e) {}
    return e;
  }
}

try { if (Inst4 <= 1000 && typeof (getSpecialObjects) != "undefined") {_RecordType("<1821,1838,40>",(getSpecialObjects)); Inst4++; } } catch(e) {}
function getSpecialObjects() {
try { if (Inst5 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1905,1911,45>",(RegExp)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Date) != "undefined") {_RecordType("<1940,1944,48>",(Date)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (getAnException) != "undefined") {_RecordType("<1952,1966,49>",(getAnException)); Inst7++; } } catch(e) {}
  return [
    function () { },
    [1, 2, 3],
    /xxx/,
    RegExp,
    "blah",
    9,
    new Date(),
    getAnException()
  ];
}

var object = { };
try { if (Inst8 <= 1000 && typeof (object) != "undefined") {_RecordType("<1981,1987,53>",(object)); Inst8++; } } catch(e) {}
var fun = function () { };
try { if (Inst9 <= 1000 && typeof (fun) != "undefined") {_RecordType("<1999,2002,54>",(fun)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (getAnException) != "undefined") {_RecordType("<2042,2056,55>",(getAnException)); Inst11++; } } catch(e) {}
var someException = getAnException();
try { if (Inst10 <= 1000 && typeof (someException) != "undefined") {_RecordType("<2026,2039,55>",(someException)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Date) != "undefined") {_RecordType("<2079,2083,56>",(Date)); Inst13++; } } catch(e) {}
var someDate = new Date();
try { if (Inst12 <= 1000 && typeof (someDate) != "undefined") {_RecordType("<2064,2072,56>",(someDate)); Inst12++; } } catch(e) {}

try { if (Inst15 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<2110,2126,59>",(Number.prototype)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2110,2116,59>",(Number)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2139,2155,60>",(String.prototype)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (String) != "undefined") {_RecordType("<2139,2145,60>",(String)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<2167,2184,61>",(Boolean.prototype)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2167,2174,61>",(Boolean)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (object) != "undefined") {_RecordType("<2190,2196,62>",(object)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (object) != "undefined") {_RecordType("<2198,2204,62>",(object)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (fun) != "undefined") {_RecordType("<2210,2213,63>",(fun)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (fun) != "undefined") {_RecordType("<2215,2218,63>",(fun)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (someException) != "undefined") {_RecordType("<2224,2237,64>",(someException)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (someException) != "undefined") {_RecordType("<2239,2252,64>",(someException)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (someDate) != "undefined") {_RecordType("<2258,2266,65>",(someDate)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (someDate) != "undefined") {_RecordType("<2268,2276,65>",(someDate)); Inst28++; } } catch(e) {}
var objects = [
  [1, Number.prototype],
  ["foo", String.prototype],
  [true, Boolean.prototype],
  [object, object],
  [fun, fun],
  [someException, someException],
  [someDate, someDate]
];
try { if (Inst14 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2092,2099,58>",(objects)); Inst14++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<2291,2298,68>",(runTest)); Inst29++; } } catch(e) {}
function runTest(fun) {
try { if (Inst30 <= 1000 && typeof (fun) != "undefined") {_RecordType("<2299,2302,68>",(fun)); Inst30++; } } catch(e) {}
  for (var i in objects) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2317,2318,69>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2322,2329,69>",(objects)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (objects[i][0]) != "undefined") {_RecordType("<2347,2360,70>",(objects[i][0])); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (objects[i]) != "undefined") {_RecordType("<2347,2357,70>",(objects[i])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2347,2354,70>",(objects)); Inst36++; } } catch(e) {}
    var obj = objects[i][0];
try { if (Inst33 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2341,2344,70>",(obj)); Inst33++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (objects[i][1]) != "undefined") {_RecordType("<2378,2391,71>",(objects[i][1])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (objects[i]) != "undefined") {_RecordType("<2378,2388,71>",(objects[i])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2378,2385,71>",(objects)); Inst40++; } } catch(e) {}
    var chain = objects[i][1];
try { if (Inst37 <= 1000 && typeof (chain) != "undefined") {_RecordType("<2370,2375,71>",(chain)); Inst37++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (getSpecialObjects) != "undefined") {_RecordType("<2418,2435,72>",(getSpecialObjects)); Inst42++; } } catch(e) {}
    var specialObjects = getSpecialObjects();
try { if (Inst41 <= 1000 && typeof (specialObjects) != "undefined") {_RecordType("<2401,2415,72>",(specialObjects)); Inst41++; } } catch(e) {}
    for (var j in specialObjects) {
try { if (Inst43 <= 1000 && typeof (j) != "undefined") {_RecordType("<2452,2453,73>",(j)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (specialObjects) != "undefined") {_RecordType("<2457,2471,73>",(specialObjects)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (specialObjects[j]) != "undefined") {_RecordType("<2495,2512,74>",(specialObjects[j])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (specialObjects) != "undefined") {_RecordType("<2495,2509,74>",(specialObjects)); Inst47++; } } catch(e) {}
      var special = specialObjects[j];
try { if (Inst45 <= 1000 && typeof (special) != "undefined") {_RecordType("<2485,2492,74>",(special)); Inst45++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (special) != "undefined") {_RecordType("<2538,2545,75>",(special)); Inst50++; } } catch(e) {}
      chain.__proto__ = special;
try { if (Inst48 <= 1000 && typeof (chain.__proto__) != "undefined") {_RecordType("<2520,2535,75>",(chain.__proto__)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (chain) != "undefined") {_RecordType("<2520,2525,75>",(chain)); Inst49++; } } catch(e) {}
      for (var k in builtInPropertyNames) {
try { if (Inst51 <= 1000 && typeof (k) != "undefined") {_RecordType("<2562,2563,76>",(k)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (builtInPropertyNames) != "undefined") {_RecordType("<2567,2587,76>",(builtInPropertyNames)); Inst52++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (builtInPropertyNames[k]) != "undefined") {_RecordType("<2618,2641,77>",(builtInPropertyNames[k])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (builtInPropertyNames) != "undefined") {_RecordType("<2618,2638,77>",(builtInPropertyNames)); Inst55++; } } catch(e) {}
        var propertyName = builtInPropertyNames[k];
try { if (Inst53 <= 1000 && typeof (propertyName) != "undefined") {_RecordType("<2603,2615,77>",(propertyName)); Inst53++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (fun) != "undefined") {_RecordType("<2651,2654,78>",(fun)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2655,2658,78>",(obj)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (propertyName) != "undefined") {_RecordType("<2660,2672,78>",(propertyName)); Inst58++; } } catch(e) {}
        fun(obj, propertyName);
      }
    }
  }
}

try { if (Inst59 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<2696,2703,84>",(runTest)); Inst59++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (obj[name]) != "undefined") {_RecordType("<2734,2743,84>",(obj[name])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2734,2737,84>",(obj)); Inst63++; } } catch(e) {}
runTest(function (obj, name) { return obj[name]; });
try { if (Inst60 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2714,2717,84>",(obj)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (name) != "undefined") {_RecordType("<2719,2723,84>",(name)); Inst61++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (runTest) != "undefined") {_RecordType("<2749,2756,85>",(runTest)); Inst64++; } } catch(e) {}
runTest(function (obj, name) { return obj[name] = { }; });
try { if (Inst65 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2767,2770,85>",(obj)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (name) != "undefined") {_RecordType("<2772,2776,85>",(name)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (obj[name]) != "undefined") {_RecordType("<2787,2796,85>",(obj[name])); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (obj) != "undefined") {_RecordType("<2787,2790,85>",(obj)); Inst68++; } } catch(e) {}

