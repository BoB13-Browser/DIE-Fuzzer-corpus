var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-wasm

try { if (Inst0 <= 1000 && typeof (load) != "undefined") {_RecordType("<193,197,7>",(load)); Inst0++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-constants.js");
try { if (Inst1 <= 1000 && typeof (load) != "undefined") {_RecordType("<238,242,8>",(load)); Inst1++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-module-builder.js");

// Collect the Callsite objects instead of just a string:
Error.prepareStackTrace = function(error, frames) {
try { if (Inst4 <= 1000 && typeof (error) != "undefined") {_RecordType("<382,387,11>",(error)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (frames) != "undefined") {_RecordType("<389,395,11>",(frames)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (frames) != "undefined") {_RecordType("<408,414,12>",(frames)); Inst6++; } } catch(e) {}
  return frames;
};
try { if (Inst2 <= 1000 && typeof (Error.prepareStackTrace) != "undefined") {_RecordType("<347,370,11>",(Error.prepareStackTrace)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Error) != "undefined") {_RecordType("<347,352,11>",(Error)); Inst3++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<438,455,15>",(WasmModuleBuilder)); Inst8++; } } catch(e) {}
var builder = new WasmModuleBuilder();
try { if (Inst7 <= 1000 && typeof (builder) != "undefined") {_RecordType("<424,431,15>",(builder)); Inst7++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (builder.addType) != "undefined") {_RecordType("<476,491,17>",(builder.addType)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (builder) != "undefined") {_RecordType("<476,483,17>",(builder)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (kSig_i_v) != "undefined") {_RecordType("<492,500,17>",(kSig_i_v)); Inst12++; } } catch(e) {}
var sig_index = builder.addType(kSig_i_v)
try { if (Inst9 <= 1000 && typeof (sig_index) != "undefined") {_RecordType("<464,473,17>",(sig_index)); Inst9++; } } catch(e) {}

// Build a function to resemble this code:
//   if (idx < 2) {
//     return load(-2 / idx);
//   } else if (idx == 2) {
//     unreachable;
//   } else {
//     return call_indirect(idx);
//   }
// There are four different traps which are triggered by different input values:
// (0) division by zero; (1) mem oob; (2) unreachable; (3) invalid call target
// Each of them also has a different location where it traps.
try { if (Inst13 <= 1000 && typeof (builder.addFunction("main", kSig_i_i)
  .addBody([
      // offset 1
      kExprBlock,
            kExprGetLocal, 0,
            kExprI32Const, 2,
          kExprI32LtU,
        kExprIf,
        // offset 8
              kExprI32Const, 0x7e /* -2 */,
              kExprGetLocal, 0,
            kExprI32DivU,
          // offset 13
          kExprI32LoadMem, 0, 0,
          kExprBr, 1, 1,
        kExprEnd,
        // offset 20
            kExprGetLocal, 0,
            kExprI32Const, 2,
          kExprI32Eq,
        kExprIf,
          kExprUnreachable,
        kExprEnd,
        // offset 28
          kExprGetLocal, 0,
        kExprCallIndirect, kArity0, sig_index,
      kExprEnd,
  ])
  .exportAs) != "undefined") {_RecordType("<921,1623,30>",(builder.addFunction("main", kSig_i_i)
  .addBody([
      // offset 1
      kExprBlock,
            kExprGetLocal, 0,
            kExprI32Const, 2,
          kExprI32LtU,
        kExprIf,
        // offset 8
              kExprI32Const, 0x7e /* -2 */,
              kExprGetLocal, 0,
            kExprI32DivU,
          // offset 13
          kExprI32LoadMem, 0, 0,
          kExprBr, 1, 1,
        kExprEnd,
        // offset 20
            kExprGetLocal, 0,
            kExprI32Const, 2,
          kExprI32Eq,
        kExprIf,
          kExprUnreachable,
        kExprEnd,
        // offset 28
          kExprGetLocal, 0,
        kExprCallIndirect, kArity0, sig_index,
      kExprEnd,
  ])
  .exportAs)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (builder.addFunction("main", kSig_i_i)
  .addBody) != "undefined") {_RecordType("<921,969,30>",(builder.addFunction("main", kSig_i_i)
  .addBody)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<921,940,30>",(builder.addFunction)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (builder) != "undefined") {_RecordType("<921,928,30>",(builder)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (kSig_i_i) != "undefined") {_RecordType("<949,957,30>",(kSig_i_i)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (kExprBlock) != "undefined") {_RecordType("<996,1006,33>",(kExprBlock)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<1020,1033,34>",(kExprGetLocal)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<1050,1063,35>",(kExprI32Const)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (kExprI32LtU) != "undefined") {_RecordType("<1078,1089,36>",(kExprI32LtU)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (kExprIf) != "undefined") {_RecordType("<1099,1106,37>",(kExprIf)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<1142,1155,39>",(kExprI32Const)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<1186,1199,40>",(kExprGetLocal)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (kExprI32DivU) != "undefined") {_RecordType("<1216,1228,41>",(kExprI32DivU)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (kExprI32LoadMem) != "undefined") {_RecordType("<1263,1278,43>",(kExprI32LoadMem)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (kExprBr) != "undefined") {_RecordType("<1296,1303,44>",(kExprBr)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (kExprEnd) != "undefined") {_RecordType("<1319,1327,45>",(kExprEnd)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<1362,1375,47>",(kExprGetLocal)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<1392,1405,48>",(kExprI32Const)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (kExprI32Eq) != "undefined") {_RecordType("<1420,1430,49>",(kExprI32Eq)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (kExprIf) != "undefined") {_RecordType("<1440,1447,50>",(kExprIf)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (kExprUnreachable) != "undefined") {_RecordType("<1459,1475,51>",(kExprUnreachable)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (kExprEnd) != "undefined") {_RecordType("<1485,1493,52>",(kExprEnd)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<1526,1539,54>",(kExprGetLocal)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (kExprCallIndirect) != "undefined") {_RecordType("<1552,1569,55>",(kExprCallIndirect)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (kArity0) != "undefined") {_RecordType("<1571,1578,55>",(kArity0)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (sig_index) != "undefined") {_RecordType("<1580,1589,55>",(sig_index)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (kExprEnd) != "undefined") {_RecordType("<1597,1605,56>",(kExprEnd)); Inst39++; } } catch(e) {}
builder.addFunction("main", kSig_i_i)
  .addBody([
      // offset 1
      kExprBlock,
            kExprGetLocal, 0,
            kExprI32Const, 2,
          kExprI32LtU,
        kExprIf,
        // offset 8
              kExprI32Const, 0x7e /* -2 */,
              kExprGetLocal, 0,
            kExprI32DivU,
          // offset 13
          kExprI32LoadMem, 0, 0,
          kExprBr, 1, 1,
        kExprEnd,
        // offset 20
            kExprGetLocal, 0,
            kExprI32Const, 2,
          kExprI32Eq,
        kExprIf,
          kExprUnreachable,
        kExprEnd,
        // offset 28
          kExprGetLocal, 0,
        kExprCallIndirect, kArity0, sig_index,
      kExprEnd,
  ])
  .exportAs("main");

try { if (Inst41 <= 1000 && typeof (builder.instantiate) != "undefined") {_RecordType("<1647,1666,60>",(builder.instantiate)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1647,1654,60>",(builder)); Inst42++; } } catch(e) {}
var module = builder.instantiate();
try { if (Inst40 <= 1000 && typeof (module) != "undefined") {_RecordType("<1638,1644,60>",(module)); Inst40++; } } catch(e) {}

try { if (Inst43 <= 1000 && typeof (testWasmTrap) != "undefined") {_RecordType("<1680,1692,62>",(testWasmTrap)); Inst43++; } } catch(e) {}
function testWasmTrap(value, reason, position) {
try { if (Inst44 <= 1000 && typeof (value) != "undefined") {_RecordType("<1693,1698,62>",(value)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (reason) != "undefined") {_RecordType("<1700,1706,62>",(reason)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (position) != "undefined") {_RecordType("<1708,1716,62>",(position)); Inst46++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (e) != "undefined") {_RecordType("<1808,1809,66>",(e)); Inst52++; } } catch(e) {}
  try {
try { if (Inst47 <= 1000 && typeof (module.exports.main) != "undefined") {_RecordType("<1732,1751,64>",(module.exports.main)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (module.exports) != "undefined") {_RecordType("<1732,1746,64>",(module.exports)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (module) != "undefined") {_RecordType("<1732,1738,64>",(module)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (value) != "undefined") {_RecordType("<1752,1757,64>",(value)); Inst50++; } } catch(e) {}
    module.exports.main(value);
try { if (Inst51 <= 1000 && typeof (fail) != "undefined") {_RecordType("<1764,1768,65>",(fail)); Inst51++; } } catch(e) {}
    fail("expected wasm exception");
  } catch (e) {
try { if (Inst53 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1817,1829,67>",(assertEquals)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (kTrapMsgs[reason]) != "undefined") {_RecordType("<1830,1847,67>",(kTrapMsgs[reason])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (kTrapMsgs) != "undefined") {_RecordType("<1830,1839,67>",(kTrapMsgs)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<1849,1858,67>",(e.message)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (e) != "undefined") {_RecordType("<1849,1850,67>",(e)); Inst57++; } } catch(e) {}
    assertEquals(kTrapMsgs[reason], e.message, "trap reason");
try { if (Inst58 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1880,1892,68>",(assertEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (e.stack.length) != "undefined") {_RecordType("<1896,1910,68>",(e.stack.length)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1896,1903,68>",(e.stack)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (e) != "undefined") {_RecordType("<1896,1897,68>",(e)); Inst61++; } } catch(e) {}
    assertEquals(3, e.stack.length, "number of frames");
try { if (Inst62 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1937,1949,69>",(assertEquals)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (e.stack[0].getLineNumber) != "undefined") {_RecordType("<1953,1977,69>",(e.stack[0].getLineNumber)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (e.stack[0]) != "undefined") {_RecordType("<1953,1963,69>",(e.stack[0])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1953,1960,69>",(e.stack)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (e) != "undefined") {_RecordType("<1953,1954,69>",(e)); Inst66++; } } catch(e) {}
    assertEquals(0, e.stack[0].getLineNumber(), "wasmFunctionIndex");
try { if (Inst67 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2007,2019,70>",(assertEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (position) != "undefined") {_RecordType("<2020,2028,70>",(position)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (e.stack[0].getPosition) != "undefined") {_RecordType("<2030,2052,70>",(e.stack[0].getPosition)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (e.stack[0]) != "undefined") {_RecordType("<2030,2040,70>",(e.stack[0])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<2030,2037,70>",(e.stack)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (e) != "undefined") {_RecordType("<2030,2031,70>",(e)); Inst72++; } } catch(e) {}
    assertEquals(position, e.stack[0].getPosition(), "position");
  }
}

// The actual tests:
try { if (Inst73 <= 1000 && typeof (testWasmTrap) != "undefined") {_RecordType("<2097,2109,75>",(testWasmTrap)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (kTrapDivByZero) != "undefined") {_RecordType("<2113,2127,75>",(kTrapDivByZero)); Inst74++; } } catch(e) {}
testWasmTrap(0, kTrapDivByZero,      12);
try { if (Inst75 <= 1000 && typeof (testWasmTrap) != "undefined") {_RecordType("<2139,2151,76>",(testWasmTrap)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (kTrapMemOutOfBounds) != "undefined") {_RecordType("<2155,2174,76>",(kTrapMemOutOfBounds)); Inst76++; } } catch(e) {}
testWasmTrap(1, kTrapMemOutOfBounds, 13);
try { if (Inst77 <= 1000 && typeof (testWasmTrap) != "undefined") {_RecordType("<2181,2193,77>",(testWasmTrap)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (kTrapUnreachable) != "undefined") {_RecordType("<2197,2213,77>",(kTrapUnreachable)); Inst78++; } } catch(e) {}
testWasmTrap(2, kTrapUnreachable,    26);
try { if (Inst79 <= 1000 && typeof (testWasmTrap) != "undefined") {_RecordType("<2223,2235,78>",(testWasmTrap)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (kTrapFuncInvalid) != "undefined") {_RecordType("<2239,2255,78>",(kTrapFuncInvalid)); Inst80++; } } catch(e) {}
testWasmTrap(3, kTrapFuncInvalid,    30);

