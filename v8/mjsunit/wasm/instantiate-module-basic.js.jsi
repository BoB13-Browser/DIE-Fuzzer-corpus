var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-wasm

try { if (Inst0 <= 1000 && typeof (load) != "undefined") {_RecordType("<193,197,7>",(load)); Inst0++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-constants.js");
try { if (Inst1 <= 1000 && typeof (load) != "undefined") {_RecordType("<238,242,8>",(load)); Inst1++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-module-builder.js");

let kReturnValue = 117;
try { if (Inst2 <= 1000 && typeof (kReturnValue) != "undefined") {_RecordType("<293,305,10>",(kReturnValue)); Inst2++; } } catch(e) {}

let buffer = (() => {
try { if (Inst5 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<356,373,13>",(WasmModuleBuilder)); Inst5++; } } catch(e) {}
  let builder = new WasmModuleBuilder();
try { if (Inst4 <= 1000 && typeof (builder) != "undefined") {_RecordType("<342,349,13>",(builder)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (builder.addMemory) != "undefined") {_RecordType("<379,396,14>",(builder.addMemory)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (builder) != "undefined") {_RecordType("<379,386,14>",(builder)); Inst7++; } } catch(e) {}
  builder.addMemory(1, 1, true);
try { if (Inst8 <= 1000 && typeof (builder.addFunction("main", kSig_i)
    .addBody([kExprI8Const, kReturnValue])
    .exportFunc) != "undefined") {_RecordType("<412,506,15>",(builder.addFunction("main", kSig_i)
    .addBody([kExprI8Const, kReturnValue])
    .exportFunc)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (builder.addFunction("main", kSig_i)
    .addBody) != "undefined") {_RecordType("<412,460,15>",(builder.addFunction("main", kSig_i)
    .addBody)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<412,431,15>",(builder.addFunction)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (builder) != "undefined") {_RecordType("<412,419,15>",(builder)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (kSig_i) != "undefined") {_RecordType("<440,446,15>",(kSig_i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (kExprI8Const) != "undefined") {_RecordType("<462,474,16>",(kExprI8Const)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (kReturnValue) != "undefined") {_RecordType("<476,488,16>",(kReturnValue)); Inst14++; } } catch(e) {}
  builder.addFunction("main", kSig_i)
    .addBody([kExprI8Const, kReturnValue])
    .exportFunc();

try { if (Inst15 <= 1000 && typeof (builder.toBuffer) != "undefined") {_RecordType("<520,536,19>",(builder.toBuffer)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (builder) != "undefined") {_RecordType("<520,527,19>",(builder)); Inst16++; } } catch(e) {}
  return builder.toBuffer();
})()
try { if (Inst3 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<318,324,12>",(buffer)); Inst3++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (CheckInstance) != "undefined") {_RecordType("<555,568,22>",(CheckInstance)); Inst17++; } } catch(e) {}
function CheckInstance(instance) {
try { if (Inst18 <= 1000 && typeof (instance) != "undefined") {_RecordType("<569,577,22>",(instance)); Inst18++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<583,594,23>",(assertFalse)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (instance) != "undefined") {_RecordType("<595,603,23>",(instance)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<608,617,23>",(undefined)); Inst21++; } } catch(e) {}
  assertFalse(instance === undefined);
try { if (Inst22 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<622,633,24>",(assertFalse)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (instance) != "undefined") {_RecordType("<634,642,24>",(instance)); Inst23++; } } catch(e) {}
  assertFalse(instance === null);
try { if (Inst24 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<656,667,25>",(assertFalse)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (instance) != "undefined") {_RecordType("<668,676,25>",(instance)); Inst25++; } } catch(e) {}
  assertFalse(instance === 0);
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<687,699,26>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (instance) != "undefined") {_RecordType("<717,725,26>",(instance)); Inst27++; } } catch(e) {}
  assertEquals("object", typeof instance);

  // Check the memory is an ArrayBuffer.
try { if (Inst29 <= 1000 && typeof (instance.exports.memory) != "undefined") {_RecordType("<782,805,29>",(instance.exports.memory)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<782,798,29>",(instance.exports)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (instance) != "undefined") {_RecordType("<782,790,29>",(instance)); Inst31++; } } catch(e) {}
  var mem = instance.exports.memory;
try { if (Inst28 <= 1000 && typeof (mem) != "undefined") {_RecordType("<776,779,29>",(mem)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<809,820,30>",(assertFalse)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (mem) != "undefined") {_RecordType("<821,824,30>",(mem)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<829,838,30>",(undefined)); Inst34++; } } catch(e) {}
  assertFalse(mem === undefined);
try { if (Inst35 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<843,854,31>",(assertFalse)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (mem) != "undefined") {_RecordType("<855,858,31>",(mem)); Inst36++; } } catch(e) {}
  assertFalse(mem === null);
try { if (Inst37 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<872,883,32>",(assertFalse)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (mem) != "undefined") {_RecordType("<884,887,32>",(mem)); Inst38++; } } catch(e) {}
  assertFalse(mem === 0);
try { if (Inst39 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<898,910,33>",(assertEquals)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (mem) != "undefined") {_RecordType("<928,931,33>",(mem)); Inst40++; } } catch(e) {}
  assertEquals("object", typeof mem);
try { if (Inst41 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<936,946,34>",(assertTrue)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (mem) != "undefined") {_RecordType("<947,950,34>",(mem)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<962,973,34>",(ArrayBuffer)); Inst43++; } } catch(e) {}
  assertTrue(mem instanceof ArrayBuffer);
  for (let i = 0; i < 4; i++) {
try { if (Inst44 <= 1000 && typeof (i) != "undefined") {_RecordType("<987,988,35>",(i)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<994,995,35>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<1001,1002,35>",(i)); Inst46++; } } catch(e) {}
    instance.exports.memory = 0;  // should be ignored
try { if (Inst47 <= 1000 && typeof (instance.exports.memory) != "undefined") {_RecordType("<1012,1035,36>",(instance.exports.memory)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<1012,1028,36>",(instance.exports)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (instance) != "undefined") {_RecordType("<1012,1020,36>",(instance)); Inst49++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (assertSame) != "undefined") {_RecordType("<1067,1077,37>",(assertSame)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (mem) != "undefined") {_RecordType("<1078,1081,37>",(mem)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (instance.exports.memory) != "undefined") {_RecordType("<1083,1106,37>",(instance.exports.memory)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<1083,1099,37>",(instance.exports)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (instance) != "undefined") {_RecordType("<1083,1091,37>",(instance)); Inst54++; } } catch(e) {}
    assertSame(mem, instance.exports.memory);
  }

try { if (Inst55 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1116,1128,40>",(assertEquals)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (instance.exports.memory.byteLength) != "undefined") {_RecordType("<1136,1170,40>",(instance.exports.memory.byteLength)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (instance.exports.memory) != "undefined") {_RecordType("<1136,1159,40>",(instance.exports.memory)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<1136,1152,40>",(instance.exports)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (instance) != "undefined") {_RecordType("<1136,1144,40>",(instance)); Inst59++; } } catch(e) {}
  assertEquals(65536, instance.exports.memory.byteLength);

  // Check the properties of the main function.
try { if (Inst61 <= 1000 && typeof (instance.exports.main) != "undefined") {_RecordType("<1235,1256,43>",(instance.exports.main)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<1235,1251,43>",(instance.exports)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (instance) != "undefined") {_RecordType("<1235,1243,43>",(instance)); Inst63++; } } catch(e) {}
  let main = instance.exports.main;
try { if (Inst60 <= 1000 && typeof (main) != "undefined") {_RecordType("<1228,1232,43>",(main)); Inst60++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1260,1271,44>",(assertFalse)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (main) != "undefined") {_RecordType("<1272,1276,44>",(main)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1281,1290,44>",(undefined)); Inst66++; } } catch(e) {}
  assertFalse(main === undefined);
try { if (Inst67 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1295,1306,45>",(assertFalse)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (main) != "undefined") {_RecordType("<1307,1311,45>",(main)); Inst68++; } } catch(e) {}
  assertFalse(main === null);
try { if (Inst69 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1325,1336,46>",(assertFalse)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (main) != "undefined") {_RecordType("<1337,1341,46>",(main)); Inst70++; } } catch(e) {}
  assertFalse(main === 0);
try { if (Inst71 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1352,1364,47>",(assertEquals)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (main) != "undefined") {_RecordType("<1384,1388,47>",(main)); Inst72++; } } catch(e) {}
  assertEquals("function", typeof main);

try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1394,1406,49>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (kReturnValue) != "undefined") {_RecordType("<1407,1419,49>",(kReturnValue)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (main) != "undefined") {_RecordType("<1421,1425,49>",(main)); Inst75++; } } catch(e) {}
  assertEquals(kReturnValue, main());
}

// Deprecated experimental API.
try { if (Inst76 <= 1000 && typeof (CheckInstance) != "undefined") {_RecordType("<1465,1478,53>",(CheckInstance)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Wasm.instantiateModule) != "undefined") {_RecordType("<1479,1501,53>",(Wasm.instantiateModule)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Wasm) != "undefined") {_RecordType("<1479,1483,53>",(Wasm)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1502,1508,53>",(buffer)); Inst79++; } } catch(e) {}
CheckInstance(Wasm.instantiateModule(buffer));

// Official API
try { if (Inst81 <= 1000 && typeof (WebAssembly.Module) != "undefined") {_RecordType("<1546,1564,56>",(WebAssembly.Module)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<1546,1557,56>",(WebAssembly)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1565,1571,56>",(buffer)); Inst83++; } } catch(e) {}
let module = new WebAssembly.Module(buffer);
try { if (Inst80 <= 1000 && typeof (module) != "undefined") {_RecordType("<1533,1539,56>",(module)); Inst80++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (CheckInstance) != "undefined") {_RecordType("<1574,1587,57>",(CheckInstance)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<1592,1612,57>",(WebAssembly.Instance)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<1592,1603,57>",(WebAssembly)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (module) != "undefined") {_RecordType("<1613,1619,57>",(module)); Inst87++; } } catch(e) {}
CheckInstance(new WebAssembly.Instance(module));

try { if (Inst89 <= 1000 && typeof (WebAssembly.compile) != "undefined") {_RecordType("<1638,1657,59>",(WebAssembly.compile)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<1638,1649,59>",(WebAssembly)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<1658,1664,59>",(buffer)); Inst91++; } } catch(e) {}
let promise = WebAssembly.compile(buffer);
try { if (Inst88 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1628,1635,59>",(promise)); Inst88++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (promise.then) != "undefined") {_RecordType("<1667,1679,60>",(promise.then)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (promise) != "undefined") {_RecordType("<1667,1674,60>",(promise)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (module) != "undefined") {_RecordType("<1680,1686,60>",(module)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (CheckInstance) != "undefined") {_RecordType("<1690,1703,60>",(CheckInstance)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<1708,1728,60>",(WebAssembly.Instance)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<1708,1719,60>",(WebAssembly)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (module) != "undefined") {_RecordType("<1729,1735,60>",(module)); Inst98++; } } catch(e) {}
promise.then(module => CheckInstance(new WebAssembly.Instance(module)));

