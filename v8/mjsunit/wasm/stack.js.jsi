var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// clang-format off
// Flags: --expose-wasm

try { if (Inst0 <= 1000 && typeof (load) != "undefined") {_RecordType("<213,217,8>",(load)); Inst0++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-constants.js");
try { if (Inst1 <= 1000 && typeof (load) != "undefined") {_RecordType("<258,262,9>",(load)); Inst1++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-module-builder.js");

// The stack trace contains file path, only keep "stack.js".
try { if (Inst2 <= 1000 && typeof (stripPath) != "undefined") {_RecordType("<379,388,12>",(stripPath)); Inst2++; } } catch(e) {}
function stripPath(s) {
try { if (Inst3 <= 1000 && typeof (s) != "undefined") {_RecordType("<389,390,12>",(s)); Inst3++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (s.replace) != "undefined") {_RecordType("<403,412,13>",(s.replace)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (s) != "undefined") {_RecordType("<403,404,13>",(s)); Inst5++; } } catch(e) {}
  return s.replace(/[^ (]*stack\.js/g, "stack.js");
}

try { if (Inst6 <= 1000 && typeof (verifyStack) != "undefined") {_RecordType("<458,469,16>",(verifyStack)); Inst6++; } } catch(e) {}
function verifyStack(frames, expected) {
try { if (Inst7 <= 1000 && typeof (frames) != "undefined") {_RecordType("<470,476,16>",(frames)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (expected) != "undefined") {_RecordType("<478,486,16>",(expected)); Inst8++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<492,504,17>",(assertEquals)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (expected.length) != "undefined") {_RecordType("<505,520,17>",(expected.length)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (expected) != "undefined") {_RecordType("<505,513,17>",(expected)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (frames.length) != "undefined") {_RecordType("<522,535,17>",(frames.length)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (frames) != "undefined") {_RecordType("<522,528,17>",(frames)); Inst13++; } } catch(e) {}
  assertEquals(expected.length, frames.length, "number of frames mismatch");
try { if (Inst14 <= 1000 && typeof (expected.forEach) != "undefined") {_RecordType("<569,585,18>",(expected.forEach)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (expected) != "undefined") {_RecordType("<569,577,18>",(expected)); Inst15++; } } catch(e) {}
  expected.forEach(function(exp, i) {
try { if (Inst16 <= 1000 && typeof (exp) != "undefined") {_RecordType("<595,598,18>",(exp)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<600,601,18>",(i)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<609,621,19>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (exp[1]) != "undefined") {_RecordType("<622,628,19>",(exp[1])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (exp) != "undefined") {_RecordType("<622,625,19>",(exp)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (frames[i].getFunctionName) != "undefined") {_RecordType("<630,655,19>",(frames[i].getFunctionName)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (frames[i]) != "undefined") {_RecordType("<630,639,19>",(frames[i])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (frames) != "undefined") {_RecordType("<630,636,19>",(frames)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<671,672,20>",(i)); Inst24++; } } catch(e) {}
    assertEquals(exp[1], frames[i].getFunctionName(),
        "["+i+"].getFunctionName()");
try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<701,713,21>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (exp[2]) != "undefined") {_RecordType("<714,720,21>",(exp[2])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (exp) != "undefined") {_RecordType("<714,717,21>",(exp)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (frames[i].getLineNumber) != "undefined") {_RecordType("<722,745,21>",(frames[i].getLineNumber)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (frames[i]) != "undefined") {_RecordType("<722,731,21>",(frames[i])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (frames) != "undefined") {_RecordType("<722,728,21>",(frames)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<753,754,21>",(i)); Inst31++; } } catch(e) {}
    assertEquals(exp[2], frames[i].getLineNumber(), "["+i+"].getLineNumber()");
try { if (Inst32 <= 1000 && typeof (exp[0]) != "undefined") {_RecordType("<785,791,22>",(exp[0])); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (exp) != "undefined") {_RecordType("<785,788,22>",(exp)); Inst33++; } } catch(e) {}
    if (exp[0])
try { if (Inst34 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<799,811,23>",(assertEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (exp[3]) != "undefined") {_RecordType("<812,818,23>",(exp[3])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (exp) != "undefined") {_RecordType("<812,815,23>",(exp)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (frames[i].getPosition) != "undefined") {_RecordType("<820,841,23>",(frames[i].getPosition)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (frames[i]) != "undefined") {_RecordType("<820,829,23>",(frames[i])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (frames) != "undefined") {_RecordType("<820,826,23>",(frames)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<859,860,24>",(i)); Inst40++; } } catch(e) {}
      assertEquals(exp[3], frames[i].getPosition(),
          "["+i+"].getPosition()");
try { if (Inst41 <= 1000 && typeof (assertContains) != "undefined") {_RecordType("<885,899,25>",(assertContains)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (exp[4]) != "undefined") {_RecordType("<900,906,25>",(exp[4])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (exp) != "undefined") {_RecordType("<900,903,25>",(exp)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (frames[i].getFileName) != "undefined") {_RecordType("<908,929,25>",(frames[i].getFileName)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (frames[i]) != "undefined") {_RecordType("<908,917,25>",(frames[i])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (frames) != "undefined") {_RecordType("<908,914,25>",(frames)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (i) != "undefined") {_RecordType("<937,938,25>",(i)); Inst47++; } } catch(e) {}
    assertContains(exp[4], frames[i].getFileName(), "["+i+"].getFileName()");
    var toString;
try { if (Inst48 <= 1000 && typeof (toString) != "undefined") {_RecordType("<967,975,26>",(toString)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (exp[0]) != "undefined") {_RecordType("<985,991,27>",(exp[0])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (exp) != "undefined") {_RecordType("<985,988,27>",(exp)); Inst50++; } } catch(e) {}
    if (exp[0]) {
try { if (Inst52 <= 1000 && typeof (exp[1]) != "undefined") {_RecordType("<1012,1018,28>",(exp[1])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (exp) != "undefined") {_RecordType("<1012,1015,28>",(exp)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (exp[2]) != "undefined") {_RecordType("<1035,1041,28>",(exp[2])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (exp) != "undefined") {_RecordType("<1035,1038,28>",(exp)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (exp[3]) != "undefined") {_RecordType("<1051,1057,28>",(exp[3])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (exp) != "undefined") {_RecordType("<1051,1054,28>",(exp)); Inst57++; } } catch(e) {}
      toString = exp[1] + " (<WASM>[" + exp[2] + "]+" + exp[3] + ")";
try { if (Inst51 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1001,1009,28>",(toString)); Inst51++; } } catch(e) {}
    } else {
try { if (Inst59 <= 1000 && typeof (exp[4]) != "undefined") {_RecordType("<1095,1101,30>",(exp[4])); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (exp) != "undefined") {_RecordType("<1095,1098,30>",(exp)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (exp[2]) != "undefined") {_RecordType("<1110,1116,30>",(exp[2])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (exp) != "undefined") {_RecordType("<1110,1113,30>",(exp)); Inst62++; } } catch(e) {}
      toString = exp[4] + ":" + exp[2] + ":";
try { if (Inst58 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1084,1092,30>",(toString)); Inst58++; } } catch(e) {}
    }
try { if (Inst63 <= 1000 && typeof (assertContains) != "undefined") {_RecordType("<1134,1148,32>",(assertContains)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (toString) != "undefined") {_RecordType("<1149,1157,32>",(toString)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (frames[i].toString) != "undefined") {_RecordType("<1159,1177,32>",(frames[i].toString)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (frames[i]) != "undefined") {_RecordType("<1159,1168,32>",(frames[i])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (frames) != "undefined") {_RecordType("<1159,1165,32>",(frames)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (i) != "undefined") {_RecordType("<1185,1186,32>",(i)); Inst68++; } } catch(e) {}
    assertContains(toString, frames[i].toString(), "["+i+"].toString()");
  });
}


var stack;
try { if (Inst69 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1218,1223,37>",(stack)); Inst69++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (STACK) != "undefined") {_RecordType("<1234,1239,38>",(STACK)); Inst70++; } } catch(e) {}
function STACK() {
try { if (Inst72 <= 1000 && typeof (Error) != "undefined") {_RecordType("<1258,1263,39>",(Error)); Inst72++; } } catch(e) {}
  var e = new Error();
try { if (Inst71 <= 1000 && typeof (e) != "undefined") {_RecordType("<1250,1251,39>",(e)); Inst71++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<1277,1284,40>",(e.stack)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (e) != "undefined") {_RecordType("<1277,1278,40>",(e)); Inst75++; } } catch(e) {}
  stack = e.stack;
try { if (Inst73 <= 1000 && typeof (stack) != "undefined") {_RecordType("<1269,1274,40>",(stack)); Inst73++; } } catch(e) {}
}

try { if (Inst77 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<1307,1324,43>",(WasmModuleBuilder)); Inst77++; } } catch(e) {}
var builder = new WasmModuleBuilder();
try { if (Inst76 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1293,1300,43>",(builder)); Inst76++; } } catch(e) {}

try { if (Inst78 <= 1000 && typeof (builder.addImport) != "undefined") {_RecordType("<1329,1346,45>",(builder.addImport)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1329,1336,45>",(builder)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (kSig_v_v) != "undefined") {_RecordType("<1355,1363,45>",(kSig_v_v)); Inst80++; } } catch(e) {}
builder.addImport("func", kSig_v_v);

try { if (Inst81 <= 1000 && typeof (builder.addFunction("main", kSig_v_v)
  .addBody([kExprCallImport, kArity0, 0])
  .exportAs) != "undefined") {_RecordType("<1367,1458,47>",(builder.addFunction("main", kSig_v_v)
  .addBody([kExprCallImport, kArity0, 0])
  .exportAs)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (builder.addFunction("main", kSig_v_v)
  .addBody) != "undefined") {_RecordType("<1367,1415,47>",(builder.addFunction("main", kSig_v_v)
  .addBody)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<1367,1386,47>",(builder.addFunction)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1367,1374,47>",(builder)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (kSig_v_v) != "undefined") {_RecordType("<1395,1403,47>",(kSig_v_v)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (kExprCallImport) != "undefined") {_RecordType("<1417,1432,48>",(kExprCallImport)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (kArity0) != "undefined") {_RecordType("<1434,1441,48>",(kArity0)); Inst87++; } } catch(e) {}
builder.addFunction("main", kSig_v_v)
  .addBody([kExprCallImport, kArity0, 0])
  .exportAs("main");

try { if (Inst88 <= 1000 && typeof (builder.addFunction("exec_unreachable", kSig_v_v)
  .addBody([kExprUnreachable])
  .exportAs) != "undefined") {_RecordType("<1469,1561,51>",(builder.addFunction("exec_unreachable", kSig_v_v)
  .addBody([kExprUnreachable])
  .exportAs)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (builder.addFunction("exec_unreachable", kSig_v_v)
  .addBody) != "undefined") {_RecordType("<1469,1529,51>",(builder.addFunction("exec_unreachable", kSig_v_v)
  .addBody)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<1469,1488,51>",(builder.addFunction)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1469,1476,51>",(builder)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (kSig_v_v) != "undefined") {_RecordType("<1509,1517,51>",(kSig_v_v)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (kExprUnreachable) != "undefined") {_RecordType("<1531,1547,52>",(kExprUnreachable)); Inst93++; } } catch(e) {}
builder.addFunction("exec_unreachable", kSig_v_v)
  .addBody([kExprUnreachable])
  .exportAs("exec_unreachable");

// Make this function unnamed, just to test also this case.
try { if (Inst95 <= 1000 && typeof (builder.addFunction(undefined, kSig_v_v)
  // Access the memory at offset -1, to provoke a trap.
  .addBody([kExprI32Const, 0x7f, kExprI32LoadMem8S, 0, 0])
  .exportAs) != "undefined") {_RecordType("<1663,1830,56>",(builder.addFunction(undefined, kSig_v_v)
  // Access the memory at offset -1, to provoke a trap.
  .addBody([kExprI32Const, 0x7f, kExprI32LoadMem8S, 0, 0])
  .exportAs)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (builder.addFunction(undefined, kSig_v_v)
  // Access the memory at offset -1, to provoke a trap.
  .addBody) != "undefined") {_RecordType("<1663,1770,56>",(builder.addFunction(undefined, kSig_v_v)
  // Access the memory at offset -1, to provoke a trap.
  .addBody)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<1663,1682,56>",(builder.addFunction)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1663,1670,56>",(builder)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1683,1692,56>",(undefined)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (kSig_v_v) != "undefined") {_RecordType("<1694,1702,56>",(kSig_v_v)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<1772,1785,58>",(kExprI32Const)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (kExprI32LoadMem8S) != "undefined") {_RecordType("<1793,1810,58>",(kExprI32LoadMem8S)); Inst102++; } } catch(e) {}
var mem_oob_func = builder.addFunction(undefined, kSig_v_v)
  // Access the memory at offset -1, to provoke a trap.
  .addBody([kExprI32Const, 0x7f, kExprI32LoadMem8S, 0, 0])
  .exportAs("mem_out_of_bounds");
try { if (Inst94 <= 1000 && typeof (mem_oob_func) != "undefined") {_RecordType("<1648,1660,56>",(mem_oob_func)); Inst94++; } } catch(e) {}

// Call the mem_out_of_bounds function, in order to have two WASM stack frames.
try { if (Inst103 <= 1000 && typeof (builder.addFunction("call_mem_out_of_bounds", kSig_v_v)
  .addBody([kExprCallFunction, kArity0, mem_oob_func.index])
  .exportAs) != "undefined") {_RecordType("<1934,2062,62>",(builder.addFunction("call_mem_out_of_bounds", kSig_v_v)
  .addBody([kExprCallFunction, kArity0, mem_oob_func.index])
  .exportAs)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (builder.addFunction("call_mem_out_of_bounds", kSig_v_v)
  .addBody) != "undefined") {_RecordType("<1934,2000,62>",(builder.addFunction("call_mem_out_of_bounds", kSig_v_v)
  .addBody)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<1934,1953,62>",(builder.addFunction)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1934,1941,62>",(builder)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (kSig_v_v) != "undefined") {_RecordType("<1980,1988,62>",(kSig_v_v)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (kExprCallFunction) != "undefined") {_RecordType("<2002,2019,63>",(kExprCallFunction)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (kArity0) != "undefined") {_RecordType("<2021,2028,63>",(kArity0)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (mem_oob_func.index) != "undefined") {_RecordType("<2030,2048,63>",(mem_oob_func.index)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (mem_oob_func) != "undefined") {_RecordType("<2030,2042,63>",(mem_oob_func)); Inst111++; } } catch(e) {}
builder.addFunction("call_mem_out_of_bounds", kSig_v_v)
  .addBody([kExprCallFunction, kArity0, mem_oob_func.index])
  .exportAs("call_mem_out_of_bounds");

try { if (Inst113 <= 1000 && typeof (builder.instantiate) != "undefined") {_RecordType("<2104,2123,66>",(builder.instantiate)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (builder) != "undefined") {_RecordType("<2104,2111,66>",(builder)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (STACK) != "undefined") {_RecordType("<2131,2136,66>",(STACK)); Inst115++; } } catch(e) {}
var module = builder.instantiate({func: STACK});
try { if (Inst112 <= 1000 && typeof (module) != "undefined") {_RecordType("<2095,2101,66>",(module)); Inst112++; } } catch(e) {}

try { if (Inst116 <= 1000 && typeof (testSimpleStack) != "undefined") {_RecordType("<2151,2166,68>",(testSimpleStack)); Inst116++; } } catch(e) {}
(function testSimpleStack() {
  var expected_string = "Error\n" +
    // The line numbers below will change as this test gains / loses lines..
    "    at STACK (stack.js:39:11)\n" +           // --
    "    at main (<WASM>[0]+1)\n" +               // --
    "    at testSimpleStack (stack.js:76:18)\n" + // --
    "    at stack.js:78:3";                       // --
try { if (Inst117 <= 1000 && typeof (expected_string) != "undefined") {_RecordType("<2177,2192,69>",(expected_string)); Inst117++; } } catch(e) {}

try { if (Inst118 <= 1000 && typeof (module.exports.main) != "undefined") {_RecordType("<2511,2530,76>",(module.exports.main)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (module.exports) != "undefined") {_RecordType("<2511,2525,76>",(module.exports)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (module) != "undefined") {_RecordType("<2511,2517,76>",(module)); Inst120++; } } catch(e) {}
  module.exports.main();
try { if (Inst121 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2536,2548,77>",(assertEquals)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (expected_string) != "undefined") {_RecordType("<2549,2564,77>",(expected_string)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (stripPath) != "undefined") {_RecordType("<2566,2575,77>",(stripPath)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2576,2581,77>",(stack)); Inst124++; } } catch(e) {}
  assertEquals(expected_string, stripPath(stack));
})();

// For the remaining tests, collect the Callsite objects instead of just a
// string:
Error.prepareStackTrace = function(error, frames) {
try { if (Inst127 <= 1000 && typeof (error) != "undefined") {_RecordType("<2713,2718,82>",(error)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (frames) != "undefined") {_RecordType("<2720,2726,82>",(frames)); Inst128++; } } catch(e) {}
try { if (Inst129 <= 1000 && typeof (frames) != "undefined") {_RecordType("<2739,2745,83>",(frames)); Inst129++; } } catch(e) {}
  return frames;
};
try { if (Inst125 <= 1000 && typeof (Error.prepareStackTrace) != "undefined") {_RecordType("<2678,2701,82>",(Error.prepareStackTrace)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (Error) != "undefined") {_RecordType("<2678,2683,82>",(Error)); Inst126++; } } catch(e) {}

try { if (Inst130 <= 1000 && typeof (testStackFrames) != "undefined") {_RecordType("<2761,2776,86>",(testStackFrames)); Inst130++; } } catch(e) {}
(function testStackFrames() {
try { if (Inst131 <= 1000 && typeof (module.exports.main) != "undefined") {_RecordType("<2783,2802,87>",(module.exports.main)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (module.exports) != "undefined") {_RecordType("<2783,2797,87>",(module.exports)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (module) != "undefined") {_RecordType("<2783,2789,87>",(module)); Inst133++; } } catch(e) {}
  module.exports.main();

try { if (Inst134 <= 1000 && typeof (verifyStack) != "undefined") {_RecordType("<2809,2820,89>",(verifyStack)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (stack) != "undefined") {_RecordType("<2821,2826,89>",(stack)); Inst135++; } } catch(e) {}
  verifyStack(stack, [
      // isWasm           function   line  pos        file
      [   false,           "STACK",    39,   0, "stack.js"],
      [    true,            "main",     0,   1,       null],
      [   false, "testStackFrames",    87,   0, "stack.js"],
      [   false,              null,    96,   0, "stack.js"]
  ]);
})();

try { if (Inst136 <= 1000 && typeof (testWasmUnreachable) != "undefined") {_RecordType("<3155,3174,98>",(testWasmUnreachable)); Inst136++; } } catch(e) {}
(function testWasmUnreachable() {
try { if (Inst141 <= 1000 && typeof (e) != "undefined") {_RecordType("<3274,3275,102>",(e)); Inst141++; } } catch(e) {}
  try {
try { if (Inst137 <= 1000 && typeof (module.exports.exec_unreachable) != "undefined") {_RecordType("<3191,3222,100>",(module.exports.exec_unreachable)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (module.exports) != "undefined") {_RecordType("<3191,3205,100>",(module.exports)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (module) != "undefined") {_RecordType("<3191,3197,100>",(module)); Inst139++; } } catch(e) {}
    module.exports.exec_unreachable();
try { if (Inst140 <= 1000 && typeof (fail) != "undefined") {_RecordType("<3230,3234,101>",(fail)); Inst140++; } } catch(e) {}
    fail("expected wasm exception");
  } catch (e) {
try { if (Inst142 <= 1000 && typeof (assertContains) != "undefined") {_RecordType("<3283,3297,103>",(assertContains)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<3313,3322,103>",(e.message)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (e) != "undefined") {_RecordType("<3313,3314,103>",(e)); Inst144++; } } catch(e) {}
    assertContains("unreachable", e.message);
try { if (Inst145 <= 1000 && typeof (verifyStack) != "undefined") {_RecordType("<3329,3340,104>",(verifyStack)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3341,3348,104>",(e.stack)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (e) != "undefined") {_RecordType("<3341,3342,104>",(e)); Inst147++; } } catch(e) {}
    verifyStack(e.stack, [
        // isWasm               function   line  pos        file
        [    true,    "exec_unreachable",    1,    1,       null],
        [   false, "testWasmUnreachable",  100,    0, "stack.js"],
        [   false,                  null,  111,    0, "stack.js"]
    ]);
  }
})();

try { if (Inst148 <= 1000 && typeof (testWasmMemOutOfBounds) != "undefined") {_RecordType("<3646,3668,113>",(testWasmMemOutOfBounds)); Inst148++; } } catch(e) {}
(function testWasmMemOutOfBounds() {
try { if (Inst153 <= 1000 && typeof (e) != "undefined") {_RecordType("<3774,3775,117>",(e)); Inst153++; } } catch(e) {}
  try {
try { if (Inst149 <= 1000 && typeof (module.exports.call_mem_out_of_bounds) != "undefined") {_RecordType("<3685,3722,115>",(module.exports.call_mem_out_of_bounds)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (module.exports) != "undefined") {_RecordType("<3685,3699,115>",(module.exports)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (module) != "undefined") {_RecordType("<3685,3691,115>",(module)); Inst151++; } } catch(e) {}
    module.exports.call_mem_out_of_bounds();
try { if (Inst152 <= 1000 && typeof (fail) != "undefined") {_RecordType("<3730,3734,116>",(fail)); Inst152++; } } catch(e) {}
    fail("expected wasm exception");
  } catch (e) {
try { if (Inst154 <= 1000 && typeof (assertContains) != "undefined") {_RecordType("<3783,3797,118>",(assertContains)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<3815,3824,118>",(e.message)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (e) != "undefined") {_RecordType("<3815,3816,118>",(e)); Inst156++; } } catch(e) {}
    assertContains("out of bounds", e.message);
try { if (Inst157 <= 1000 && typeof (verifyStack) != "undefined") {_RecordType("<3831,3842,119>",(verifyStack)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<3843,3850,119>",(e.stack)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (e) != "undefined") {_RecordType("<3843,3844,119>",(e)); Inst159++; } } catch(e) {}
    verifyStack(e.stack, [
        // isWasm                  function   line  pos        file
        [    true,                       "",     2,   3,       null],
        [    true, "call_mem_out_of_bounds",     3,   1,       null],
        [   false, "testWasmMemOutOfBounds",   115,   0, "stack.js"],
        [   false,                     null,   127,   0, "stack.js"]
    ]);
  }
})();

