var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-wasm --expose-gc --allow-natives-syntax

try { if (Inst0 <= 1000 && typeof (load) != "undefined") {_RecordType("<228,232,7>",(load)); Inst0++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-constants.js");
try { if (Inst1 <= 1000 && typeof (load) != "undefined") {_RecordType("<273,277,8>",(load)); Inst1++; } } catch(e) {}
load("test/mjsunit/wasm/wasm-module-builder.js");

try { if (Inst2 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<333,344,10>",(assertTraps)); Inst2++; } } catch(e) {}
function assertTraps(code, msg) {
try { if (Inst3 <= 1000 && typeof (code) != "undefined") {_RecordType("<345,349,10>",(code)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (msg) != "undefined") {_RecordType("<351,354,10>",(msg)); Inst4++; } } catch(e) {}
  var threwException = true;
try { if (Inst5 <= 1000 && typeof (threwException) != "undefined") {_RecordType("<364,378,11>",(threwException)); Inst5++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<523,524,19>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst6 <= 1000 && typeof (code) != "undefined") {_RecordType("<410,414,13>",(code)); Inst6++; } } catch(e) {}
    if (typeof code === 'function') {
try { if (Inst7 <= 1000 && typeof (code) != "undefined") {_RecordType("<439,443,14>",(code)); Inst7++; } } catch(e) {}
      code();
    } else {
try { if (Inst8 <= 1000 && typeof (eval) != "undefined") {_RecordType("<466,470,16>",(eval)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (code) != "undefined") {_RecordType("<471,475,16>",(code)); Inst9++; } } catch(e) {}
      eval(code);
    }
    threwException = false;
try { if (Inst10 <= 1000 && typeof (threwException) != "undefined") {_RecordType("<488,502,18>",(threwException)); Inst10++; } } catch(e) {}
  } catch (e) {
try { if (Inst12 <= 1000 && typeof (type_opt) != "undefined") {_RecordType("<543,551,20>",(type_opt)); Inst12++; } } catch(e) {}
    if (typeof type_opt === 'function') {
try { if (Inst13 <= 1000 && typeof (assertInstanceof) != "undefined") {_RecordType("<576,592,21>",(assertInstanceof)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (e) != "undefined") {_RecordType("<593,594,21>",(e)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (type_opt) != "undefined") {_RecordType("<596,604,21>",(type_opt)); Inst15++; } } catch(e) {}
      assertInstanceof(e, type_opt);
    }
try { if (Inst16 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<621,637,23>",(arguments.length)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<621,630,23>",(arguments)); Inst17++; } } catch(e) {}
    if (arguments.length >= 3) {
try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<652,664,24>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (e.type) != "undefined") {_RecordType("<665,671,24>",(e.type)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (e) != "undefined") {_RecordType("<665,666,24>",(e)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (cause_opt) != "undefined") {_RecordType("<673,682,24>",(cause_opt)); Inst21++; } } catch(e) {}
      assertEquals(e.type, cause_opt);
    }
    // Success.
    return;
  }
try { if (Inst22 <= 1000 && typeof (MjsUnitAssertionError) != "undefined") {_RecordType("<735,756,29>",(MjsUnitAssertionError)); Inst22++; } } catch(e) {}
  throw new MjsUnitAssertionError("Did not throw exception");
}


try { if (Inst23 <= 1000 && typeof (makeBinop) != "undefined") {_RecordType("<798,807,33>",(makeBinop)); Inst23++; } } catch(e) {}
function makeBinop(opcode) {
try { if (Inst24 <= 1000 && typeof (opcode) != "undefined") {_RecordType("<808,814,33>",(opcode)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<838,855,34>",(WasmModuleBuilder)); Inst26++; } } catch(e) {}
  var builder = new WasmModuleBuilder();
try { if (Inst25 <= 1000 && typeof (builder) != "undefined") {_RecordType("<824,831,34>",(builder)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (builder.addFunction("main", kSig_i_ii)
    .addBody([
      kExprGetLocal, 0,           // --
      kExprGetLocal, 1,           // --
      opcode,                     // --
    ])
    .exportFunc) != "undefined") {_RecordType("<862,1058,36>",(builder.addFunction("main", kSig_i_ii)
    .addBody([
      kExprGetLocal, 0,           // --
      kExprGetLocal, 1,           // --
      opcode,                     // --
    ])
    .exportFunc)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (builder.addFunction("main", kSig_i_ii)
    .addBody) != "undefined") {_RecordType("<862,913,36>",(builder.addFunction("main", kSig_i_ii)
    .addBody)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<862,881,36>",(builder.addFunction)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (builder) != "undefined") {_RecordType("<862,869,36>",(builder)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (kSig_i_ii) != "undefined") {_RecordType("<890,899,36>",(kSig_i_ii)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<922,935,38>",(kExprGetLocal)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (kExprGetLocal) != "undefined") {_RecordType("<962,975,39>",(kExprGetLocal)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (opcode) != "undefined") {_RecordType("<1002,1008,40>",(opcode)); Inst34++; } } catch(e) {}
  builder.addFunction("main", kSig_i_ii)
    .addBody([
      kExprGetLocal, 0,           // --
      kExprGetLocal, 1,           // --
      opcode,                     // --
    ])
    .exportFunc();

try { if (Inst35 <= 1000 && typeof (builder.instantiate().exports.main) != "undefined") {_RecordType("<1072,1106,44>",(builder.instantiate().exports.main)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (builder.instantiate().exports) != "undefined") {_RecordType("<1072,1101,44>",(builder.instantiate().exports)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (builder.instantiate) != "undefined") {_RecordType("<1072,1091,44>",(builder.instantiate)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1072,1079,44>",(builder)); Inst38++; } } catch(e) {}
  return builder.instantiate().exports.main;
}

try { if (Inst40 <= 1000 && typeof (makeBinop) != "undefined") {_RecordType("<1122,1131,47>",(makeBinop)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (kExprI32DivS) != "undefined") {_RecordType("<1132,1144,47>",(kExprI32DivS)); Inst41++; } } catch(e) {}
var divs = makeBinop(kExprI32DivS);
try { if (Inst39 <= 1000 && typeof (divs) != "undefined") {_RecordType("<1115,1119,47>",(divs)); Inst39++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (makeBinop) != "undefined") {_RecordType("<1158,1167,48>",(makeBinop)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (kExprI32DivU) != "undefined") {_RecordType("<1168,1180,48>",(kExprI32DivU)); Inst44++; } } catch(e) {}
var divu = makeBinop(kExprI32DivU);
try { if (Inst42 <= 1000 && typeof (divu) != "undefined") {_RecordType("<1151,1155,48>",(divu)); Inst42++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1184,1196,50>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (divs) != "undefined") {_RecordType("<1202,1206,50>",(divs)); Inst46++; } } catch(e) {}
assertEquals( 33, divs( 333, 10));
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1219,1231,51>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (divs) != "undefined") {_RecordType("<1237,1241,51>",(divs)); Inst48++; } } catch(e) {}
assertEquals(-33, divs(-336, 10));

try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1255,1267,53>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (divu) != "undefined") {_RecordType("<1279,1283,53>",(divu)); Inst50++; } } catch(e) {}
assertEquals(       44, divu( 445, 10));
try { if (Inst51 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1296,1308,54>",(assertEquals)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (divu) != "undefined") {_RecordType("<1320,1324,54>",(divu)); Inst52++; } } catch(e) {}
assertEquals(429496685, divu(-446, 10));

try { if (Inst53 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1338,1349,56>",(assertTraps)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (kTrapDivByZero) != "undefined") {_RecordType("<1350,1364,56>",(kTrapDivByZero)); Inst54++; } } catch(e) {}
assertTraps(kTrapDivByZero, "divs(100, 0);");
try { if (Inst55 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1384,1395,57>",(assertTraps)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (kTrapDivByZero) != "undefined") {_RecordType("<1396,1410,57>",(kTrapDivByZero)); Inst56++; } } catch(e) {}
assertTraps(kTrapDivByZero, "divs(-1009, 0);");

try { if (Inst57 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1433,1444,59>",(assertTraps)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (kTrapDivByZero) != "undefined") {_RecordType("<1445,1459,59>",(kTrapDivByZero)); Inst58++; } } catch(e) {}
assertTraps(kTrapDivByZero, "divu(200, 0);");
try { if (Inst59 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1479,1490,60>",(assertTraps)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (kTrapDivByZero) != "undefined") {_RecordType("<1491,1505,60>",(kTrapDivByZero)); Inst60++; } } catch(e) {}
assertTraps(kTrapDivByZero, "divu(-2009, 0);");

try { if (Inst61 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1528,1539,62>",(assertTraps)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (kTrapDivUnrepresentable) != "undefined") {_RecordType("<1540,1563,62>",(kTrapDivUnrepresentable)); Inst62++; } } catch(e) {}
assertTraps(kTrapDivUnrepresentable, "divs(0x80000000, -1)");
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1590,1602,63>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (divu) != "undefined") {_RecordType("<1606,1610,63>",(divu)); Inst64++; } } catch(e) {}
assertEquals(0, divu(0x80000000, -1));


try { if (Inst66 <= 1000 && typeof (makeBinop) != "undefined") {_RecordType("<1642,1651,66>",(makeBinop)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (kExprI32RemS) != "undefined") {_RecordType("<1652,1664,66>",(kExprI32RemS)); Inst67++; } } catch(e) {}
var rems = makeBinop(kExprI32RemS);
try { if (Inst65 <= 1000 && typeof (rems) != "undefined") {_RecordType("<1635,1639,66>",(rems)); Inst65++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (makeBinop) != "undefined") {_RecordType("<1678,1687,67>",(makeBinop)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (kExprI32RemU) != "undefined") {_RecordType("<1688,1700,67>",(kExprI32RemU)); Inst70++; } } catch(e) {}
var remu = makeBinop(kExprI32RemU);
try { if (Inst68 <= 1000 && typeof (remu) != "undefined") {_RecordType("<1671,1675,67>",(remu)); Inst68++; } } catch(e) {}

try { if (Inst71 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1704,1716,69>",(assertEquals)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (rems) != "undefined") {_RecordType("<1721,1725,69>",(rems)); Inst72++; } } catch(e) {}
assertEquals( 3, rems( 333, 10));
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1738,1750,70>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (rems) != "undefined") {_RecordType("<1755,1759,70>",(rems)); Inst74++; } } catch(e) {}
assertEquals(-6, rems(-336, 10));

try { if (Inst75 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1773,1785,72>",(assertEquals)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (remu) != "undefined") {_RecordType("<1790,1794,72>",(remu)); Inst76++; } } catch(e) {}
assertEquals( 5, remu( 445, 10));
try { if (Inst77 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1807,1819,73>",(assertEquals)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (remu) != "undefined") {_RecordType("<1824,1828,73>",(remu)); Inst78++; } } catch(e) {}
assertEquals( 3, remu(-443, 10));

try { if (Inst79 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1842,1853,75>",(assertTraps)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (kTrapRemByZero) != "undefined") {_RecordType("<1854,1868,75>",(kTrapRemByZero)); Inst80++; } } catch(e) {}
assertTraps(kTrapRemByZero, "rems(100, 0);");
try { if (Inst81 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1888,1899,76>",(assertTraps)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (kTrapRemByZero) != "undefined") {_RecordType("<1900,1914,76>",(kTrapRemByZero)); Inst82++; } } catch(e) {}
assertTraps(kTrapRemByZero, "rems(-1009, 0);");

try { if (Inst83 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1937,1948,78>",(assertTraps)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (kTrapRemByZero) != "undefined") {_RecordType("<1949,1963,78>",(kTrapRemByZero)); Inst84++; } } catch(e) {}
assertTraps(kTrapRemByZero, "remu(200, 0);");
try { if (Inst85 <= 1000 && typeof (assertTraps) != "undefined") {_RecordType("<1983,1994,79>",(assertTraps)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (kTrapRemByZero) != "undefined") {_RecordType("<1995,2009,79>",(kTrapRemByZero)); Inst86++; } } catch(e) {}
assertTraps(kTrapRemByZero, "remu(-2009, 0);");

try { if (Inst87 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2032,2044,81>",(assertEquals)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (remu) != "undefined") {_RecordType("<2058,2062,81>",(remu)); Inst88++; } } catch(e) {}
assertEquals(-2147483648, remu(0x80000000, -1));
try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2081,2093,82>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (rems) != "undefined") {_RecordType("<2097,2101,82>",(rems)); Inst90++; } } catch(e) {}
assertEquals(0, rems(0x80000000, -1));

