var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Test that the Number, String and Boolean prototypes are searched
// for indexed properties on value objects.

try { if (Inst0 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<1720,1730,31>",(return_one)); Inst0++; } } catch(e) {}
function return_one() { return 1; };

try { if (Inst1 <= 1000 && typeof (test) != "undefined") {_RecordType("<1758,1762,33>",(test)); Inst1++; } } catch(e) {}
function test(value) {
try { if (Inst2 <= 1000 && typeof (value) != "undefined") {_RecordType("<1763,1768,33>",(value)); Inst2++; } } catch(e) {}
  for (var i = 0; i < 10; i++) {
try { if (Inst3 <= 1000 && typeof (i) != "undefined") {_RecordType("<1783,1784,34>",(i)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (i) != "undefined") {_RecordType("<1790,1791,34>",(i)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<1798,1799,34>",(i)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1809,1821,35>",(assertEquals)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof ((value)[0]) != "undefined") {_RecordType("<1825,1835,35>",((value)[0])); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (value) != "undefined") {_RecordType("<1826,1831,35>",(value)); Inst8++; } } catch(e) {}
    assertEquals(0, (value)[0]);
try { if (Inst9 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1842,1854,36>",(assertEquals)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof ((value)["0"]) != "undefined") {_RecordType("<1858,1870,36>",((value)["0"])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (value) != "undefined") {_RecordType("<1859,1864,36>",(value)); Inst11++; } } catch(e) {}
    assertEquals(0, (value)["0"]);
try { if (Inst12 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1877,1889,37>",(assertEquals)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<1890,1900,37>",(return_one)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof ((value)[1]) != "undefined") {_RecordType("<1902,1912,37>",((value)[1])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (value) != "undefined") {_RecordType("<1903,1908,37>",(value)); Inst15++; } } catch(e) {}
    assertEquals(return_one, (value)[1]);
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1919,1931,38>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<1932,1942,38>",(return_one)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof ((value)["1"]) != "undefined") {_RecordType("<1944,1956,38>",((value)["1"])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (value) != "undefined") {_RecordType("<1945,1950,38>",(value)); Inst19++; } } catch(e) {}
    assertEquals(return_one, (value)["1"]);
try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1963,1975,39>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof ((value)[1]) != "undefined") {_RecordType("<1979,1989,39>",((value)[1])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (value) != "undefined") {_RecordType("<1980,1985,39>",(value)); Inst22++; } } catch(e) {}
    assertEquals(1, (value)[1]());
try { if (Inst23 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1998,2010,40>",(assertEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof ((value)["1"]) != "undefined") {_RecordType("<2014,2026,40>",((value)["1"])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (value) != "undefined") {_RecordType("<2015,2020,40>",(value)); Inst25++; } } catch(e) {}
    assertEquals(1, (value)["1"]());
  }
}

Number.prototype[0] = 0;
try { if (Inst26 <= 1000 && typeof (Number.prototype[0]) != "undefined") {_RecordType("<2038,2057,44>",(Number.prototype[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<2038,2054,44>",(Number.prototype)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2038,2044,44>",(Number)); Inst28++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<2085,2095,45>",(return_one)); Inst32++; } } catch(e) {}
Number.prototype[1] = return_one;
try { if (Inst29 <= 1000 && typeof (Number.prototype[1]) != "undefined") {_RecordType("<2063,2082,45>",(Number.prototype[1])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<2063,2079,45>",(Number.prototype)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2063,2069,45>",(Number)); Inst31++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (test) != "undefined") {_RecordType("<2097,2101,46>",(test)); Inst33++; } } catch(e) {}
test(0);
try { if (Inst34 <= 1000 && typeof (test) != "undefined") {_RecordType("<2106,2110,47>",(test)); Inst34++; } } catch(e) {}
test(0.1);

String.prototype[0] = 0;
try { if (Inst35 <= 1000 && typeof (String.prototype[0]) != "undefined") {_RecordType("<2118,2137,49>",(String.prototype[0])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2118,2134,49>",(String.prototype)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (String) != "undefined") {_RecordType("<2118,2124,49>",(String)); Inst37++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<2165,2175,50>",(return_one)); Inst41++; } } catch(e) {}
String.prototype[1] = return_one;
try { if (Inst38 <= 1000 && typeof (String.prototype[1]) != "undefined") {_RecordType("<2143,2162,50>",(String.prototype[1])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2143,2159,50>",(String.prototype)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (String) != "undefined") {_RecordType("<2143,2149,50>",(String)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (test) != "undefined") {_RecordType("<2177,2181,51>",(test)); Inst42++; } } catch(e) {}
test("");

Boolean.prototype[0] = 0;
try { if (Inst43 <= 1000 && typeof (Boolean.prototype[0]) != "undefined") {_RecordType("<2188,2208,53>",(Boolean.prototype[0])); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<2188,2205,53>",(Boolean.prototype)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2188,2195,53>",(Boolean)); Inst45++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (return_one) != "undefined") {_RecordType("<2237,2247,54>",(return_one)); Inst49++; } } catch(e) {}
Boolean.prototype[1] = return_one;
try { if (Inst46 <= 1000 && typeof (Boolean.prototype[1]) != "undefined") {_RecordType("<2214,2234,54>",(Boolean.prototype[1])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Boolean.prototype) != "undefined") {_RecordType("<2214,2231,54>",(Boolean.prototype)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Boolean) != "undefined") {_RecordType("<2214,2221,54>",(Boolean)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (test) != "undefined") {_RecordType("<2249,2253,55>",(test)); Inst50++; } } catch(e) {}
test(true);
try { if (Inst51 <= 1000 && typeof (test) != "undefined") {_RecordType("<2261,2265,56>",(test)); Inst51++; } } catch(e) {}
test(false);

