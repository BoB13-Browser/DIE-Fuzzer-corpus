var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

try { if (Inst0 <= 1000 && typeof (oneMatch) != "undefined") {_RecordType("<1607,1615,28>",(oneMatch)); Inst0++; } } catch(e) {}
function oneMatch(re) {
try { if (Inst1 <= 1000 && typeof (re) != "undefined") {_RecordType("<1616,1618,28>",(re)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof ("abcd".replace) != "undefined") {_RecordType("<1624,1638,29>",("abcd".replace)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (re) != "undefined") {_RecordType("<1639,1641,29>",(re)); Inst3++; } } catch(e) {}
  "abcd".replace(re, function() { });
try { if (Inst4 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1662,1674,30>",(assertEquals)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<1683,1695,30>",(RegExp.input)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1683,1689,30>",(RegExp)); Inst6++; } } catch(e) {}
  assertEquals("abcd", RegExp.input);
try { if (Inst7 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1700,1712,31>",(assertEquals)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (RegExp.leftContext) != "undefined") {_RecordType("<1718,1736,31>",(RegExp.leftContext)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1718,1724,31>",(RegExp)); Inst9++; } } catch(e) {}
  assertEquals("a", RegExp.leftContext);
try { if (Inst10 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1741,1753,32>",(assertEquals)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<1759,1775,32>",(RegExp.lastMatch)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1759,1765,32>",(RegExp)); Inst12++; } } catch(e) {}
  assertEquals("b", RegExp.lastMatch);
try { if (Inst13 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1780,1792,33>",(assertEquals)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (RegExp.lastParen) != "undefined") {_RecordType("<1797,1813,33>",(RegExp.lastParen)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1797,1803,33>",(RegExp)); Inst15++; } } catch(e) {}
  assertEquals("", RegExp.lastParen);
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1818,1830,34>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1831,1840,34>",(undefined)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (RegExp.lastIndex) != "undefined") {_RecordType("<1842,1858,34>",(RegExp.lastIndex)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1842,1848,34>",(RegExp)); Inst19++; } } catch(e) {}
  assertEquals(undefined, RegExp.lastIndex);
try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1863,1875,35>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1876,1885,35>",(undefined)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (RegExp.index) != "undefined") {_RecordType("<1887,1899,35>",(RegExp.index)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1887,1893,35>",(RegExp)); Inst23++; } } catch(e) {}
  assertEquals(undefined, RegExp.index);
try { if (Inst24 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1904,1916,36>",(assertEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (RegExp.rightContext) != "undefined") {_RecordType("<1923,1942,36>",(RegExp.rightContext)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1923,1929,36>",(RegExp)); Inst26++; } } catch(e) {}
  assertEquals("cd", RegExp.rightContext);
  for (var i = 1; i < 10; i++) {
try { if (Inst27 <= 1000 && typeof (i) != "undefined") {_RecordType("<1956,1957,37>",(i)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (i) != "undefined") {_RecordType("<1963,1964,37>",(i)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<1971,1972,37>",(i)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1982,1994,38>",(assertEquals)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (RegExp['$' + i]) != "undefined") {_RecordType("<1999,2014,38>",(RegExp['$' + i])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1999,2005,38>",(RegExp)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2012,2013,38>",(i)); Inst33++; } } catch(e) {}
    assertEquals("", RegExp['$' + i]);
  }
}

try { if (Inst34 <= 1000 && typeof (oneMatch) != "undefined") {_RecordType("<2024,2032,42>",(oneMatch)); Inst34++; } } catch(e) {}
oneMatch(/b/);
try { if (Inst35 <= 1000 && typeof (oneMatch) != "undefined") {_RecordType("<2039,2047,43>",(oneMatch)); Inst35++; } } catch(e) {}
oneMatch(/b/g);

try { if (Inst36 <= 1000 && typeof ("abcdabcd".replace) != "undefined") {_RecordType("<2056,2074,45>",("abcdabcd".replace)); Inst36++; } } catch(e) {}
"abcdabcd".replace(/b/g, function() { });
try { if (Inst37 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2098,2110,46>",(assertEquals)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<2123,2135,46>",(RegExp.input)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2123,2129,46>",(RegExp)); Inst39++; } } catch(e) {}
assertEquals("abcdabcd", RegExp.input);
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2138,2150,47>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (RegExp.leftContext) != "undefined") {_RecordType("<2160,2178,47>",(RegExp.leftContext)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2160,2166,47>",(RegExp)); Inst42++; } } catch(e) {}
assertEquals("abcda", RegExp.leftContext);
try { if (Inst43 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2181,2193,48>",(assertEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<2199,2215,48>",(RegExp.lastMatch)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2199,2205,48>",(RegExp)); Inst45++; } } catch(e) {}
assertEquals("b", RegExp.lastMatch);
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2218,2230,49>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (RegExp.lastParen) != "undefined") {_RecordType("<2235,2251,49>",(RegExp.lastParen)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2235,2241,49>",(RegExp)); Inst48++; } } catch(e) {}
assertEquals("", RegExp.lastParen);
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2254,2266,50>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2267,2276,50>",(undefined)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (RegExp.lastIndex) != "undefined") {_RecordType("<2278,2294,50>",(RegExp.lastIndex)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2278,2284,50>",(RegExp)); Inst52++; } } catch(e) {}
assertEquals(undefined, RegExp.lastIndex);
try { if (Inst53 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2297,2309,51>",(assertEquals)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2310,2319,51>",(undefined)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (RegExp.index) != "undefined") {_RecordType("<2321,2333,51>",(RegExp.index)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2321,2327,51>",(RegExp)); Inst56++; } } catch(e) {}
assertEquals(undefined, RegExp.index);
try { if (Inst57 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2336,2348,52>",(assertEquals)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (RegExp.rightContext) != "undefined") {_RecordType("<2355,2374,52>",(RegExp.rightContext)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2355,2361,52>",(RegExp)); Inst59++; } } catch(e) {}
assertEquals("cd", RegExp.rightContext);
for (var i = 1; i < 10; i++) {
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<2386,2387,53>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<2393,2394,53>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<2401,2402,53>",(i)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2410,2422,54>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (RegExp['$' + i]) != "undefined") {_RecordType("<2427,2442,54>",(RegExp['$' + i])); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2427,2433,54>",(RegExp)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<2440,2441,54>",(i)); Inst66++; } } catch(e) {}
  assertEquals("", RegExp['$' + i]);
}

try { if (Inst67 <= 1000 && typeof (captureMatch) != "undefined") {_RecordType("<2457,2469,57>",(captureMatch)); Inst67++; } } catch(e) {}
function captureMatch(re) {
try { if (Inst68 <= 1000 && typeof (re) != "undefined") {_RecordType("<2470,2472,57>",(re)); Inst68++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof ("abcd".replace) != "undefined") {_RecordType("<2478,2492,58>",("abcd".replace)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (re) != "undefined") {_RecordType("<2493,2495,58>",(re)); Inst70++; } } catch(e) {}
  "abcd".replace(re, function() { });
try { if (Inst71 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2516,2528,59>",(assertEquals)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<2537,2549,59>",(RegExp.input)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2537,2543,59>",(RegExp)); Inst73++; } } catch(e) {}
  assertEquals("abcd", RegExp.input);
try { if (Inst74 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2554,2566,60>",(assertEquals)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (RegExp.leftContext) != "undefined") {_RecordType("<2572,2590,60>",(RegExp.leftContext)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2572,2578,60>",(RegExp)); Inst76++; } } catch(e) {}
  assertEquals("a", RegExp.leftContext);
try { if (Inst77 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2595,2607,61>",(assertEquals)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<2614,2630,61>",(RegExp.lastMatch)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2614,2620,61>",(RegExp)); Inst79++; } } catch(e) {}
  assertEquals("bc", RegExp.lastMatch);
try { if (Inst80 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2635,2647,62>",(assertEquals)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (RegExp.lastParen) != "undefined") {_RecordType("<2653,2669,62>",(RegExp.lastParen)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2653,2659,62>",(RegExp)); Inst82++; } } catch(e) {}
  assertEquals("c", RegExp.lastParen);
try { if (Inst83 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2674,2686,63>",(assertEquals)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2687,2696,63>",(undefined)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (RegExp.lastIndex) != "undefined") {_RecordType("<2698,2714,63>",(RegExp.lastIndex)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2698,2704,63>",(RegExp)); Inst86++; } } catch(e) {}
  assertEquals(undefined, RegExp.lastIndex);
try { if (Inst87 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2719,2731,64>",(assertEquals)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2732,2741,64>",(undefined)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (RegExp.index) != "undefined") {_RecordType("<2743,2755,64>",(RegExp.index)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2743,2749,64>",(RegExp)); Inst90++; } } catch(e) {}
  assertEquals(undefined, RegExp.index);
try { if (Inst91 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2760,2772,65>",(assertEquals)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (RegExp.rightContext) != "undefined") {_RecordType("<2778,2797,65>",(RegExp.rightContext)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2778,2784,65>",(RegExp)); Inst93++; } } catch(e) {}
  assertEquals("d", RegExp.rightContext);
try { if (Inst94 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2802,2814,66>",(assertEquals)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<2820,2829,66>",(RegExp.$1)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2820,2826,66>",(RegExp)); Inst96++; } } catch(e) {}
  assertEquals('b', RegExp.$1);
try { if (Inst97 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2834,2846,67>",(assertEquals)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (RegExp.$2) != "undefined") {_RecordType("<2852,2861,67>",(RegExp.$2)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2852,2858,67>",(RegExp)); Inst99++; } } catch(e) {}
  assertEquals('c', RegExp.$2);
  for (var i = 3; i < 10; i++) {
try { if (Inst100 <= 1000 && typeof (i) != "undefined") {_RecordType("<2875,2876,68>",(i)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (i) != "undefined") {_RecordType("<2882,2883,68>",(i)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (i) != "undefined") {_RecordType("<2890,2891,68>",(i)); Inst102++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2901,2913,69>",(assertEquals)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (RegExp['$' + i]) != "undefined") {_RecordType("<2918,2933,69>",(RegExp['$' + i])); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2918,2924,69>",(RegExp)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (i) != "undefined") {_RecordType("<2931,2932,69>",(i)); Inst106++; } } catch(e) {}
    assertEquals("", RegExp['$' + i]);
  }
}

try { if (Inst107 <= 1000 && typeof (captureMatch) != "undefined") {_RecordType("<2943,2955,73>",(captureMatch)); Inst107++; } } catch(e) {}
captureMatch(/(b)(c)/);
try { if (Inst108 <= 1000 && typeof (captureMatch) != "undefined") {_RecordType("<2967,2979,74>",(captureMatch)); Inst108++; } } catch(e) {}
captureMatch(/(b)(c)/g);

try { if (Inst109 <= 1000 && typeof ("abcdabcd".replace) != "undefined") {_RecordType("<2993,3011,76>",("abcdabcd".replace)); Inst109++; } } catch(e) {}
"abcdabcd".replace(/(b)(c)/g, function() { });
try { if (Inst110 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3040,3052,77>",(assertEquals)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (RegExp.input) != "undefined") {_RecordType("<3065,3077,77>",(RegExp.input)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3065,3071,77>",(RegExp)); Inst112++; } } catch(e) {}
assertEquals("abcdabcd", RegExp.input);
try { if (Inst113 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3080,3092,78>",(assertEquals)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (RegExp.leftContext) != "undefined") {_RecordType("<3102,3120,78>",(RegExp.leftContext)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3102,3108,78>",(RegExp)); Inst115++; } } catch(e) {}
assertEquals("abcda", RegExp.leftContext);
try { if (Inst116 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3123,3135,79>",(assertEquals)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<3142,3158,79>",(RegExp.lastMatch)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3142,3148,79>",(RegExp)); Inst118++; } } catch(e) {}
assertEquals("bc", RegExp.lastMatch);
try { if (Inst119 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3161,3173,80>",(assertEquals)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (RegExp.lastParen) != "undefined") {_RecordType("<3179,3195,80>",(RegExp.lastParen)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3179,3185,80>",(RegExp)); Inst121++; } } catch(e) {}
assertEquals("c", RegExp.lastParen);
try { if (Inst122 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3198,3210,81>",(assertEquals)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3211,3220,81>",(undefined)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (RegExp.lastIndex) != "undefined") {_RecordType("<3222,3238,81>",(RegExp.lastIndex)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3222,3228,81>",(RegExp)); Inst125++; } } catch(e) {}
assertEquals(undefined, RegExp.lastIndex);
try { if (Inst126 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3241,3253,82>",(assertEquals)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3254,3263,82>",(undefined)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (RegExp.index) != "undefined") {_RecordType("<3265,3277,82>",(RegExp.index)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3265,3271,82>",(RegExp)); Inst129++; } } catch(e) {}
assertEquals(undefined, RegExp.index);
try { if (Inst130 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3280,3292,83>",(assertEquals)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (RegExp.rightContext) != "undefined") {_RecordType("<3298,3317,83>",(RegExp.rightContext)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3298,3304,83>",(RegExp)); Inst132++; } } catch(e) {}
assertEquals("d", RegExp.rightContext);
try { if (Inst133 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3320,3332,84>",(assertEquals)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<3338,3347,84>",(RegExp.$1)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3338,3344,84>",(RegExp)); Inst135++; } } catch(e) {}
assertEquals('b', RegExp.$1);
try { if (Inst136 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3350,3362,85>",(assertEquals)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (RegExp.$2) != "undefined") {_RecordType("<3368,3377,85>",(RegExp.$2)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3368,3374,85>",(RegExp)); Inst138++; } } catch(e) {}
assertEquals('c', RegExp.$2);
for (var i = 3; i < 10; i++) {
try { if (Inst139 <= 1000 && typeof (i) != "undefined") {_RecordType("<3389,3390,86>",(i)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (i) != "undefined") {_RecordType("<3396,3397,86>",(i)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (i) != "undefined") {_RecordType("<3404,3405,86>",(i)); Inst141++; } } catch(e) {}
try { if (Inst142 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3413,3425,87>",(assertEquals)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (RegExp['$' + i]) != "undefined") {_RecordType("<3430,3445,87>",(RegExp['$' + i])); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3430,3436,87>",(RegExp)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (i) != "undefined") {_RecordType("<3443,3444,87>",(i)); Inst145++; } } catch(e) {}
  assertEquals("", RegExp['$' + i]);
}


try { if (Inst146 <= 1000 && typeof (Override) != "undefined") {_RecordType("<3461,3469,91>",(Override)); Inst146++; } } catch(e) {}
function Override() {
  // Set the internal lastMatchInfoOverride.  After calling this we do a normal
  // match and verify the override was cleared and that we record the new
  // captures.
try { if (Inst147 <= 1000 && typeof ("abcdabcd".replace) != "undefined") {_RecordType("<3645,3663,95>",("abcdabcd".replace)); Inst147++; } } catch(e) {}
  "abcdabcd".replace(/(b)(c)/g, function() { });
}


try { if (Inst148 <= 1000 && typeof (TestOverride) != "undefined") {_RecordType("<3705,3717,99>",(TestOverride)); Inst148++; } } catch(e) {}
function TestOverride(input, expect, property, re_src) {
try { if (Inst149 <= 1000 && typeof (input) != "undefined") {_RecordType("<3718,3723,99>",(input)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (expect) != "undefined") {_RecordType("<3725,3731,99>",(expect)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (property) != "undefined") {_RecordType("<3733,3741,99>",(property)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (re_src) != "undefined") {_RecordType("<3743,3749,99>",(re_src)); Inst152++; } } catch(e) {}
try { if (Inst154 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3768,3774,100>",(RegExp)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (re_src) != "undefined") {_RecordType("<3775,3781,100>",(re_src)); Inst155++; } } catch(e) {}
  var re = new RegExp(re_src);
try { if (Inst153 <= 1000 && typeof (re) != "undefined") {_RecordType("<3759,3761,100>",(re)); Inst153++; } } catch(e) {}
try { if (Inst157 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3801,3807,101>",(RegExp)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (re_src) != "undefined") {_RecordType("<3808,3814,101>",(re_src)); Inst158++; } } catch(e) {}
  var re_g = new RegExp(re_src, "g");
try { if (Inst156 <= 1000 && typeof (re_g) != "undefined") {_RecordType("<3790,3794,101>",(re_g)); Inst156++; } } catch(e) {}

try { if (Inst159 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<3834,3846,103>",(OverrideCase)); Inst159++; } } catch(e) {}
  function OverrideCase(fn) {
try { if (Inst160 <= 1000 && typeof (fn) != "undefined") {_RecordType("<3847,3849,103>",(fn)); Inst160++; } } catch(e) {}
try { if (Inst161 <= 1000 && typeof (Override) != "undefined") {_RecordType("<3857,3865,104>",(Override)); Inst161++; } } catch(e) {}
    Override();
try { if (Inst162 <= 1000 && typeof (fn) != "undefined") {_RecordType("<3873,3875,105>",(fn)); Inst162++; } } catch(e) {}
    fn();
try { if (Inst163 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3883,3895,106>",(assertEquals)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (expect) != "undefined") {_RecordType("<3896,3902,106>",(expect)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (RegExp[property]) != "undefined") {_RecordType("<3904,3920,106>",(RegExp[property])); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3904,3910,106>",(RegExp)); Inst166++; } } catch(e) {}
    assertEquals(expect, RegExp[property]);
  }

try { if (Inst167 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<3930,3942,109>",(OverrideCase)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (input.replace) != "undefined") {_RecordType("<3963,3976,109>",(input.replace)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (input) != "undefined") {_RecordType("<3963,3968,109>",(input)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (re) != "undefined") {_RecordType("<3977,3979,109>",(re)); Inst170++; } } catch(e) {}
  OverrideCase(function() { return input.replace(re, "x"); });
try { if (Inst171 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<3993,4005,110>",(OverrideCase)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (input.replace) != "undefined") {_RecordType("<4026,4039,110>",(input.replace)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (input) != "undefined") {_RecordType("<4026,4031,110>",(input)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (re_g) != "undefined") {_RecordType("<4040,4044,110>",(re_g)); Inst174++; } } catch(e) {}
  OverrideCase(function() { return input.replace(re_g, "x"); });
try { if (Inst175 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<4058,4070,111>",(OverrideCase)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (input.replace) != "undefined") {_RecordType("<4091,4104,111>",(input.replace)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (input) != "undefined") {_RecordType("<4091,4096,111>",(input)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (re) != "undefined") {_RecordType("<4105,4107,111>",(re)); Inst178++; } } catch(e) {}
  OverrideCase(function() { return input.replace(re, ""); });
try { if (Inst179 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<4120,4132,112>",(OverrideCase)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (input.replace) != "undefined") {_RecordType("<4153,4166,112>",(input.replace)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (input) != "undefined") {_RecordType("<4153,4158,112>",(input)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (re_g) != "undefined") {_RecordType("<4167,4171,112>",(re_g)); Inst182++; } } catch(e) {}
  OverrideCase(function() { return input.replace(re_g, ""); });
try { if (Inst183 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<4184,4196,113>",(OverrideCase)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (input.match) != "undefined") {_RecordType("<4217,4228,113>",(input.match)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (input) != "undefined") {_RecordType("<4217,4222,113>",(input)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (re) != "undefined") {_RecordType("<4229,4231,113>",(re)); Inst186++; } } catch(e) {}
  OverrideCase(function() { return input.match(re); });
try { if (Inst187 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<4240,4252,114>",(OverrideCase)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (input.match) != "undefined") {_RecordType("<4273,4284,114>",(input.match)); Inst188++; } } catch(e) {}try { if (Inst189 <= 1000 && typeof (input) != "undefined") {_RecordType("<4273,4278,114>",(input)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (re_g) != "undefined") {_RecordType("<4285,4289,114>",(re_g)); Inst190++; } } catch(e) {}
  OverrideCase(function() { return input.match(re_g); });
try { if (Inst191 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<4298,4310,115>",(OverrideCase)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (re.test) != "undefined") {_RecordType("<4331,4338,115>",(re.test)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (re) != "undefined") {_RecordType("<4331,4333,115>",(re)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (input) != "undefined") {_RecordType("<4339,4344,115>",(input)); Inst194++; } } catch(e) {}
  OverrideCase(function() { return re.test(input); });
try { if (Inst195 <= 1000 && typeof (OverrideCase) != "undefined") {_RecordType("<4353,4365,116>",(OverrideCase)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (re_g.test) != "undefined") {_RecordType("<4386,4395,116>",(re_g.test)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (re_g) != "undefined") {_RecordType("<4386,4390,116>",(re_g)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (input) != "undefined") {_RecordType("<4396,4401,116>",(input)); Inst198++; } } catch(e) {}
  OverrideCase(function() { return re_g.test(input); });
}

var input = "bar.foo baz......";
try { if (Inst199 <= 1000 && typeof (input) != "undefined") {_RecordType("<4415,4420,119>",(input)); Inst199++; } } catch(e) {}
var re_str = "(ba.).*?f";
try { if (Inst200 <= 1000 && typeof (re_str) != "undefined") {_RecordType("<4448,4454,120>",(re_str)); Inst200++; } } catch(e) {}
try { if (Inst201 <= 1000 && typeof (TestOverride) != "undefined") {_RecordType("<4470,4482,121>",(TestOverride)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (input) != "undefined") {_RecordType("<4483,4488,121>",(input)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (re_str) != "undefined") {_RecordType("<4503,4509,121>",(re_str)); Inst203++; } } catch(e) {}
TestOverride(input, "bar", "$1", re_str);

input = "foo bar baz";
try { if (Inst204 <= 1000 && typeof (input) != "undefined") {_RecordType("<4513,4518,123>",(input)); Inst204++; } } catch(e) {}
var re_str = "bar";
try { if (Inst205 <= 1000 && typeof (re_str) != "undefined") {_RecordType("<4540,4546,124>",(re_str)); Inst205++; } } catch(e) {}
try { if (Inst206 <= 1000 && typeof (TestOverride) != "undefined") {_RecordType("<4556,4568,125>",(TestOverride)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (input) != "undefined") {_RecordType("<4569,4574,125>",(input)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (re_str) != "undefined") {_RecordType("<4589,4595,125>",(re_str)); Inst208++; } } catch(e) {}
TestOverride(input, "bar", "$&", re_str);


try { if (Inst209 <= 1000 && typeof (no_last_match) != "undefined") {_RecordType("<4609,4622,128>",(no_last_match)); Inst209++; } } catch(e) {}
function no_last_match(fn) {
try { if (Inst210 <= 1000 && typeof (fn) != "undefined") {_RecordType("<4623,4625,128>",(fn)); Inst210++; } } catch(e) {}
try { if (Inst211 <= 1000 && typeof (fn) != "undefined") {_RecordType("<4631,4633,129>",(fn)); Inst211++; } } catch(e) {}
  fn();
try { if (Inst212 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4639,4651,130>",(assertEquals)); Inst212++; } } catch(e) {}try { if (Inst213 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<4664,4673,130>",(RegExp.$1)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<4664,4670,130>",(RegExp)); Inst214++; } } catch(e) {}
  assertEquals("hestfisk", RegExp.$1);
}

try { if (Inst215 <= 1000 && typeof (/(hestfisk)/.test) != "undefined") {_RecordType("<4679,4696,133>",(/(hestfisk)/.test)); Inst215++; } } catch(e) {}
/(hestfisk)/.test("There's no such thing as a hestfisk!");

try { if (Inst216 <= 1000 && typeof (no_last_match) != "undefined") {_RecordType("<4739,4752,135>",(no_last_match)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof ("foo".replace) != "undefined") {_RecordType("<4766,4779,135>",("foo".replace)); Inst217++; } } catch(e) {}
no_last_match(function() { "foo".replace("f", ""); });
try { if (Inst218 <= 1000 && typeof (no_last_match) != "undefined") {_RecordType("<4794,4807,136>",(no_last_match)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof ("foo".replace) != "undefined") {_RecordType("<4821,4834,136>",("foo".replace)); Inst219++; } } catch(e) {}
no_last_match(function() { "foo".replace("f", "f"); });
try { if (Inst220 <= 1000 && typeof (no_last_match) != "undefined") {_RecordType("<4850,4863,137>",(no_last_match)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof ("foo".split) != "undefined") {_RecordType("<4877,4888,137>",("foo".split)); Inst221++; } } catch(e) {}
no_last_match(function() { "foo".split("o"); });

var base = "In the music.  In the music.  ";
try { if (Inst222 <= 1000 && typeof (base) != "undefined") {_RecordType("<4904,4908,139>",(base)); Inst222++; } } catch(e) {}
try { if (Inst224 <= 1000 && typeof (base) != "undefined") {_RecordType("<4956,4960,140>",(base)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (base) != "undefined") {_RecordType("<4963,4967,140>",(base)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (base) != "undefined") {_RecordType("<4970,4974,140>",(base)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (base) != "undefined") {_RecordType("<4977,4981,140>",(base)); Inst227++; } } catch(e) {}
var cons = base + base + base + base;
try { if (Inst223 <= 1000 && typeof (cons) != "undefined") {_RecordType("<4949,4953,140>",(cons)); Inst223++; } } catch(e) {}
try { if (Inst228 <= 1000 && typeof (no_last_match) != "undefined") {_RecordType("<4983,4996,141>",(no_last_match)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (cons.replace) != "undefined") {_RecordType("<5010,5022,141>",(cons.replace)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (cons) != "undefined") {_RecordType("<5010,5014,141>",(cons)); Inst230++; } } catch(e) {}
no_last_match(function() { cons.replace("x", "y"); });
try { if (Inst231 <= 1000 && typeof (no_last_match) != "undefined") {_RecordType("<5038,5051,142>",(no_last_match)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (cons.replace) != "undefined") {_RecordType("<5065,5077,142>",(cons.replace)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (cons) != "undefined") {_RecordType("<5065,5069,142>",(cons)); Inst233++; } } catch(e) {}
no_last_match(function() { cons.replace("e", "E"); });


// Here's one that matches once, then tries to match again, but fails.
// Verify that the last match info is from the last match, not from the
// failure that came after.
try { if (Inst234 <= 1000 && typeof ("bar.foo baz......".replace) != "undefined") {_RecordType("<5266,5293,148>",("bar.foo baz......".replace)); Inst234++; } } catch(e) {}
"bar.foo baz......".replace(/(ba.).*?f/g, function() { return "x";});
try { if (Inst235 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5336,5348,149>",(assertEquals)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (RegExp.$1) != "undefined") {_RecordType("<5356,5365,149>",(RegExp.$1)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5356,5362,149>",(RegExp)); Inst237++; } } catch(e) {}
assertEquals("bar", RegExp.$1);


// A test that initially does a zero width match, but later does a non-zero
// width match.
try { if (Inst239 <= 1000 && typeof ("foo bar baz".replace) != "undefined") {_RecordType("<5470,5491,154>",("foo bar baz".replace)); Inst239++; } } catch(e) {}
var a = "foo bar baz".replace(/^|bar/g, "");
try { if (Inst238 <= 1000 && typeof (a) != "undefined") {_RecordType("<5466,5467,154>",(a)); Inst238++; } } catch(e) {}
try { if (Inst240 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5507,5519,155>",(assertEquals)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (a) != "undefined") {_RecordType("<5532,5533,155>",(a)); Inst241++; } } catch(e) {}
assertEquals("foo  baz", a);

try { if (Inst243 <= 1000 && typeof ("foo bar baz".replace) != "undefined") {_RecordType("<5541,5562,157>",("foo bar baz".replace)); Inst243++; } } catch(e) {}
a = "foo bar baz".replace(/^|bar/g, "*");
try { if (Inst242 <= 1000 && typeof (a) != "undefined") {_RecordType("<5537,5538,157>",(a)); Inst242++; } } catch(e) {}
try { if (Inst244 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5579,5591,158>",(assertEquals)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (a) != "undefined") {_RecordType("<5606,5607,158>",(a)); Inst245++; } } catch(e) {}
assertEquals("*foo * baz", a);

// We test FilterASCII using regexps that will backtrack forever.  Since
// a regexp with a non-ASCII character in it can never match an ASCII
// string we can test that the relevant node is removed by verifying that
// there is no hang.
try { if (Inst246 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<5858,5864,164>",(NoHang)); Inst246++; } } catch(e) {}
function NoHang(re) {
try { if (Inst247 <= 1000 && typeof (re) != "undefined") {_RecordType("<5865,5867,164>",(re)); Inst247++; } } catch(e) {}
try { if (Inst248 <= 1000 && typeof ("This is an ASCII string that could take forever".match) != "undefined") {_RecordType("<5873,5928,165>",("This is an ASCII string that could take forever".match)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (re) != "undefined") {_RecordType("<5929,5931,165>",(re)); Inst249++; } } catch(e) {}
  "This is an ASCII string that could take forever".match(re);
}

try { if (Inst250 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<5937,5943,168>",(NoHang)); Inst250++; } } catch(e) {}
NoHang(/(((.*)*)*x)Ā/);  // Continuation after loop is filtered, so is loop.
try { if (Inst251 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6014,6020,169>",(NoHang)); Inst251++; } } catch(e) {}
NoHang(/(((.*)*)*Ā)foo/);  // Body of loop filtered.
try { if (Inst252 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6067,6073,170>",(NoHang)); Inst252++; } } catch(e) {}
NoHang(/Ā(((.*)*)*x)/);   // Everything after a filtered character is filtered.
try { if (Inst253 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6147,6153,171>",(NoHang)); Inst253++; } } catch(e) {}
NoHang(/(((.*)*)*x)Ā/);   // Everything before a filtered character is filtered.
try { if (Inst254 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6228,6234,172>",(NoHang)); Inst254++; } } catch(e) {}
NoHang(/[ćăĀ](((.*)*)*x)/);   // Everything after a filtered class is filtered.
try { if (Inst255 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6308,6314,173>",(NoHang)); Inst255++; } } catch(e) {}
NoHang(/(((.*)*)*x)[ćăĀ]/);   // Everything before a filtered class is filtered.
try { if (Inst256 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6389,6395,174>",(NoHang)); Inst256++; } } catch(e) {}
NoHang(/[^\x00-\xff](((.*)*)*x)/);   // After negated class.
try { if (Inst257 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6450,6456,175>",(NoHang)); Inst257++; } } catch(e) {}
NoHang(/(((.*)*)*x)[^\x00-\xff]/);   // Before negated class.
try { if (Inst258 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6512,6518,176>",(NoHang)); Inst258++; } } catch(e) {}
NoHang(/(?!(((.*)*)*x)Ā)foo/);  // Negative lookahead is filtered.
try { if (Inst259 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6579,6585,177>",(NoHang)); Inst259++; } } catch(e) {}
NoHang(/(?!(((.*)*)*x))Ā/);  // Continuation branch of negative lookahead.
try { if (Inst260 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6654,6660,178>",(NoHang)); Inst260++; } } catch(e) {}
NoHang(/(?=(((.*)*)*x)Ā)foo/);  // Positive lookahead is filtered.
try { if (Inst261 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6721,6727,179>",(NoHang)); Inst261++; } } catch(e) {}
NoHang(/(?=(((.*)*)*x))Ā/);  // Continuation branch of positive lookahead.
try { if (Inst262 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6796,6802,180>",(NoHang)); Inst262++; } } catch(e) {}
NoHang(/(?=Ā)(((.*)*)*x)/);  // Positive lookahead also prunes continuation.
try { if (Inst263 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6873,6879,181>",(NoHang)); Inst263++; } } catch(e) {}
NoHang(/(æ|ø|Ā)(((.*)*)*x)/);  // All branches of alternation are filtered.
try { if (Inst264 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<6949,6955,182>",(NoHang)); Inst264++; } } catch(e) {}
NoHang(/(a|b|(((.*)*)*x))Ā/);  // 1 out of 3 branches pruned.
try { if (Inst265 <= 1000 && typeof (NoHang) != "undefined") {_RecordType("<7011,7017,183>",(NoHang)); Inst265++; } } catch(e) {}
NoHang(/(a|(((.*)*)*x)ă|(((.*)*)*x)Ā)/);  // 2 out of 3 branches pruned.

var s = "Don't prune based on a repetition of length 0";
try { if (Inst266 <= 1000 && typeof (s) != "undefined") {_RecordType("<7089,7090,185>",(s)); Inst266++; } } catch(e) {}
try { if (Inst267 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7142,7154,186>",(assertEquals)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (s.match) != "undefined") {_RecordType("<7161,7168,186>",(s.match)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (s) != "undefined") {_RecordType("<7161,7162,186>",(s)); Inst269++; } } catch(e) {}
assertEquals(null, s.match(/å{1,1}prune/));
try { if (Inst270 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7186,7198,187>",(assertEquals)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (s.match(/å{0,0}prune/)[0]) != "undefined") {_RecordType("<7209,7234,187>",(s.match(/å{0,0}prune/)[0])); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (s.match) != "undefined") {_RecordType("<7209,7216,187>",(s.match)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (s) != "undefined") {_RecordType("<7209,7210,187>",(s)); Inst273++; } } catch(e) {}
assertEquals("prune", (s.match(/å{0,0}prune/)[0]));

// Some very deep regexps where FilterASCII gives up in order not to make the
// stack overflow.
var regex6 = /a*\u0100*\w/;
try { if (Inst274 <= 1000 && typeof (regex6) != "undefined") {_RecordType("<7340,7346,191>",(regex6)); Inst274++; } } catch(e) {}
var input0 = "a";
try { if (Inst275 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7368,7374,192>",(input0)); Inst275++; } } catch(e) {}
try { if (Inst276 <= 1000 && typeof (regex6.exec) != "undefined") {_RecordType("<7382,7393,193>",(regex6.exec)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (regex6) != "undefined") {_RecordType("<7382,7388,193>",(regex6)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7394,7400,193>",(input0)); Inst278++; } } catch(e) {}
regex6.exec(input0);

var re = "\u0100*\\w";
try { if (Inst279 <= 1000 && typeof (re) != "undefined") {_RecordType("<7408,7410,195>",(re)); Inst279++; } } catch(e) {}

try { if (Inst284 <= 1000 && typeof (re) != "undefined") {_RecordType("<7470,7472,197>",(re)); Inst284++; } } catch(e) {}
for (var i = 0; i < 200; i++) re = "a*" + re;
try { if (Inst280 <= 1000 && typeof (i) != "undefined") {_RecordType("<7437,7438,197>",(i)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (i) != "undefined") {_RecordType("<7444,7445,197>",(i)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (i) != "undefined") {_RecordType("<7453,7454,197>",(i)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (re) != "undefined") {_RecordType("<7458,7460,197>",(re)); Inst283++; } } catch(e) {}

try { if (Inst286 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7492,7498,199>",(RegExp)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (re) != "undefined") {_RecordType("<7499,7501,199>",(re)); Inst287++; } } catch(e) {}
var regex7 = new RegExp(re);
try { if (Inst285 <= 1000 && typeof (regex7) != "undefined") {_RecordType("<7479,7485,199>",(regex7)); Inst285++; } } catch(e) {}
try { if (Inst288 <= 1000 && typeof (regex7.exec) != "undefined") {_RecordType("<7504,7515,200>",(regex7.exec)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (regex7) != "undefined") {_RecordType("<7504,7510,200>",(regex7)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7516,7522,200>",(input0)); Inst290++; } } catch(e) {}
regex7.exec(input0);

try { if (Inst292 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7543,7549,202>",(RegExp)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (re) != "undefined") {_RecordType("<7550,7552,202>",(re)); Inst293++; } } catch(e) {}
var regex8 = new RegExp(re, "i");
try { if (Inst291 <= 1000 && typeof (regex8) != "undefined") {_RecordType("<7530,7536,202>",(regex8)); Inst291++; } } catch(e) {}
try { if (Inst294 <= 1000 && typeof (regex8.exec) != "undefined") {_RecordType("<7560,7571,203>",(regex8.exec)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (regex8) != "undefined") {_RecordType("<7560,7566,203>",(regex8)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7572,7578,203>",(input0)); Inst296++; } } catch(e) {}
regex8.exec(input0);

re = "[\u0100]*\\w";
try { if (Inst297 <= 1000 && typeof (re) != "undefined") {_RecordType("<7582,7584,205>",(re)); Inst297++; } } catch(e) {}
try { if (Inst302 <= 1000 && typeof (re) != "undefined") {_RecordType("<7645,7647,206>",(re)); Inst302++; } } catch(e) {}
for (var i = 0; i < 200; i++) re = "a*" + re;
try { if (Inst298 <= 1000 && typeof (i) != "undefined") {_RecordType("<7612,7613,206>",(i)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (i) != "undefined") {_RecordType("<7619,7620,206>",(i)); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (i) != "undefined") {_RecordType("<7628,7629,206>",(i)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (re) != "undefined") {_RecordType("<7633,7635,206>",(re)); Inst301++; } } catch(e) {}

try { if (Inst304 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7667,7673,208>",(RegExp)); Inst304++; } } catch(e) {}try { if (Inst305 <= 1000 && typeof (re) != "undefined") {_RecordType("<7674,7676,208>",(re)); Inst305++; } } catch(e) {}
var regex9 = new RegExp(re);
try { if (Inst303 <= 1000 && typeof (regex9) != "undefined") {_RecordType("<7654,7660,208>",(regex9)); Inst303++; } } catch(e) {}
try { if (Inst306 <= 1000 && typeof (regex9.exec) != "undefined") {_RecordType("<7679,7690,209>",(regex9.exec)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (regex9) != "undefined") {_RecordType("<7679,7685,209>",(regex9)); Inst307++; } } catch(e) {}try { if (Inst308 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7691,7697,209>",(input0)); Inst308++; } } catch(e) {}
regex9.exec(input0);

try { if (Inst310 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7719,7725,211>",(RegExp)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (re) != "undefined") {_RecordType("<7726,7728,211>",(re)); Inst311++; } } catch(e) {}
var regex10 = new RegExp(re, "i");
try { if (Inst309 <= 1000 && typeof (regex10) != "undefined") {_RecordType("<7705,7712,211>",(regex10)); Inst309++; } } catch(e) {}
try { if (Inst312 <= 1000 && typeof (regex10.exec) != "undefined") {_RecordType("<7736,7748,212>",(regex10.exec)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (regex10) != "undefined") {_RecordType("<7736,7743,212>",(regex10)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7749,7755,212>",(input0)); Inst314++; } } catch(e) {}
regex10.exec(input0);

var regex11 = /^(?:[^\u0000-\u0080]|[0-9a-z?,.!&\s#()])+$/i;
try { if (Inst315 <= 1000 && typeof (regex11) != "undefined") {_RecordType("<7763,7770,214>",(regex11)); Inst315++; } } catch(e) {}
try { if (Inst316 <= 1000 && typeof (regex11.exec) != "undefined") {_RecordType("<7820,7832,215>",(regex11.exec)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (regex11) != "undefined") {_RecordType("<7820,7827,215>",(regex11)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (input0) != "undefined") {_RecordType("<7833,7839,215>",(input0)); Inst318++; } } catch(e) {}
regex11.exec(input0);

var regex12 = /u(\xf0{8}?\D*?|( ? !)$h??(|)*?(||)+?\6((?:\W\B|--\d-*-|)?$){0, }?|^Y( ? !1)\d+)+a/;
try { if (Inst319 <= 1000 && typeof (regex12) != "undefined") {_RecordType("<7847,7854,217>",(regex12)); Inst319++; } } catch(e) {}
try { if (Inst320 <= 1000 && typeof (regex12.exec) != "undefined") {_RecordType("<7942,7954,218>",(regex12.exec)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (regex12) != "undefined") {_RecordType("<7942,7949,218>",(regex12)); Inst321++; } } catch(e) {}
regex12.exec("");

