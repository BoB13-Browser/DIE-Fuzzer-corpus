var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

// Simple function which stores the last debug event.
listenerComplete = false;
try { if (Inst3 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<1777,1793,33>",(listenerComplete)); Inst3++; } } catch(e) {}
exception = false;
try { if (Inst4 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1803,1812,34>",(exception)); Inst4++; } } catch(e) {}

var base_request = '"seq":0,"type":"request","command":"continue"'
try { if (Inst5 <= 1000 && typeof (base_request) != "undefined") {_RecordType("<1827,1839,36>",(base_request)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (safeEval) != "undefined") {_RecordType("<1900,1908,38>",(safeEval)); Inst6++; } } catch(e) {}
function safeEval(code) {
try { if (Inst7 <= 1000 && typeof (code) != "undefined") {_RecordType("<1909,1913,38>",(code)); Inst7++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (e) != "undefined") {_RecordType("<1971,1972,41>",(e)); Inst10++; } } catch(e) {}
  try {
try { if (Inst8 <= 1000 && typeof (eval) != "undefined") {_RecordType("<1936,1940,40>",(eval)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (code) != "undefined") {_RecordType("<1947,1951,40>",(code)); Inst9++; } } catch(e) {}
    return eval('(' + code + ')');
  } catch (e) {
try { if (Inst11 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1980,1992,42>",(assertEquals)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<2001,2002,42>",(e)); Inst12++; } } catch(e) {}
    assertEquals(void 0, e);
try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2016,2025,43>",(undefined)); Inst13++; } } catch(e) {}
    return undefined;
  }
}

try { if (Inst14 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<2043,2056,47>",(testArguments)); Inst14++; } } catch(e) {}
function testArguments(exec_state, arguments, success) {
try { if (Inst15 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2057,2067,47>",(exec_state)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2069,2078,47>",(arguments)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (success) != "undefined") {_RecordType("<2080,2087,47>",(success)); Inst17++; } } catch(e) {}
  // Get the debug command processor in paused state.
try { if (Inst19 <= 1000 && typeof (exec_state.debugCommandProcessor) != "undefined") {_RecordType("<2157,2189,49>",(exec_state.debugCommandProcessor)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2157,2167,49>",(exec_state)); Inst20++; } } catch(e) {}
  var dcp = exec_state.debugCommandProcessor(false);
try { if (Inst18 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2151,2154,49>",(dcp)); Inst18++; } } catch(e) {}

  // Generate request with the supplied arguments
  var request;
try { if (Inst21 <= 1000 && typeof (request) != "undefined") {_RecordType("<2255,2262,52>",(request)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2270,2279,53>",(arguments)); Inst22++; } } catch(e) {}
  if (arguments) {
try { if (Inst24 <= 1000 && typeof (base_request) != "undefined") {_RecordType("<2303,2315,54>",(base_request)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2336,2345,54>",(arguments)); Inst25++; } } catch(e) {}
    request = '{' + base_request + ',"arguments":' + arguments + '}';
try { if (Inst23 <= 1000 && typeof (request) != "undefined") {_RecordType("<2287,2294,54>",(request)); Inst23++; } } catch(e) {}
  } else {
try { if (Inst27 <= 1000 && typeof (base_request) != "undefined") {_RecordType("<2384,2396,56>",(base_request)); Inst27++; } } catch(e) {}
    request = '{' + base_request + '}'
try { if (Inst26 <= 1000 && typeof (request) != "undefined") {_RecordType("<2368,2375,56>",(request)); Inst26++; } } catch(e) {}
  }
try { if (Inst29 <= 1000 && typeof (safeEval) != "undefined") {_RecordType("<2424,2432,58>",(safeEval)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (dcp.processDebugJSONRequest) != "undefined") {_RecordType("<2433,2460,58>",(dcp.processDebugJSONRequest)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2433,2436,58>",(dcp)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (request) != "undefined") {_RecordType("<2461,2468,58>",(request)); Inst32++; } } catch(e) {}
  var response = safeEval(dcp.processDebugJSONRequest(request));
try { if (Inst28 <= 1000 && typeof (response) != "undefined") {_RecordType("<2413,2421,58>",(response)); Inst28++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (success) != "undefined") {_RecordType("<2478,2485,59>",(success)); Inst33++; } } catch(e) {}
  if (success) {
try { if (Inst34 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2493,2503,60>",(assertTrue)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (response.success) != "undefined") {_RecordType("<2504,2520,60>",(response.success)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (response) != "undefined") {_RecordType("<2504,2512,60>",(response)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (request) != "undefined") {_RecordType("<2522,2529,60>",(request)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (response.message) != "undefined") {_RecordType("<2541,2557,60>",(response.message)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (response) != "undefined") {_RecordType("<2541,2549,60>",(response)); Inst39++; } } catch(e) {}
    assertTrue(response.success, request + ' -> ' + response.message);
try { if (Inst40 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2564,2574,61>",(assertTrue)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (response.running) != "undefined") {_RecordType("<2575,2591,61>",(response.running)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (response) != "undefined") {_RecordType("<2575,2583,61>",(response)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (request) != "undefined") {_RecordType("<2593,2600,61>",(request)); Inst43++; } } catch(e) {}
    assertTrue(response.running, request + ' -> expected running');
  } else {
try { if (Inst44 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2643,2654,63>",(assertFalse)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (response.success) != "undefined") {_RecordType("<2655,2671,63>",(response.success)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (response) != "undefined") {_RecordType("<2655,2663,63>",(response)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (request) != "undefined") {_RecordType("<2673,2680,63>",(request)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (response.message) != "undefined") {_RecordType("<2692,2708,63>",(response.message)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (response) != "undefined") {_RecordType("<2692,2700,63>",(response)); Inst49++; } } catch(e) {}
    assertFalse(response.success, request + ' -> ' + response.message);
try { if (Inst50 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2715,2726,64>",(assertFalse)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (response.running) != "undefined") {_RecordType("<2727,2743,64>",(response.running)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (response) != "undefined") {_RecordType("<2727,2735,64>",(response)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (request) != "undefined") {_RecordType("<2745,2752,64>",(request)); Inst53++; } } catch(e) {}
    assertFalse(response.running, request + ' -> expected not running');
  }
}

try { if (Inst54 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2800,2808,68>",(listener)); Inst54++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst55 <= 1000 && typeof (event) != "undefined") {_RecordType("<2809,2814,68>",(event)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2816,2826,68>",(exec_state)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2828,2838,68>",(event_data)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (data) != "undefined") {_RecordType("<2840,2844,68>",(data)); Inst58++; } } catch(e) {}
try { if (Inst84 <= 1000 && typeof (e) != "undefined") {_RecordType("<3746,3747,93>",(e)); Inst84++; } } catch(e) {}
  try {
try { if (Inst59 <= 1000 && typeof (event) != "undefined") {_RecordType("<2862,2867,70>",(event)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<2871,2893,70>",(Debug.DebugEvent.Break)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2871,2887,70>",(Debug.DebugEvent)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2871,2876,70>",(Debug)); Inst62++; } } catch(e) {}
  if (event == Debug.DebugEvent.Break) {

    // Test simple continue request.
try { if (Inst63 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<2939,2952,73>",(testArguments)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2953,2963,73>",(exec_state)); Inst64++; } } catch(e) {}
    testArguments(exec_state, void 0, true);

    // Test some illegal continue requests.
try { if (Inst65 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3029,3042,76>",(testArguments)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3043,3053,76>",(exec_state)); Inst66++; } } catch(e) {}
    testArguments(exec_state, '{"stepaction":"maybe"}', false);

    // Test some legal continue requests.
try { if (Inst67 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3136,3149,79>",(testArguments)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3150,3160,79>",(exec_state)); Inst68++; } } catch(e) {}
    testArguments(exec_state, '{"stepaction":"in"}', true);
try { if (Inst69 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3196,3209,80>",(testArguments)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3210,3220,80>",(exec_state)); Inst70++; } } catch(e) {}
    testArguments(exec_state, '{"stepaction":"next"}', true);
try { if (Inst71 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3258,3271,81>",(testArguments)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3272,3282,81>",(exec_state)); Inst72++; } } catch(e) {}
    testArguments(exec_state, '{"stepaction":"out"}', true);

    // Step count argument is ignored.
try { if (Inst73 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3359,3372,84>",(testArguments)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3373,3383,84>",(exec_state)); Inst74++; } } catch(e) {}
    testArguments(exec_state, '{"stepcount":-1}', true);
try { if (Inst75 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3416,3429,85>",(testArguments)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3430,3440,85>",(exec_state)); Inst76++; } } catch(e) {}
    testArguments(exec_state, '{"stepcount":1}', true);
try { if (Inst77 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3472,3485,86>",(testArguments)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3486,3496,86>",(exec_state)); Inst78++; } } catch(e) {}
    testArguments(exec_state, '{"stepcount":10}', true);
try { if (Inst79 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3529,3542,87>",(testArguments)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3543,3553,87>",(exec_state)); Inst80++; } } catch(e) {}
    testArguments(exec_state, '{"stepcount":"10"}', true);
try { if (Inst81 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3588,3601,88>",(testArguments)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3602,3612,88>",(exec_state)); Inst82++; } } catch(e) {}
    testArguments(exec_state, '{"stepaction":"next","stepcount":10}', true);

    // Indicate that all was processed.
    listenerComplete = true;
try { if (Inst83 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<3706,3722,91>",(listenerComplete)); Inst83++; } } catch(e) {}
  }
  } catch (e) {
try { if (Inst86 <= 1000 && typeof (e) != "undefined") {_RecordType("<3767,3768,94>",(e)); Inst86++; } } catch(e) {}
    exception = e
try { if (Inst85 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3755,3764,94>",(exception)); Inst85++; } } catch(e) {}
  };
};

// Add the debug event listener.
try { if (Inst87 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<3811,3828,99>",(Debug.setListener)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3811,3816,99>",(Debug)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (listener) != "undefined") {_RecordType("<3829,3837,99>",(listener)); Inst89++; } } catch(e) {}
Debug.setListener(listener);

try { if (Inst90 <= 1000 && typeof (f) != "undefined") {_RecordType("<3850,3851,101>",(f)); Inst90++; } } catch(e) {}
function f() {
  a=1
try { if (Inst91 <= 1000 && typeof (a) != "undefined") {_RecordType("<3858,3859,102>",(a)); Inst91++; } } catch(e) {}
};

try { if (Inst92 <= 1000 && typeof (g) != "undefined") {_RecordType("<3875,3876,105>",(g)); Inst92++; } } catch(e) {}
function g() {
try { if (Inst93 <= 1000 && typeof (f) != "undefined") {_RecordType("<3883,3884,106>",(f)); Inst93++; } } catch(e) {}
  f();
};

// Set a break point and call to invoke the debug event listener.
try { if (Inst94 <= 1000 && typeof (Debug.setBreakPoint) != "undefined") {_RecordType("<3958,3977,110>",(Debug.setBreakPoint)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3958,3963,110>",(Debug)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (g) != "undefined") {_RecordType("<3978,3979,110>",(g)); Inst96++; } } catch(e) {}
Debug.setBreakPoint(g, 0, 0);
try { if (Inst97 <= 1000 && typeof (g) != "undefined") {_RecordType("<3988,3989,111>",(g)); Inst97++; } } catch(e) {}
g();

try { if (Inst98 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3994,4005,113>",(assertFalse)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (exception) != "undefined") {_RecordType("<4006,4015,113>",(exception)); Inst99++; } } catch(e) {}
assertFalse(exception, "exception in listener")
// Make sure that the debug event listener vas invoked.
try { if (Inst100 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4098,4108,115>",(assertTrue)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<4109,4125,115>",(listenerComplete)); Inst101++; } } catch(e) {}
assertTrue(listenerComplete, "listener did not run to completion");

