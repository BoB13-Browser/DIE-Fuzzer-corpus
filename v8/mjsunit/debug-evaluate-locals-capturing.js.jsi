var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-debug-as debug

try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<211,222,7>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<211,216,7>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<203,208,7>",(Debug)); Inst0++; } } catch(e) {}
var exception = null;
try { if (Inst3 <= 1000 && typeof (exception) != "undefined") {_RecordType("<227,236,8>",(exception)); Inst3++; } } catch(e) {}
var break_count = 0;
try { if (Inst4 <= 1000 && typeof (break_count) != "undefined") {_RecordType("<249,260,9>",(break_count)); Inst4++; } } catch(e) {}

var f = null;
try { if (Inst5 <= 1000 && typeof (f) != "undefined") {_RecordType("<271,272,11>",(f)); Inst5++; } } catch(e) {}
var i = null;
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<285,286,12>",(i)); Inst6++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (listener) != "undefined") {_RecordType("<304,312,13>",(listener)); Inst7++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst8 <= 1000 && typeof (event) != "undefined") {_RecordType("<313,318,13>",(event)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<320,330,13>",(exec_state)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<332,342,13>",(event_data)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (data) != "undefined") {_RecordType("<344,348,13>",(data)); Inst11++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (e) != "undefined") {_RecordType("<572,573,21>",(e)); Inst25++; } } catch(e) {}
  try {
try { if (Inst12 <= 1000 && typeof (event) != "undefined") {_RecordType("<368,373,15>",(event)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<377,399,15>",(Debug.DebugEvent.Break)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<377,393,15>",(Debug.DebugEvent)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<377,382,15>",(Debug)); Inst15++; } } catch(e) {}
    if (event == Debug.DebugEvent.Break) {
try { if (Inst17 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<427,443,16>",(exec_state.frame)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<427,437,16>",(exec_state)); Inst18++; } } catch(e) {}
      var frameMirror = exec_state.frame(0);
try { if (Inst16 <= 1000 && typeof (frameMirror) != "undefined") {_RecordType("<413,424,16>",(frameMirror)); Inst16++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (frameMirror.evaluate('f = function() { i = 5; }, f(), i').value) != "undefined") {_RecordType("<463,526,18>",(frameMirror.evaluate('f = function() { i = 5; }, f(), i').value)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (frameMirror.evaluate) != "undefined") {_RecordType("<463,483,18>",(frameMirror.evaluate)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (frameMirror) != "undefined") {_RecordType("<463,474,18>",(frameMirror)); Inst22++; } } catch(e) {}
      var i = frameMirror.evaluate('f = function() { i = 5; }, f(), i').value();
try { if (Inst19 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,18>",(i)); Inst19++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<536,548,19>",(assertEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<552,553,19>",(i)); Inst24++; } } catch(e) {}
      assertEquals(5, i);
    }
  } catch(e) {
try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<593,594,22>",(e)); Inst27++; } } catch(e) {}
    exception = e;
try { if (Inst26 <= 1000 && typeof (exception) != "undefined") {_RecordType("<581,590,22>",(exception)); Inst26++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (print) != "undefined") {_RecordType("<600,605,23>",(print)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<606,607,23>",(e)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (e.stack) != "undefined") {_RecordType("<609,616,23>",(e.stack)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<609,610,23>",(e)); Inst31++; } } catch(e) {}
    print(e, e.stack);
  }
};

try { if (Inst32 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<627,644,27>",(Debug.setListener)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<627,632,27>",(Debug)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (listener) != "undefined") {_RecordType("<645,653,27>",(listener)); Inst34++; } } catch(e) {}
Debug.setListener(listener);

(function (){

  var i = 0;
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<678,679,31>",(i)); Inst35++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (e) != "undefined") {_RecordType("<728,729,35>",(e)); Inst37++; } } catch(e) {}
  try {
try { if (Inst36 <= 1000 && typeof (Error) != "undefined") {_RecordType("<708,713,34>",(Error)); Inst36++; } } catch(e) {}
    throw new Error();
  } catch (e) {
try { if (Inst38 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<737,749,36>",(assertEquals)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<753,754,36>",(i)); Inst39++; } } catch(e) {}
    assertEquals(0, i);
    debugger;
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<775,787,38>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<791,792,38>",(i)); Inst41++; } } catch(e) {}
    assertEquals(5, i);
  }
}());

try { if (Inst42 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<806,816,42>",(assertNull)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (exception) != "undefined") {_RecordType("<817,826,42>",(exception)); Inst43++; } } catch(e) {}
assertNull(exception);

try { if (Inst44 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<830,840,44>",(assertNull)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<841,842,44>",(i)); Inst45++; } } catch(e) {}
assertNull(i);
try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<845,846,45>",(f)); Inst46++; } } catch(e) {}
f();
try { if (Inst47 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<850,860,46>",(assertNull)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<861,862,46>",(i)); Inst48++; } } catch(e) {}
assertNull(i);

try { if (Inst49 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<866,883,48>",(Debug.setListener)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<866,871,48>",(Debug)); Inst50++; } } catch(e) {}
Debug.setListener(null);

