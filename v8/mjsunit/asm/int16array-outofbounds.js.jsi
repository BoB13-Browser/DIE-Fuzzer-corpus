var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

try { if (Inst0 <= 1000 && typeof (Module) != "undefined") {_RecordType("<177,183,5>",(Module)); Inst0++; } } catch(e) {}
function Module(stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<184,190,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<192,199,5>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<201,205,5>",(heap)); Inst3++; } } catch(e) {}
  "use asm";
try { if (Inst5 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<240,257,7>",(stdlib.Int16Array)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<240,246,7>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (heap) != "undefined") {_RecordType("<258,262,7>",(heap)); Inst7++; } } catch(e) {}
  var MEM16 = new stdlib.Int16Array(heap);
try { if (Inst4 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<228,233,7>",(MEM16)); Inst4++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (load) != "undefined") {_RecordType("<276,280,8>",(load)); Inst8++; } } catch(e) {}
  function load(i) {
try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<281,282,8>",(i)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<294,295,9>",(i)); Inst11++; } } catch(e) {}
    i = i|0;
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,9>",(i)); Inst10++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (MEM16[i >> 1]) != "undefined") {_RecordType("<307,320,10>",(MEM16[i >> 1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<307,312,10>",(MEM16)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<313,314,10>",(i)); Inst15++; } } catch(e) {}
    i = MEM16[i >> 1] | 0;
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,10>",(i)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<337,338,11>",(i)); Inst16++; } } catch(e) {}
    return i;
  }
try { if (Inst17 <= 1000 && typeof (loadm1) != "undefined") {_RecordType("<355,361,13>",(loadm1)); Inst17++; } } catch(e) {}
  function loadm1() {
try { if (Inst18 <= 1000 && typeof (MEM16[-1]) != "undefined") {_RecordType("<377,386,14>",(MEM16[-1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<377,382,14>",(MEM16)); Inst19++; } } catch(e) {}
    return MEM16[-1] | 0;
  }
try { if (Inst20 <= 1000 && typeof (store) != "undefined") {_RecordType("<407,412,16>",(store)); Inst20++; } } catch(e) {}
  function store(i, v) {
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<413,414,16>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (v) != "undefined") {_RecordType("<416,417,16>",(v)); Inst22++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (i) != "undefined") {_RecordType("<429,430,17>",(i)); Inst24++; } } catch(e) {}
    i = i|0;
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<425,426,17>",(i)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (v) != "undefined") {_RecordType("<442,443,18>",(v)); Inst26++; } } catch(e) {}
    v = v|0;
try { if (Inst25 <= 1000 && typeof (v) != "undefined") {_RecordType("<438,439,18>",(v)); Inst25++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (v) != "undefined") {_RecordType("<467,468,19>",(v)); Inst30++; } } catch(e) {}
    MEM16[i >> 1] = v;
try { if (Inst27 <= 1000 && typeof (MEM16[i >> 1]) != "undefined") {_RecordType("<451,464,19>",(MEM16[i >> 1])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<451,456,19>",(MEM16)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<457,458,19>",(i)); Inst29++; } } catch(e) {}
  }
try { if (Inst31 <= 1000 && typeof (storem1) != "undefined") {_RecordType("<485,492,21>",(storem1)); Inst31++; } } catch(e) {}
  function storem1(v) {
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<493,494,21>",(v)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (v) != "undefined") {_RecordType("<506,507,22>",(v)); Inst34++; } } catch(e) {}
    v = v|0;
try { if (Inst33 <= 1000 && typeof (v) != "undefined") {_RecordType("<502,503,22>",(v)); Inst33++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (v) != "undefined") {_RecordType("<527,528,23>",(v)); Inst37++; } } catch(e) {}
    MEM16[-1] = v;
try { if (Inst35 <= 1000 && typeof (MEM16[-1]) != "undefined") {_RecordType("<515,524,23>",(MEM16[-1])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<515,520,23>",(MEM16)); Inst36++; } } catch(e) {}
  }
try { if (Inst38 <= 1000 && typeof (load) != "undefined") {_RecordType("<550,554,25>",(load)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (loadm1) != "undefined") {_RecordType("<564,570,25>",(loadm1)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (store) != "undefined") {_RecordType("<579,584,25>",(store)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (storem1) != "undefined") {_RecordType("<595,602,25>",(storem1)); Inst41++; } } catch(e) {}
  return {load: load, loadm1: loadm1, store: store, storem1: storem1};
}

try { if (Inst43 <= 1000 && typeof (Module) != "undefined") {_RecordType("<616,622,28>",(Module)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<637,648,28>",(ArrayBuffer)); Inst44++; } } catch(e) {}
var m = Module(this, {}, new ArrayBuffer(2));
try { if (Inst42 <= 1000 && typeof (m) != "undefined") {_RecordType("<612,613,28>",(m)); Inst42++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<655,662,30>",(m.store)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (m) != "undefined") {_RecordType("<655,656,30>",(m)); Inst46++; } } catch(e) {}
m.store(-1000, 4);
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<674,686,31>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<690,696,31>",(m.load)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (m) != "undefined") {_RecordType("<690,691,31>",(m)); Inst49++; } } catch(e) {}
assertEquals(0, m.load(-1000));
try { if (Inst50 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<706,718,32>",(assertEquals)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (m.loadm1) != "undefined") {_RecordType("<722,730,32>",(m.loadm1)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (m) != "undefined") {_RecordType("<722,723,32>",(m)); Inst52++; } } catch(e) {}
assertEquals(0, m.loadm1());
try { if (Inst53 <= 1000 && typeof (m.storem1) != "undefined") {_RecordType("<735,744,33>",(m.storem1)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (m) != "undefined") {_RecordType("<735,736,33>",(m)); Inst54++; } } catch(e) {}
m.storem1(1);
try { if (Inst55 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<749,761,34>",(assertEquals)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (m.loadm1) != "undefined") {_RecordType("<765,773,34>",(m.loadm1)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (m) != "undefined") {_RecordType("<765,766,34>",(m)); Inst57++; } } catch(e) {}
assertEquals(0, m.loadm1());
try { if (Inst58 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<778,785,35>",(m.store)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (m) != "undefined") {_RecordType("<778,779,35>",(m)); Inst59++; } } catch(e) {}
m.store(0, 32767);
for (var i = 1; i < 64; ++i) {
try { if (Inst60 <= 1000 && typeof (i) != "undefined") {_RecordType("<806,807,36>",(i)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (i) != "undefined") {_RecordType("<813,814,36>",(i)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (i) != "undefined") {_RecordType("<823,824,36>",(i)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<830,837,37>",(m.store)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (m) != "undefined") {_RecordType("<830,831,37>",(m)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (i) != "undefined") {_RecordType("<838,839,37>",(i)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (i) != "undefined") {_RecordType("<857,858,37>",(i)); Inst66++; } } catch(e) {}
  m.store(i * 2 * 32 * 1024, i);
}
try { if (Inst67 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<863,875,39>",(assertEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<883,889,39>",(m.load)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (m) != "undefined") {_RecordType("<883,884,39>",(m)); Inst69++; } } catch(e) {}
assertEquals(32767, m.load(0));
for (var i = 1; i < 64; ++i) {
try { if (Inst70 <= 1000 && typeof (i) != "undefined") {_RecordType("<904,905,40>",(i)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (i) != "undefined") {_RecordType("<911,912,40>",(i)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (i) != "undefined") {_RecordType("<921,922,40>",(i)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<928,940,41>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<944,950,41>",(m.load)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (m) != "undefined") {_RecordType("<944,945,41>",(m)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (i) != "undefined") {_RecordType("<951,952,41>",(i)); Inst76++; } } catch(e) {}
  assertEquals(0, m.load(i * 2 * 32 * 1024));
}

