var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

var stdlib = this;
try { if (Inst0 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<172,178,5>",(stdlib)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<204,215,6>",(ArrayBuffer)); Inst2++; } } catch(e) {}
var buffer = new ArrayBuffer(64 * 1024);
try { if (Inst1 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<191,197,6>",(buffer)); Inst1++; } } catch(e) {}
var foreign = {}
try { if (Inst3 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<232,239,7>",(foreign)); Inst3++; } } catch(e) {}


try { if (Inst5 <= 1000 && typeof (Module) != "undefined") {_RecordType("<265,271,10>",(Module)); Inst5++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<745,751,34>",(stdlib)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<753,760,34>",(foreign)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (buffer) != "undefined") {_RecordType("<762,768,34>",(buffer)); Inst59++; } } catch(e) {}
var m = (function Module(stdlib, foreign, heap) {
try { if (Inst6 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<272,278,10>",(stdlib)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<280,287,10>",(foreign)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (heap) != "undefined") {_RecordType("<289,293,10>",(heap)); Inst8++; } } catch(e) {}
  "use asm";
try { if (Inst10 <= 1000 && typeof (stdlib.Int16Array) != "undefined") {_RecordType("<328,345,12>",(stdlib.Int16Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<328,334,12>",(stdlib)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (heap) != "undefined") {_RecordType("<346,350,12>",(heap)); Inst12++; } } catch(e) {}
  var MEM16 = new stdlib.Int16Array(heap);
try { if (Inst9 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<316,321,12>",(MEM16)); Inst9++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (load) != "undefined") {_RecordType("<364,368,13>",(load)); Inst13++; } } catch(e) {}
  function load(i) {
try { if (Inst14 <= 1000 && typeof (i) != "undefined") {_RecordType("<369,370,13>",(i)); Inst14++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<382,383,14>",(i)); Inst16++; } } catch(e) {}
    i = i|0;
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<378,379,14>",(i)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (MEM16[i >> 1]) != "undefined") {_RecordType("<395,408,15>",(MEM16[i >> 1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<395,400,15>",(MEM16)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<401,402,15>",(i)); Inst20++; } } catch(e) {}
    i = MEM16[i >> 1]|0;
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<391,392,15>",(i)); Inst17++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<423,424,16>",(i)); Inst21++; } } catch(e) {}
    return i;
  }
try { if (Inst22 <= 1000 && typeof (store) != "undefined") {_RecordType("<441,446,18>",(store)); Inst22++; } } catch(e) {}
  function store(i, v) {
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<447,448,18>",(i)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (v) != "undefined") {_RecordType("<450,451,18>",(v)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<463,464,19>",(i)); Inst26++; } } catch(e) {}
    i = i|0;
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<459,460,19>",(i)); Inst25++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (v) != "undefined") {_RecordType("<476,477,20>",(v)); Inst28++; } } catch(e) {}
    v = v|0;
try { if (Inst27 <= 1000 && typeof (v) != "undefined") {_RecordType("<472,473,20>",(v)); Inst27++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (v) != "undefined") {_RecordType("<501,502,21>",(v)); Inst32++; } } catch(e) {}
    MEM16[i >> 1] = v;
try { if (Inst29 <= 1000 && typeof (MEM16[i >> 1]) != "undefined") {_RecordType("<485,498,21>",(MEM16[i >> 1])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<485,490,21>",(MEM16)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<491,492,21>",(i)); Inst31++; } } catch(e) {}
  }
try { if (Inst33 <= 1000 && typeof (load8) != "undefined") {_RecordType("<519,524,23>",(load8)); Inst33++; } } catch(e) {}
  function load8(i) {
try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<525,526,23>",(i)); Inst34++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (i) != "undefined") {_RecordType("<538,539,24>",(i)); Inst36++; } } catch(e) {}
    i = i|0;
try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<534,535,24>",(i)); Inst35++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (MEM16[i + 8 >> 1]) != "undefined") {_RecordType("<551,568,25>",(MEM16[i + 8 >> 1])); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<551,556,25>",(MEM16)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<557,558,25>",(i)); Inst40++; } } catch(e) {}
    i = MEM16[i + 8 >> 1]|0;
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<547,548,25>",(i)); Inst37++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (i) != "undefined") {_RecordType("<583,584,26>",(i)); Inst41++; } } catch(e) {}
    return i;
  }
try { if (Inst42 <= 1000 && typeof (store8) != "undefined") {_RecordType("<601,607,28>",(store8)); Inst42++; } } catch(e) {}
  function store8(i, v) {
try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<608,609,28>",(i)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (v) != "undefined") {_RecordType("<611,612,28>",(v)); Inst44++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (i) != "undefined") {_RecordType("<624,625,29>",(i)); Inst46++; } } catch(e) {}
    i = i|0;
try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<620,621,29>",(i)); Inst45++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (v) != "undefined") {_RecordType("<637,638,30>",(v)); Inst48++; } } catch(e) {}
    v = v|0;
try { if (Inst47 <= 1000 && typeof (v) != "undefined") {_RecordType("<633,634,30>",(v)); Inst47++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (v) != "undefined") {_RecordType("<666,667,31>",(v)); Inst52++; } } catch(e) {}
    MEM16[i + 8 >> 1] = v;
try { if (Inst49 <= 1000 && typeof (MEM16[i + 8 >> 1]) != "undefined") {_RecordType("<646,663,31>",(MEM16[i + 8 >> 1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (MEM16) != "undefined") {_RecordType("<646,651,31>",(MEM16)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (i) != "undefined") {_RecordType("<652,653,31>",(i)); Inst51++; } } catch(e) {}
  }
try { if (Inst53 <= 1000 && typeof (load) != "undefined") {_RecordType("<690,694,33>",(load)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (store) != "undefined") {_RecordType("<703,708,33>",(store)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (load8) != "undefined") {_RecordType("<717,722,33>",(load8)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (store8) != "undefined") {_RecordType("<732,738,33>",(store8)); Inst56++; } } catch(e) {}
  return { load: load, store: store, load8: load8, store8: store8 };
})(stdlib, foreign, buffer);
try { if (Inst4 <= 1000 && typeof (m) != "undefined") {_RecordType("<251,252,10>",(m)); Inst4++; } } catch(e) {}

try { if (Inst60 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<772,784,36>",(assertEquals)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<788,794,36>",(m.load)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (m) != "undefined") {_RecordType("<788,789,36>",(m)); Inst62++; } } catch(e) {}
assertEquals(0, m.load(-8));
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<801,813,37>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (m.load8) != "undefined") {_RecordType("<817,824,37>",(m.load8)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (m) != "undefined") {_RecordType("<817,818,37>",(m)); Inst65++; } } catch(e) {}
assertEquals(0, m.load8(-16));
try { if (Inst66 <= 1000 && typeof (m.store) != "undefined") {_RecordType("<832,839,38>",(m.store)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (m) != "undefined") {_RecordType("<832,833,38>",(m)); Inst67++; } } catch(e) {}
m.store(0, 42);
try { if (Inst68 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<848,860,39>",(assertEquals)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (m.load8) != "undefined") {_RecordType("<865,872,39>",(m.load8)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (m) != "undefined") {_RecordType("<865,866,39>",(m)); Inst70++; } } catch(e) {}
assertEquals(42, m.load8(-8));
try { if (Inst71 <= 1000 && typeof (m.store8) != "undefined") {_RecordType("<879,887,40>",(m.store8)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (m) != "undefined") {_RecordType("<879,880,40>",(m)); Inst72++; } } catch(e) {}
m.store8(-8, 99);
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<897,909,41>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (m.load) != "undefined") {_RecordType("<914,920,41>",(m.load)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (m) != "undefined") {_RecordType("<914,915,41>",(m)); Inst75++; } } catch(e) {}
assertEquals(99, m.load(0));
try { if (Inst76 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<926,938,42>",(assertEquals)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (m.load8) != "undefined") {_RecordType("<943,950,42>",(m.load8)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (m) != "undefined") {_RecordType("<943,944,42>",(m)); Inst78++; } } catch(e) {}
assertEquals(99, m.load8(-8));

