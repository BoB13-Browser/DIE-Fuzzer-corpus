var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

try { if (Inst0 <= 1000 && typeof (Module) != "undefined") {_RecordType("<177,183,5>",(Module)); Inst0++; } } catch(e) {}
function Module(stdlib, foreign, heap) {
try { if (Inst1 <= 1000 && typeof (stdlib) != "undefined") {_RecordType("<184,190,5>",(stdlib)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (foreign) != "undefined") {_RecordType("<192,199,5>",(foreign)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (heap) != "undefined") {_RecordType("<201,205,5>",(heap)); Inst3++; } } catch(e) {}
  "use asm";
try { if (Inst4 <= 1000 && typeof (f1) != "undefined") {_RecordType("<233,235,7>",(f1)); Inst4++; } } catch(e) {}
  function f1(i) {
try { if (Inst5 <= 1000 && typeof (i) != "undefined") {_RecordType("<236,237,7>",(i)); Inst5++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<249,250,8>",(i)); Inst7++; } } catch(e) {}
    i = i|0;
try { if (Inst6 <= 1000 && typeof (i) != "undefined") {_RecordType("<245,246,8>",(i)); Inst6++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<265,266,9>",(i)); Inst8++; } } catch(e) {}
    return i % 3;
  }
try { if (Inst9 <= 1000 && typeof (f2) != "undefined") {_RecordType("<287,289,11>",(f2)); Inst9++; } } catch(e) {}
  function f2(i) {
try { if (Inst10 <= 1000 && typeof (i) != "undefined") {_RecordType("<290,291,11>",(i)); Inst10++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<303,304,12>",(i)); Inst12++; } } catch(e) {}
    i = i|0;
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<299,300,12>",(i)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<319,320,13>",(i)); Inst13++; } } catch(e) {}
    return i % 9;
  }
try { if (Inst14 <= 1000 && typeof (f3) != "undefined") {_RecordType("<341,343,15>",(f3)); Inst14++; } } catch(e) {}
  function f3(i) {
try { if (Inst15 <= 1000 && typeof (i) != "undefined") {_RecordType("<344,345,15>",(i)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (i) != "undefined") {_RecordType("<357,358,16>",(i)); Inst17++; } } catch(e) {}
    i = i|0;
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<353,354,16>",(i)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (i) != "undefined") {_RecordType("<373,374,17>",(i)); Inst18++; } } catch(e) {}
    return i % 1024;
  }
try { if (Inst19 <= 1000 && typeof (f4) != "undefined") {_RecordType("<398,400,19>",(f4)); Inst19++; } } catch(e) {}
  function f4(i) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<401,402,19>",(i)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (i) != "undefined") {_RecordType("<414,415,20>",(i)); Inst22++; } } catch(e) {}
    i = i|0;
try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<410,411,20>",(i)); Inst21++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<430,431,21>",(i)); Inst23++; } } catch(e) {}
    return i % 3133335;
  }
try { if (Inst24 <= 1000 && typeof (f1) != "undefined") {_RecordType("<462,464,23>",(f1)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f2) != "undefined") {_RecordType("<470,472,23>",(f2)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f3) != "undefined") {_RecordType("<478,480,23>",(f3)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f4) != "undefined") {_RecordType("<486,488,23>",(f4)); Inst27++; } } catch(e) {}
  return { f1: f1, f2: f2, f3: f3, f4: f4 };
}

try { if (Inst29 <= 1000 && typeof (Module) != "undefined") {_RecordType("<503,509,26>",(Module)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ArrayBuffer) != "undefined") {_RecordType("<524,535,26>",(ArrayBuffer)); Inst30++; } } catch(e) {}
var m = Module(this, {}, new ArrayBuffer(1024));
try { if (Inst28 <= 1000 && typeof (m) != "undefined") {_RecordType("<499,500,26>",(m)); Inst28++; } } catch(e) {}

for (var i = -2147483648; i < 2147483648; i += 3999773) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<554,555,28>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<571,572,28>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<587,588,28>",(i)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<605,617,29>",(assertEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<618,619,29>",(i)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (m.f1) != "undefined") {_RecordType("<625,629,29>",(m.f1)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (m) != "undefined") {_RecordType("<625,626,29>",(m)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<630,631,29>",(i)); Inst38++; } } catch(e) {}
  assertEquals(i % 3, m.f1(i));
try { if (Inst39 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<637,649,30>",(assertEquals)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (i) != "undefined") {_RecordType("<650,651,30>",(i)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (m.f2) != "undefined") {_RecordType("<657,661,30>",(m.f2)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (m) != "undefined") {_RecordType("<657,658,30>",(m)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (i) != "undefined") {_RecordType("<662,663,30>",(i)); Inst43++; } } catch(e) {}
  assertEquals(i % 9, m.f2(i));
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<669,681,31>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (i) != "undefined") {_RecordType("<682,683,31>",(i)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (m.f3) != "undefined") {_RecordType("<692,696,31>",(m.f3)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (m) != "undefined") {_RecordType("<692,693,31>",(m)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (i) != "undefined") {_RecordType("<697,698,31>",(i)); Inst48++; } } catch(e) {}
  assertEquals(i % 1024, m.f3(i));
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<704,716,32>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (i) != "undefined") {_RecordType("<717,718,32>",(i)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (m.f4) != "undefined") {_RecordType("<730,734,32>",(m.f4)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (m) != "undefined") {_RecordType("<730,731,32>",(m)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (i) != "undefined") {_RecordType("<735,736,32>",(i)); Inst53++; } } catch(e) {}
  assertEquals(i % 3133335, m.f4(i));
}

