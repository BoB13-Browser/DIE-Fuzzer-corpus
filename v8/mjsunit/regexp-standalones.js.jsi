var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/* Many of the Mozilla regexp tests used 'toSource' to test their
 * results.  Since we don't currently support toSource, those tests
 * are disabled and standalone versions are included here.
 */

// Tests from ecma_3/RegExp/regress-78156.js
var string = 'aaa\n789\r\nccc\r\n345';
try { if (Inst0 <= 1000 && typeof (string) != "undefined") {_RecordType("<1845,1851,34>",(string)); Inst0++; } } catch(e) {}
var pattern = /^\d/gm;
try { if (Inst1 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<1884,1891,35>",(pattern)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<1916,1928,36>",(string.match)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (string) != "undefined") {_RecordType("<1916,1922,36>",(string)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<1929,1936,36>",(pattern)); Inst5++; } } catch(e) {}
var result = string.match(pattern);
try { if (Inst2 <= 1000 && typeof (result) != "undefined") {_RecordType("<1907,1913,36>",(result)); Inst2++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1939,1951,37>",(assertEquals)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<1955,1968,37>",(result.length)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (result) != "undefined") {_RecordType("<1955,1961,37>",(result)); Inst8++; } } catch(e) {}
assertEquals(2, result.length, "1");
try { if (Inst9 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1976,1988,38>",(assertEquals)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<1994,2003,38>",(result[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (result) != "undefined") {_RecordType("<1994,2000,38>",(result)); Inst11++; } } catch(e) {}
assertEquals('7', result[0], "2");
try { if (Inst12 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2011,2023,39>",(assertEquals)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<2029,2038,39>",(result[1])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (result) != "undefined") {_RecordType("<2029,2035,39>",(result)); Inst14++; } } catch(e) {}
assertEquals('3', result[1], "3");

pattern = /\d$/gm;
try { if (Inst15 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2047,2054,41>",(pattern)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<2075,2087,42>",(string.match)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (string) != "undefined") {_RecordType("<2075,2081,42>",(string)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2088,2095,42>",(pattern)); Inst19++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst16 <= 1000 && typeof (result) != "undefined") {_RecordType("<2066,2072,42>",(result)); Inst16++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2098,2110,43>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<2114,2127,43>",(result.length)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (result) != "undefined") {_RecordType("<2114,2120,43>",(result)); Inst22++; } } catch(e) {}
assertEquals(2, result.length, "4");
try { if (Inst23 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2135,2147,44>",(assertEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<2153,2162,44>",(result[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (result) != "undefined") {_RecordType("<2153,2159,44>",(result)); Inst25++; } } catch(e) {}
assertEquals('9', result[0], "5");
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2170,2182,45>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (result[1]) != "undefined") {_RecordType("<2188,2197,45>",(result[1])); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (result) != "undefined") {_RecordType("<2188,2194,45>",(result)); Inst28++; } } catch(e) {}
assertEquals('5', result[1], "6");

string = 'aaa\n789\r\nccc\r\nddd';
try { if (Inst29 <= 1000 && typeof (string) != "undefined") {_RecordType("<2206,2212,47>",(string)); Inst29++; } } catch(e) {}
pattern = /^\d/gm;
try { if (Inst30 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2241,2248,48>",(pattern)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<2269,2281,49>",(string.match)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (string) != "undefined") {_RecordType("<2269,2275,49>",(string)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2282,2289,49>",(pattern)); Inst34++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst31 <= 1000 && typeof (result) != "undefined") {_RecordType("<2260,2266,49>",(result)); Inst31++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2292,2304,50>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<2308,2321,50>",(result.length)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (result) != "undefined") {_RecordType("<2308,2314,50>",(result)); Inst37++; } } catch(e) {}
assertEquals(1, result.length, "7");
try { if (Inst38 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2329,2341,51>",(assertEquals)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<2347,2356,51>",(result[0])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (result) != "undefined") {_RecordType("<2347,2353,51>",(result)); Inst40++; } } catch(e) {}
assertEquals('7', result[0], "8");

pattern = /\d$/gm;
try { if (Inst41 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2365,2372,53>",(pattern)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<2393,2405,54>",(string.match)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (string) != "undefined") {_RecordType("<2393,2399,54>",(string)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2406,2413,54>",(pattern)); Inst45++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst42 <= 1000 && typeof (result) != "undefined") {_RecordType("<2384,2390,54>",(result)); Inst42++; } } catch(e) {}
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2416,2428,55>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<2432,2445,55>",(result.length)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (result) != "undefined") {_RecordType("<2432,2438,55>",(result)); Inst48++; } } catch(e) {}
assertEquals(1, result.length, "9");
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2453,2465,56>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<2471,2480,56>",(result[0])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<2471,2477,56>",(result)); Inst51++; } } catch(e) {}
assertEquals('9', result[0], "10");

// Tests from ecma_3/RegExp/regress-72964.js
pattern = /[\S]+/;
try { if (Inst52 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2535,2542,59>",(pattern)); Inst52++; } } catch(e) {}
string = '\u00BF\u00CD\u00BB\u00A7';
try { if (Inst53 <= 1000 && typeof (string) != "undefined") {_RecordType("<2554,2560,60>",(string)); Inst53++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<2600,2612,61>",(string.match)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (string) != "undefined") {_RecordType("<2600,2606,61>",(string)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2613,2620,61>",(pattern)); Inst57++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst54 <= 1000 && typeof (result) != "undefined") {_RecordType("<2591,2597,61>",(result)); Inst54++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2623,2635,62>",(assertEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<2639,2652,62>",(result.length)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (result) != "undefined") {_RecordType("<2639,2645,62>",(result)); Inst60++; } } catch(e) {}
assertEquals(1, result.length, "11");
try { if (Inst61 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2661,2673,63>",(assertEquals)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (string) != "undefined") {_RecordType("<2674,2680,63>",(string)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<2682,2691,63>",(result[0])); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (result) != "undefined") {_RecordType("<2682,2688,63>",(result)); Inst64++; } } catch(e) {}
assertEquals(string, result[0], "12");

string = '\u00BF\u00CD \u00BB\u00A7';
try { if (Inst65 <= 1000 && typeof (string) != "undefined") {_RecordType("<2701,2707,65>",(string)); Inst65++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<2748,2760,66>",(string.match)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (string) != "undefined") {_RecordType("<2748,2754,66>",(string)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2761,2768,66>",(pattern)); Inst69++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst66 <= 1000 && typeof (result) != "undefined") {_RecordType("<2739,2745,66>",(result)); Inst66++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2771,2783,67>",(assertEquals)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<2787,2800,67>",(result.length)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (result) != "undefined") {_RecordType("<2787,2793,67>",(result)); Inst72++; } } catch(e) {}
assertEquals(1, result.length, "13");
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2809,2821,68>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<2838,2847,68>",(result[0])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (result) != "undefined") {_RecordType("<2838,2844,68>",(result)); Inst75++; } } catch(e) {}
assertEquals('\u00BF\u00CD', result[0], "14");

string = '\u4e00\uac00\u4e03\u4e00';
try { if (Inst76 <= 1000 && typeof (string) != "undefined") {_RecordType("<2857,2863,70>",(string)); Inst76++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<2903,2915,71>",(string.match)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (string) != "undefined") {_RecordType("<2903,2909,71>",(string)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<2916,2923,71>",(pattern)); Inst80++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst77 <= 1000 && typeof (result) != "undefined") {_RecordType("<2894,2900,71>",(result)); Inst77++; } } catch(e) {}
try { if (Inst81 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2926,2938,72>",(assertEquals)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<2942,2955,72>",(result.length)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (result) != "undefined") {_RecordType("<2942,2948,72>",(result)); Inst83++; } } catch(e) {}
assertEquals(1, result.length, "15");
try { if (Inst84 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2964,2976,73>",(assertEquals)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (string) != "undefined") {_RecordType("<2977,2983,73>",(string)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<2985,2994,73>",(result[0])); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (result) != "undefined") {_RecordType("<2985,2991,73>",(result)); Inst87++; } } catch(e) {}
assertEquals(string, result[0], "16");

string = '\u4e00\uac00 \u4e03\u4e00';
try { if (Inst88 <= 1000 && typeof (string) != "undefined") {_RecordType("<3004,3010,75>",(string)); Inst88++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (string.match) != "undefined") {_RecordType("<3051,3063,76>",(string.match)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (string) != "undefined") {_RecordType("<3051,3057,76>",(string)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (pattern) != "undefined") {_RecordType("<3064,3071,76>",(pattern)); Inst92++; } } catch(e) {}
result = string.match(pattern);
try { if (Inst89 <= 1000 && typeof (result) != "undefined") {_RecordType("<3042,3048,76>",(result)); Inst89++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3074,3086,77>",(assertEquals)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (result.length) != "undefined") {_RecordType("<3090,3103,77>",(result.length)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (result) != "undefined") {_RecordType("<3090,3096,77>",(result)); Inst95++; } } catch(e) {}
assertEquals(1, result.length, "17");
try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3112,3124,78>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (result[0]) != "undefined") {_RecordType("<3141,3150,78>",(result[0])); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (result) != "undefined") {_RecordType("<3141,3147,78>",(result)); Inst98++; } } catch(e) {}
assertEquals('\u4e00\uac00', result[0], "18");

