var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

// Tests how debugger can step over not necessarily in the top frame.

// Simple 3 functions, that protocol their execution state in global
// variable state.
var state;
try { if (Inst3 <= 1000 && typeof (state) != "undefined") {_RecordType("<1886,1891,36>",(state)); Inst3++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<1903,1904,38>",(f)); Inst4++; } } catch(e) {}
function f() {
  var a = 1978;
try { if (Inst5 <= 1000 && typeof (a) != "undefined") {_RecordType("<1915,1916,39>",(a)); Inst5++; } } catch(e) {}
  for (state[2] = 0; state[2] < 3; state[2]++) {
try { if (Inst6 <= 1000 && typeof (state[2]) != "undefined") {_RecordType("<1932,1940,40>",(state[2])); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (state) != "undefined") {_RecordType("<1932,1937,40>",(state)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (state[2]) != "undefined") {_RecordType("<1946,1954,40>",(state[2])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (state) != "undefined") {_RecordType("<1946,1951,40>",(state)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (state[2]) != "undefined") {_RecordType("<1960,1968,40>",(state[2])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (state) != "undefined") {_RecordType("<1960,1965,40>",(state)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (String) != "undefined") {_RecordType("<1983,1989,41>",(String)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (a) != "undefined") {_RecordType("<1990,1991,41>",(a)); Inst13++; } } catch(e) {}
    void String(a);
  }
}
try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<2009,2010,44>",(g)); Inst14++; } } catch(e) {}
function g() {
  for (state[1] = 0; state[1] < 3; state[1]++) {
try { if (Inst15 <= 1000 && typeof (state[1]) != "undefined") {_RecordType("<2022,2030,45>",(state[1])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (state) != "undefined") {_RecordType("<2022,2027,45>",(state)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (state[1]) != "undefined") {_RecordType("<2036,2044,45>",(state[1])); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (state) != "undefined") {_RecordType("<2036,2041,45>",(state)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (state[1]) != "undefined") {_RecordType("<2050,2058,45>",(state[1])); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (state) != "undefined") {_RecordType("<2050,2055,45>",(state)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<2068,2069,46>",(f)); Inst21++; } } catch(e) {}
    f();
  }
}
try { if (Inst22 <= 1000 && typeof (h) != "undefined") {_RecordType("<2088,2089,49>",(h)); Inst22++; } } catch(e) {}
function h() {
  state = [-1, -1, -1];
try { if (Inst23 <= 1000 && typeof (state) != "undefined") {_RecordType("<2096,2101,50>",(state)); Inst23++; } } catch(e) {}
  for (state[0] = 0; state[0] < 3; state[0]++) {
try { if (Inst24 <= 1000 && typeof (state[0]) != "undefined") {_RecordType("<2125,2133,51>",(state[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (state) != "undefined") {_RecordType("<2125,2130,51>",(state)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (state[0]) != "undefined") {_RecordType("<2139,2147,51>",(state[0])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (state) != "undefined") {_RecordType("<2139,2144,51>",(state)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (state[0]) != "undefined") {_RecordType("<2153,2161,51>",(state[0])); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (state) != "undefined") {_RecordType("<2153,2158,51>",(state)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (g) != "undefined") {_RecordType("<2171,2172,52>",(g)); Inst30++; } } catch(e) {}
    g();
  }
}

try { if (Inst31 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<2192,2200,56>",(TestCase)); Inst31++; } } catch(e) {}
function TestCase(expected_final_state) {
try { if (Inst32 <= 1000 && typeof (expected_final_state) != "undefined") {_RecordType("<2201,2221,56>",(expected_final_state)); Inst32++; } } catch(e) {}
  var listener_exception = null;
try { if (Inst33 <= 1000 && typeof (listener_exception) != "undefined") {_RecordType("<2231,2249,57>",(listener_exception)); Inst33++; } } catch(e) {}
  var state_snapshot;
try { if (Inst34 <= 1000 && typeof (state_snapshot) != "undefined") {_RecordType("<2264,2278,58>",(state_snapshot)); Inst34++; } } catch(e) {}
  var listener_state;
try { if (Inst35 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2286,2300,59>",(listener_state)); Inst35++; } } catch(e) {}
  var bp;
try { if (Inst36 <= 1000 && typeof (bp) != "undefined") {_RecordType("<2308,2310,60>",(bp)); Inst36++; } } catch(e) {}

try { if (Inst37 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2324,2332,62>",(listener)); Inst37++; } } catch(e) {}
  function listener(event, exec_state, event_data, data) {
try { if (Inst38 <= 1000 && typeof (event) != "undefined") {_RecordType("<2333,2338,62>",(event)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2340,2350,62>",(exec_state)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2352,2362,62>",(event_data)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (data) != "undefined") {_RecordType("<2364,2368,62>",(data)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (print) != "undefined") {_RecordType("<2376,2381,63>",(print)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (event) != "undefined") {_RecordType("<2391,2396,63>",(event)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2401,2415,63>",(listener_state)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (exec_state.frame(0).sourceLineText) != "undefined") {_RecordType("<2432,2466,64>",(exec_state.frame(0).sourceLineText)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<2432,2448,64>",(exec_state.frame)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2432,2442,64>",(exec_state)); Inst47++; } } catch(e) {}
    print("Here ("+event+"/"+listener_state+"): " +
        exec_state.frame(0).sourceLineText());
try { if (Inst71 <= 1000 && typeof (e) != "undefined") {_RecordType("<2914,2915,78>",(e)); Inst71++; } } catch(e) {}
    try {
try { if (Inst48 <= 1000 && typeof (event) != "undefined") {_RecordType("<2491,2496,66>",(event)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<2500,2522,66>",(Debug.DebugEvent.Break)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2500,2516,66>",(Debug.DebugEvent)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2500,2505,66>",(Debug)); Inst51++; } } catch(e) {}
      if (event == Debug.DebugEvent.Break) {
try { if (Inst52 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2538,2552,67>",(listener_state)); Inst52++; } } catch(e) {}
        if (listener_state == 0) {
try { if (Inst53 <= 1000 && typeof (Debug.clearBreakPoint) != "undefined") {_RecordType("<2571,2592,68>",(Debug.clearBreakPoint)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2571,2576,68>",(Debug)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (bp) != "undefined") {_RecordType("<2593,2595,68>",(bp)); Inst55++; } } catch(e) {}
          Debug.clearBreakPoint(bp);
try { if (Inst56 <= 1000 && typeof (exec_state.prepareStep) != "undefined") {_RecordType("<2608,2630,69>",(exec_state.prepareStep)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2608,2618,69>",(exec_state)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Debug.StepAction.StepNext) != "undefined") {_RecordType("<2631,2656,69>",(Debug.StepAction.StepNext)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Debug.StepAction) != "undefined") {_RecordType("<2631,2647,69>",(Debug.StepAction)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2631,2636,69>",(Debug)); Inst60++; } } catch(e) {}
          exec_state.prepareStep(Debug.StepAction.StepNext);
          listener_state = 1;
try { if (Inst61 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2669,2683,70>",(listener_state)); Inst61++; } } catch(e) {}
try { if (Inst62 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2708,2722,71>",(listener_state)); Inst62++; } } catch(e) {}
        } else if (listener_state == 1) {
try { if (Inst64 <= 1000 && typeof (String) != "undefined") {_RecordType("<2758,2764,72>",(String)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (state) != "undefined") {_RecordType("<2765,2770,72>",(state)); Inst65++; } } catch(e) {}
          state_snapshot = String(state);
try { if (Inst63 <= 1000 && typeof (state_snapshot) != "undefined") {_RecordType("<2741,2755,72>",(state_snapshot)); Inst63++; } } catch(e) {}
try { if (Inst66 <= 1000 && typeof (print) != "undefined") {_RecordType("<2783,2788,73>",(print)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (state_snapshot) != "undefined") {_RecordType("<2801,2815,73>",(state_snapshot)); Inst67++; } } catch(e) {}
          print("State: " + state_snapshot);
try { if (Inst68 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2828,2845,74>",(Debug.setListener)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2828,2833,74>",(Debug)); Inst69++; } } catch(e) {}
          Debug.setListener(null);
          listener_state = 2;
try { if (Inst70 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2863,2877,75>",(listener_state)); Inst70++; } } catch(e) {}
        }
      }
    } catch (e) {
try { if (Inst73 <= 1000 && typeof (e) != "undefined") {_RecordType("<2946,2947,79>",(e)); Inst73++; } } catch(e) {}
      listener_exception = e;
try { if (Inst72 <= 1000 && typeof (listener_exception) != "undefined") {_RecordType("<2925,2943,79>",(listener_exception)); Inst72++; } } catch(e) {}
    }
  }


  // Add the debug event listener.
  listener_state = 0;
try { if (Inst74 <= 1000 && typeof (listener_state) != "undefined") {_RecordType("<2998,3012,85>",(listener_state)); Inst74++; } } catch(e) {}
try { if (Inst75 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<3020,3037,86>",(Debug.setListener)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3020,3025,86>",(Debug)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (listener) != "undefined") {_RecordType("<3038,3046,86>",(listener)); Inst77++; } } catch(e) {}
  Debug.setListener(listener);
try { if (Inst79 <= 1000 && typeof (Debug.setBreakPoint) != "undefined") {_RecordType("<3056,3075,87>",(Debug.setBreakPoint)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3056,3061,87>",(Debug)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (f) != "undefined") {_RecordType("<3076,3077,87>",(f)); Inst81++; } } catch(e) {}
  bp = Debug.setBreakPoint(f, 1);
try { if (Inst78 <= 1000 && typeof (bp) != "undefined") {_RecordType("<3051,3053,87>",(bp)); Inst78++; } } catch(e) {}

try { if (Inst82 <= 1000 && typeof (h) != "undefined") {_RecordType("<3086,3087,89>",(h)); Inst82++; } } catch(e) {}
  h();
try { if (Inst83 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<3093,3110,90>",(Debug.setListener)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3093,3098,90>",(Debug)); Inst84++; } } catch(e) {}
  Debug.setListener(null);
try { if (Inst85 <= 1000 && typeof (listener_exception) != "undefined") {_RecordType("<3124,3142,91>",(listener_exception)); Inst85++; } } catch(e) {}
  if (listener_exception !== null) {
try { if (Inst86 <= 1000 && typeof (print) != "undefined") {_RecordType("<3159,3164,92>",(print)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (listener_exception) != "undefined") {_RecordType("<3188,3206,92>",(listener_exception)); Inst87++; } } catch(e) {}
    print("Exception caught: " + listener_exception);
try { if (Inst88 <= 1000 && typeof (assertUnreachable) != "undefined") {_RecordType("<3213,3230,93>",(assertUnreachable)); Inst88++; } } catch(e) {}
    assertUnreachable();
  }

try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3241,3253,96>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (expected_final_state) != "undefined") {_RecordType("<3254,3274,96>",(expected_final_state)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (state_snapshot) != "undefined") {_RecordType("<3276,3290,96>",(state_snapshot)); Inst91++; } } catch(e) {}
  assertEquals(expected_final_state, state_snapshot);
}


// Warm-up -- make sure all is compiled and ready for breakpoint.
try { if (Inst92 <= 1000 && typeof (h) != "undefined") {_RecordType("<3363,3364,101>",(h)); Inst92++; } } catch(e) {}
h();

try { if (Inst93 <= 1000 && typeof (TestCase) != "undefined") {_RecordType("<3369,3377,103>",(TestCase)); Inst93++; } } catch(e) {}
TestCase("0,0,-1");

