var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug

// The functions used for testing backtraces.
try { if (Inst0 <= 1000 && typeof (Point) != "undefined") {_RecordType("<1688,1693,31>",(Point)); Inst0++; } } catch(e) {}
function Point(x, y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1694,1695,31>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<1697,1698,31>",(y)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1713,1714,32>",(x)); Inst4++; } } catch(e) {}
  this.x = x;
try { if (Inst3 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1704,1710,32>",(this.x)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (y) != "undefined") {_RecordType("<1727,1728,33>",(y)); Inst6++; } } catch(e) {}
  this.y = y;
try { if (Inst5 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<1718,1724,33>",(this.y)); Inst5++; } } catch(e) {}
};

Point.prototype.distanceTo = function(p) {
try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<1772,1773,36>",(p)); Inst10++; } } catch(e) {}
  debugger;
try { if (Inst11 <= 1000 && typeof (Math.sqrt) != "undefined") {_RecordType("<1798,1807,38>",(Math.sqrt)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1798,1802,38>",(Math)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<1808,1816,38>",(Math.pow)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1808,1812,38>",(Math)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1817,1825,38>",(Math.abs)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1817,1821,38>",(Math)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<1826,1832,38>",(this.x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (p.x) != "undefined") {_RecordType("<1835,1838,38>",(p.x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (p) != "undefined") {_RecordType("<1835,1836,38>",(p)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Math.pow) != "undefined") {_RecordType("<1846,1854,38>",(Math.pow)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1846,1850,38>",(Math)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Math.abs) != "undefined") {_RecordType("<1855,1863,38>",(Math.abs)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1855,1859,38>",(Math)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (this.y) != "undefined") {_RecordType("<1864,1870,38>",(this.y)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (p.y) != "undefined") {_RecordType("<1873,1876,38>",(p.y)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (p) != "undefined") {_RecordType("<1873,1874,38>",(p)); Inst26++; } } catch(e) {}
  return Math.sqrt(Math.pow(Math.abs(this.x - p.x), 2) + Math.pow(Math.abs(this.y - p.y), 2))
}
try { if (Inst7 <= 1000 && typeof (Point.prototype.distanceTo) != "undefined") {_RecordType("<1734,1760,36>",(Point.prototype.distanceTo)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Point.prototype) != "undefined") {_RecordType("<1734,1749,36>",(Point.prototype)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Point) != "undefined") {_RecordType("<1734,1739,36>",(Point)); Inst9++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (Point) != "undefined") {_RecordType("<1895,1900,41>",(Point)); Inst28++; } } catch(e) {}
p1 = new Point(1,1);
try { if (Inst27 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1886,1888,41>",(p1)); Inst27++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (Point) != "undefined") {_RecordType("<1916,1921,42>",(Point)); Inst30++; } } catch(e) {}
p2 = new Point(2,2);
try { if (Inst29 <= 1000 && typeof (p2) != "undefined") {_RecordType("<1907,1909,42>",(p2)); Inst29++; } } catch(e) {}

p1.distanceTo = function(p) {
try { if (Inst33 <= 1000 && typeof (p) != "undefined") {_RecordType("<1954,1955,44>",(p)); Inst33++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (p.distanceTo) != "undefined") {_RecordType("<1968,1980,45>",(p.distanceTo)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (p) != "undefined") {_RecordType("<1968,1969,45>",(p)); Inst35++; } } catch(e) {}
  return p.distanceTo(this);
}
try { if (Inst31 <= 1000 && typeof (p1.distanceTo) != "undefined") {_RecordType("<1929,1942,44>",(p1.distanceTo)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (p1) != "undefined") {_RecordType("<1929,1931,44>",(p1)); Inst32++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (distance) != "undefined") {_RecordType("<2000,2008,48>",(distance)); Inst36++; } } catch(e) {}
function distance(p, q) {
try { if (Inst37 <= 1000 && typeof (p) != "undefined") {_RecordType("<2009,2010,48>",(p)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (q) != "undefined") {_RecordType("<2012,2013,48>",(q)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (p.distanceTo) != "undefined") {_RecordType("<2026,2038,49>",(p.distanceTo)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (p) != "undefined") {_RecordType("<2026,2027,49>",(p)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (q) != "undefined") {_RecordType("<2039,2040,49>",(q)); Inst41++; } } catch(e) {}
  return p.distanceTo(q);
}

try { if (Inst42 <= 1000 && typeof (createPoint) != "undefined") {_RecordType("<2055,2066,52>",(createPoint)); Inst42++; } } catch(e) {}
function createPoint(x, y) {
try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<2067,2068,52>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (y) != "undefined") {_RecordType("<2070,2071,52>",(y)); Inst44++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (Point) != "undefined") {_RecordType("<2088,2093,53>",(Point)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<2094,2095,53>",(x)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (y) != "undefined") {_RecordType("<2097,2098,53>",(y)); Inst47++; } } catch(e) {}
  return new Point(x, y);
}

try { if (Inst49 <= 1000 && typeof (distance) != "undefined") {_RecordType("<2111,2119,56>",(distance)); Inst49++; } } catch(e) {}
a=[1,2,distance];
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<2104,2105,56>",(a)); Inst48++; } } catch(e) {}

// Get the Debug object exposed from the debug context global object.
try { if (Inst51 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<2201,2212,59>",(debug.Debug)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (debug) != "undefined") {_RecordType("<2201,2206,59>",(debug)); Inst52++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst50 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2193,2198,59>",(Debug)); Inst50++; } } catch(e) {}

testConstructor = false;  // Flag to control which part of the test is run.
try { if (Inst53 <= 1000 && typeof (testConstructor) != "undefined") {_RecordType("<2214,2229,61>",(testConstructor)); Inst53++; } } catch(e) {}
listenerCalled = false;
try { if (Inst54 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<2290,2304,62>",(listenerCalled)); Inst54++; } } catch(e) {}
exception = false;
try { if (Inst55 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2314,2323,63>",(exception)); Inst55++; } } catch(e) {}

try { if (Inst56 <= 1000 && typeof (safeEval) != "undefined") {_RecordType("<2343,2351,65>",(safeEval)); Inst56++; } } catch(e) {}
function safeEval(code) {
try { if (Inst57 <= 1000 && typeof (code) != "undefined") {_RecordType("<2352,2356,65>",(code)); Inst57++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (e) != "undefined") {_RecordType("<2414,2415,68>",(e)); Inst60++; } } catch(e) {}
  try {
try { if (Inst58 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2379,2383,67>",(eval)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (code) != "undefined") {_RecordType("<2390,2394,67>",(code)); Inst59++; } } catch(e) {}
    return eval('(' + code + ')');
  } catch (e) {
try { if (Inst61 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2430,2439,69>",(undefined)); Inst61++; } } catch(e) {}
    return undefined;
  }
}

try { if (Inst62 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2457,2465,73>",(listener)); Inst62++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst63 <= 1000 && typeof (event) != "undefined") {_RecordType("<2466,2471,73>",(event)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2473,2483,73>",(exec_state)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2485,2495,73>",(event_data)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (data) != "undefined") {_RecordType("<2497,2501,73>",(data)); Inst66++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof (e) != "undefined") {_RecordType("<3688,3689,99>",(e)); Inst102++; } } catch(e) {}
  try {
try { if (Inst67 <= 1000 && typeof (event) != "undefined") {_RecordType("<2519,2524,75>",(event)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<2528,2550,75>",(Debug.DebugEvent.Break)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2528,2544,75>",(Debug.DebugEvent)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2528,2533,75>",(Debug)); Inst70++; } } catch(e) {}
  if (event == Debug.DebugEvent.Break)
  {
try { if (Inst71 <= 1000 && typeof (testConstructor) != "undefined") {_RecordType("<2565,2580,77>",(testConstructor)); Inst71++; } } catch(e) {}
    if (!testConstructor) {
      // The expected backtrace is
      // 0: Call distance on Point where distance is a property on the prototype
      // 1: Call distance on Point where distance is a direct property
      // 2: Call on function an array element 2
      // 3: [anonymous]
try { if (Inst72 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2849,2861,83>",(assertEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (exec_state.frame(0).invocationText) != "undefined") {_RecordType("<2897,2931,83>",(exec_state.frame(0).invocationText)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<2897,2913,83>",(exec_state.frame)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2897,2907,83>",(exec_state)); Inst75++; } } catch(e) {}
      assertEquals("#<Point>.distanceTo(p=#<Point>)", exec_state.frame(0).invocationText());
try { if (Inst76 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2942,2954,84>",(assertEquals)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (exec_state.frame(1).invocationText) != "undefined") {_RecordType("<2990,3024,84>",(exec_state.frame(1).invocationText)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<2990,3006,84>",(exec_state.frame)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2990,3000,84>",(exec_state)); Inst79++; } } catch(e) {}
      assertEquals("#<Point>.distanceTo(p=#<Point>)", exec_state.frame(1).invocationText());
try { if (Inst80 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3035,3047,85>",(assertEquals)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (exec_state.frame(2).invocationText) != "undefined") {_RecordType("<3101,3135,85>",(exec_state.frame(2).invocationText)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3101,3117,85>",(exec_state.frame)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3101,3111,85>",(exec_state)); Inst83++; } } catch(e) {}
      assertEquals("#<Array>[2](aka distance)(p=#<Point>, q=#<Point>)", exec_state.frame(2).invocationText());
try { if (Inst84 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3146,3158,86>",(assertEquals)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (exec_state.frame(3).invocationText) != "undefined") {_RecordType("<3176,3210,86>",(exec_state.frame(3).invocationText)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3176,3192,86>",(exec_state.frame)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3176,3186,86>",(exec_state)); Inst87++; } } catch(e) {}
      assertEquals("[anonymous]()", exec_state.frame(3).invocationText());
      listenerCalled = true;
try { if (Inst88 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<3221,3235,87>",(listenerCalled)); Inst88++; } } catch(e) {}
    } else {
      // The expected backtrace is
      // 0: Call Point constructor
      // 1: Call on global function createPoint
      // 2: [anonymous]
try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3405,3417,93>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (exec_state.frame(0).invocationText) != "undefined") {_RecordType("<3441,3475,93>",(exec_state.frame(0).invocationText)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3441,3457,93>",(exec_state.frame)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3441,3451,93>",(exec_state)); Inst92++; } } catch(e) {}
      assertEquals("new Point(x=0, y=0)", exec_state.frame(0).invocationText());
try { if (Inst93 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3486,3498,94>",(assertEquals)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (exec_state.frame(1).invocationText) != "undefined") {_RecordType("<3524,3558,94>",(exec_state.frame(1).invocationText)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3524,3540,94>",(exec_state.frame)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3524,3534,94>",(exec_state)); Inst96++; } } catch(e) {}
      assertEquals("createPoint(x=0, y=0)", exec_state.frame(1).invocationText());
try { if (Inst97 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3569,3581,95>",(assertEquals)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (exec_state.frame(2).invocationText) != "undefined") {_RecordType("<3599,3633,95>",(exec_state.frame(2).invocationText)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<3599,3615,95>",(exec_state.frame)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3599,3609,95>",(exec_state)); Inst100++; } } catch(e) {}
      assertEquals("[anonymous]()", exec_state.frame(2).invocationText());
      listenerCalled = true;
try { if (Inst101 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<3644,3658,96>",(listenerCalled)); Inst101++; } } catch(e) {}
    }
  }
  } catch (e) {
try { if (Inst104 <= 1000 && typeof (e) != "undefined") {_RecordType("<3709,3710,100>",(e)); Inst104++; } } catch(e) {}
    exception = e
try { if (Inst103 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3697,3706,100>",(exception)); Inst103++; } } catch(e) {}
  };
};

// Add the debug event listener.
try { if (Inst105 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<3753,3770,105>",(Debug.setListener)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3753,3758,105>",(Debug)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (listener) != "undefined") {_RecordType("<3771,3779,105>",(listener)); Inst107++; } } catch(e) {}
Debug.setListener(listener);

// Set a break point and call to invoke the debug event listener.
try { if (Inst108 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<3849,3853,108>",(a[2])); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (a) != "undefined") {_RecordType("<3849,3850,108>",(a)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (p1) != "undefined") {_RecordType("<3854,3856,108>",(p1)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (p2) != "undefined") {_RecordType("<3858,3860,108>",(p2)); Inst111++; } } catch(e) {}
a[2](p1, p2)

// Make sure that the debug event listener vas invoked.
try { if (Inst112 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3919,3929,111>",(assertTrue)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<3930,3944,111>",(listenerCalled)); Inst113++; } } catch(e) {}
assertTrue(listenerCalled);
try { if (Inst114 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3947,3958,112>",(assertFalse)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3959,3968,112>",(exception)); Inst115++; } } catch(e) {}
assertFalse(exception, "exception in listener")

// Set a break point and call to invoke the debug event listener.
listenerCalled = false;
try { if (Inst116 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<4062,4076,115>",(listenerCalled)); Inst116++; } } catch(e) {}
testConstructor = true;
try { if (Inst117 <= 1000 && typeof (testConstructor) != "undefined") {_RecordType("<4086,4101,116>",(testConstructor)); Inst117++; } } catch(e) {}
try { if (Inst118 <= 1000 && typeof (Debug.setBreakPoint) != "undefined") {_RecordType("<4110,4129,117>",(Debug.setBreakPoint)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<4110,4115,117>",(Debug)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Point) != "undefined") {_RecordType("<4130,4135,117>",(Point)); Inst120++; } } catch(e) {}
Debug.setBreakPoint(Point, 0, 0);
try { if (Inst121 <= 1000 && typeof (createPoint) != "undefined") {_RecordType("<4144,4155,118>",(createPoint)); Inst121++; } } catch(e) {}
createPoint(0, 0);

// Make sure that the debug event listener vas invoked (again).
try { if (Inst122 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4228,4238,121>",(assertTrue)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (listenerCalled) != "undefined") {_RecordType("<4239,4253,121>",(listenerCalled)); Inst123++; } } catch(e) {}
assertTrue(listenerCalled);
try { if (Inst124 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<4256,4267,122>",(assertFalse)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (exception) != "undefined") {_RecordType("<4268,4277,122>",(exception)); Inst125++; } } catch(e) {}
assertFalse(exception, "exception in listener")

