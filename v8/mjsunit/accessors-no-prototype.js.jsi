var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


try { if (Inst0 <= 1000 && typeof (TestGetter) != "undefined") {_RecordType("<179,189,6>",(TestGetter)); Inst0++; } } catch(e) {}
(function TestGetter() {
try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<214,215,8>",(x)); Inst2++; } } catch(e) {}
  var o = {
    get x() {}
  };
try { if (Inst1 <= 1000 && typeof (o) != "undefined") {_RecordType("<200,201,7>",(o)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<239,270,10>",(Object.getOwnPropertyDescriptor)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (Object) != "undefined") {_RecordType("<239,245,10>",(Object)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (o) != "undefined") {_RecordType("<271,272,10>",(o)); Inst6++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(o, 'x');
try { if (Inst3 <= 1000 && typeof (desc) != "undefined") {_RecordType("<232,236,10>",(desc)); Inst3++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<282,294,11>",(assertEquals)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<314,322,11>",(desc.get)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (desc) != "undefined") {_RecordType("<314,318,11>",(desc)); Inst9++; } } catch(e) {}
  assertEquals('function', typeof desc.get);
try { if (Inst10 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<327,338,12>",(assertFalse)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<354,362,12>",(desc.get)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (desc) != "undefined") {_RecordType("<354,358,12>",(desc)); Inst12++; } } catch(e) {}
  assertFalse('prototype' in desc.get);

try { if (Inst13 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<368,380,14>",(assertThrows)); Inst13++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<419,428,16>",(TypeError)); Inst16++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst14 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<402,410,15>",(desc.get)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (desc) != "undefined") {_RecordType("<402,406,15>",(desc)); Inst15++; } } catch(e) {}
    new desc.get();
  }, TypeError);
})();


try { if (Inst17 <= 1000 && typeof (TestSetter) != "undefined") {_RecordType("<449,459,20>",(TestSetter)); Inst17++; } } catch(e) {}
(function TestSetter() {
try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<484,485,22>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (_) != "undefined") {_RecordType("<486,487,22>",(_)); Inst20++; } } catch(e) {}
  var o = {
    set x(_) {}
  };
try { if (Inst18 <= 1000 && typeof (o) != "undefined") {_RecordType("<470,471,21>",(o)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<510,541,24>",(Object.getOwnPropertyDescriptor)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Object) != "undefined") {_RecordType("<510,516,24>",(Object)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (o) != "undefined") {_RecordType("<542,543,24>",(o)); Inst24++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(o, 'x');
try { if (Inst21 <= 1000 && typeof (desc) != "undefined") {_RecordType("<503,507,24>",(desc)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<553,565,25>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<585,593,25>",(desc.set)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (desc) != "undefined") {_RecordType("<585,589,25>",(desc)); Inst27++; } } catch(e) {}
  assertEquals('function', typeof desc.set);
try { if (Inst28 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<598,609,26>",(assertFalse)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<625,633,26>",(desc.set)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (desc) != "undefined") {_RecordType("<625,629,26>",(desc)); Inst30++; } } catch(e) {}
  assertFalse('prototype' in desc.set);

try { if (Inst31 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<639,651,28>",(assertThrows)); Inst31++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<690,699,30>",(TypeError)); Inst34++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst32 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<673,681,29>",(desc.set)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (desc) != "undefined") {_RecordType("<673,677,29>",(desc)); Inst33++; } } catch(e) {}
    new desc.set();
  }, TypeError);
})();


try { if (Inst35 <= 1000 && typeof (TestBoth) != "undefined") {_RecordType("<720,728,34>",(TestBoth)); Inst35++; } } catch(e) {}
(function TestBoth() {
try { if (Inst37 <= 1000 && typeof (x) != "undefined") {_RecordType("<753,754,36>",(x)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<769,770,37>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (_) != "undefined") {_RecordType("<771,772,37>",(_)); Inst39++; } } catch(e) {}
  var o = {
    get x() {},
    set x(_) {}
  };
try { if (Inst36 <= 1000 && typeof (o) != "undefined") {_RecordType("<739,740,35>",(o)); Inst36++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<795,826,39>",(Object.getOwnPropertyDescriptor)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object) != "undefined") {_RecordType("<795,801,39>",(Object)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (o) != "undefined") {_RecordType("<827,828,39>",(o)); Inst43++; } } catch(e) {}
  var desc = Object.getOwnPropertyDescriptor(o, 'x');
try { if (Inst40 <= 1000 && typeof (desc) != "undefined") {_RecordType("<788,792,39>",(desc)); Inst40++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<838,850,40>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<870,878,40>",(desc.get)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (desc) != "undefined") {_RecordType("<870,874,40>",(desc)); Inst46++; } } catch(e) {}
  assertEquals('function', typeof desc.get);
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<883,895,41>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<915,923,41>",(desc.set)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (desc) != "undefined") {_RecordType("<915,919,41>",(desc)); Inst49++; } } catch(e) {}
  assertEquals('function', typeof desc.set);
try { if (Inst50 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<928,939,42>",(assertFalse)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<955,963,42>",(desc.get)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (desc) != "undefined") {_RecordType("<955,959,42>",(desc)); Inst52++; } } catch(e) {}
  assertFalse('prototype' in desc.get);
try { if (Inst53 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<968,979,43>",(assertFalse)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<995,1003,43>",(desc.set)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (desc) != "undefined") {_RecordType("<995,999,43>",(desc)); Inst55++; } } catch(e) {}
  assertFalse('prototype' in desc.set);

try { if (Inst56 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1009,1021,45>",(assertThrows)); Inst56++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1060,1069,47>",(TypeError)); Inst59++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst57 <= 1000 && typeof (desc.get) != "undefined") {_RecordType("<1043,1051,46>",(desc.get)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1043,1047,46>",(desc)); Inst58++; } } catch(e) {}
    new desc.get();
  }, TypeError);
try { if (Inst60 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1074,1086,48>",(assertThrows)); Inst60++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1125,1134,50>",(TypeError)); Inst63++; } } catch(e) {}
  assertThrows(function() {
try { if (Inst61 <= 1000 && typeof (desc.set) != "undefined") {_RecordType("<1108,1116,49>",(desc.set)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (desc) != "undefined") {_RecordType("<1108,1112,49>",(desc)); Inst62++; } } catch(e) {}
    new desc.set();
  }, TypeError);
})();

