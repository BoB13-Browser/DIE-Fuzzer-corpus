var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Test ES5 sections 15.2.3.5 Object.create.
// We do not support nonconfigurable properties on objects so that is not
// tested.  We do test getters, setters, writable, enumerable and value.

// Check that no exceptions are thrown.
try { if (Inst0 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1831,1844,33>",(Object.create)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1831,1837,33>",(Object)); Inst1++; } } catch(e) {}
Object.create(null);
try { if (Inst2 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1852,1865,34>",(Object.create)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1852,1858,34>",(Object)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1872,1881,34>",(undefined)); Inst4++; } } catch(e) {}
Object.create(null, undefined);

// Check that the right exception is thrown.
try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<1986,1987,40>",(e)); Inst8++; } } catch(e) {}
try {
try { if (Inst5 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<1938,1951,38>",(Object.create)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1938,1944,38>",(Object)); Inst6++; } } catch(e) {}
  Object.create(4);
try { if (Inst7 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1958,1968,39>",(assertTrue)); Inst7++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst9 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1993,2003,41>",(assertTrue)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (/Object or null/.test) != "undefined") {_RecordType("<2004,2025,41>",(/Object or null/.test)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<2026,2027,41>",(e)); Inst11++; } } catch(e) {}
  assertTrue(/Object or null/.test(e));
}

try { if (Inst16 <= 1000 && typeof (e) != "undefined") {_RecordType("<2106,2107,48>",(e)); Inst16++; } } catch(e) {}
try {
try { if (Inst12 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2042,2055,45>",(Object.create)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2042,2048,45>",(Object)); Inst13++; } } catch(e) {}
  Object.create("foo");
try { if (Inst14 <= 1000 && typeof (print) != "undefined") {_RecordType("<2066,2071,46>",(print)); Inst14++; } } catch(e) {}
  print(2);
try { if (Inst15 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2078,2088,47>",(assertTrue)); Inst15++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst17 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2113,2123,49>",(assertTrue)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (/Object or null/.test) != "undefined") {_RecordType("<2124,2145,49>",(/Object or null/.test)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (e) != "undefined") {_RecordType("<2146,2147,49>",(e)); Inst19++; } } catch(e) {}
  assertTrue(/Object or null/.test(e));
}

var ctr = 0;
try { if (Inst20 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<2158,2161,52>",(ctr)); Inst20++; } } catch(e) {}
var ctr2 = 0;
try { if (Inst21 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<2171,2175,53>",(ctr2)); Inst21++; } } catch(e) {}
var ctr3 = 0;
try { if (Inst22 <= 1000 && typeof (ctr3) != "undefined") {_RecordType("<2185,2189,54>",(ctr3)); Inst22++; } } catch(e) {}
var ctr4 = 0;
try { if (Inst23 <= 1000 && typeof (ctr4) != "undefined") {_RecordType("<2199,2203,55>",(ctr4)); Inst23++; } } catch(e) {}
var ctr5 = 0;
try { if (Inst24 <= 1000 && typeof (ctr5) != "undefined") {_RecordType("<2213,2217,56>",(ctr5)); Inst24++; } } catch(e) {}
var ctr6 = 1000;
try { if (Inst25 <= 1000 && typeof (ctr6) != "undefined") {_RecordType("<2227,2231,57>",(ctr6)); Inst25++; } } catch(e) {}

try { if (Inst27 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<2276,2279,59>",(ctr)); Inst27++; } } catch(e) {}
var protoFoo = { foo: function() { ctr++; }};
try { if (Inst26 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<2245,2253,59>",(protoFoo)); Inst26++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<2347,2351,60>",(ctr2)); Inst29++; } } catch(e) {}
var fooValue = { foo: { writable: true, value: function() { ctr2++; }}};
try { if (Inst28 <= 1000 && typeof (fooValue) != "undefined") {_RecordType("<2291,2299,60>",(fooValue)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (ctr3) != "undefined") {_RecordType("<2410,2414,61>",(ctr3)); Inst31++; } } catch(e) {}
var fooGetter = { foo: { get: function() { return ctr3++; }}};
try { if (Inst30 <= 1000 && typeof (fooGetter) != "undefined") {_RecordType("<2364,2373,61>",(fooGetter)); Inst30++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (ctr4) != "undefined") {_RecordType("<2473,2477,62>",(ctr4)); Inst33++; } } catch(e) {}
var fooSetter = { foo: { set: function() { return ctr4++; }}};
try { if (Inst32 <= 1000 && typeof (fooSetter) != "undefined") {_RecordType("<2427,2436,62>",(fooSetter)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (ctr3) != "undefined") {_RecordType("<2539,2543,63>",(ctr3)); Inst35++; } } catch(e) {}
var fooAmbiguous = { foo: { get: function() { return ctr3++; },
                            value: 3 }};
try { if (Inst34 <= 1000 && typeof (fooAmbiguous) != "undefined") {_RecordType("<2490,2502,63>",(fooAmbiguous)); Inst34++; } } catch(e) {}

try { if (Inst36 <= 1000 && typeof (valueGet) != "undefined") {_RecordType("<2601,2609,66>",(valueGet)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ctr5) != "undefined") {_RecordType("<2614,2618,66>",(ctr5)); Inst37++; } } catch(e) {}
function valueGet() { ctr5++; return 3 };
try { if (Inst38 <= 1000 && typeof (getterGet) != "undefined") {_RecordType("<2643,2652,67>",(getterGet)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (ctr5) != "undefined") {_RecordType("<2657,2661,67>",(ctr5)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (ctr6) != "undefined") {_RecordType("<2692,2696,67>",(ctr6)); Inst40++; } } catch(e) {}
function getterGet() { ctr5++; return function() { return ctr6++; }; };

// Simple object with prototype, no properties added.
try { if (Inst41 <= 1000 && typeof (Object.create(protoFoo).foo) != "undefined") {_RecordType("<2761,2788,70>",(Object.create(protoFoo).foo)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2761,2774,70>",(Object.create)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2761,2767,70>",(Object)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<2775,2783,70>",(protoFoo)); Inst44++; } } catch(e) {}
Object.create(protoFoo).foo();
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2792,2804,71>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<2808,2811,71>",(ctr)); Inst46++; } } catch(e) {}
assertEquals(1, ctr);

// Simple object with object with prototype, no properties added.
try { if (Inst47 <= 1000 && typeof (Object.create(Object.create(protoFoo)).foo) != "undefined") {_RecordType("<2881,2923,74>",(Object.create(Object.create(protoFoo)).foo)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2881,2894,74>",(Object.create)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2881,2887,74>",(Object)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<2895,2908,74>",(Object.create)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2895,2901,74>",(Object)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<2909,2917,74>",(protoFoo)); Inst52++; } } catch(e) {}
Object.create(Object.create(protoFoo)).foo();
try { if (Inst53 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2927,2939,75>",(assertEquals)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<2943,2946,75>",(ctr)); Inst54++; } } catch(e) {}
assertEquals(2, ctr);

// Add a property foo that returns a function.
try { if (Inst56 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<3005,3018,78>",(Object.create)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3005,3011,78>",(Object)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<3019,3027,78>",(protoFoo)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (fooValue) != "undefined") {_RecordType("<3029,3037,78>",(fooValue)); Inst59++; } } catch(e) {}
var v = Object.create(protoFoo, fooValue);
try { if (Inst55 <= 1000 && typeof (v) != "undefined") {_RecordType("<3001,3002,78>",(v)); Inst55++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (v.foo) != "undefined") {_RecordType("<3040,3045,79>",(v.foo)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (v) != "undefined") {_RecordType("<3040,3041,79>",(v)); Inst61++; } } catch(e) {}
v.foo();
try { if (Inst62 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3049,3061,80>",(assertEquals)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<3065,3068,80>",(ctr)); Inst63++; } } catch(e) {}
assertEquals(2, ctr);
try { if (Inst64 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3071,3083,81>",(assertEquals)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<3087,3091,81>",(ctr2)); Inst65++; } } catch(e) {}
assertEquals(1, ctr2);

// Ensure the property is writable.
v.foo = 42;
try { if (Inst66 <= 1000 && typeof (v.foo) != "undefined") {_RecordType("<3131,3136,84>",(v.foo)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (v) != "undefined") {_RecordType("<3131,3132,84>",(v)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3143,3155,85>",(assertEquals)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (v.foo) != "undefined") {_RecordType("<3160,3165,85>",(v.foo)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (v) != "undefined") {_RecordType("<3160,3161,85>",(v)); Inst70++; } } catch(e) {}
assertEquals(42, v.foo);
try { if (Inst71 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3168,3180,86>",(assertEquals)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<3184,3187,86>",(ctr)); Inst72++; } } catch(e) {}
assertEquals(2, ctr);
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3190,3202,87>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<3206,3210,87>",(ctr2)); Inst74++; } } catch(e) {}
assertEquals(1, ctr2);

// Ensure by default properties are not writable.
try { if (Inst76 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<3268,3281,90>",(Object.create)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3268,3274,90>",(Object)); Inst77++; } } catch(e) {}
v = Object.create(null, { foo: {value: 103}});
try { if (Inst75 <= 1000 && typeof (v) != "undefined") {_RecordType("<3264,3265,90>",(v)); Inst75++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3311,3323,91>",(assertEquals)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (v.foo) != "undefined") {_RecordType("<3329,3334,91>",(v.foo)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (v) != "undefined") {_RecordType("<3329,3330,91>",(v)); Inst80++; } } catch(e) {}
assertEquals(103, v.foo);
v.foo = 42;
try { if (Inst81 <= 1000 && typeof (v.foo) != "undefined") {_RecordType("<3337,3342,92>",(v.foo)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (v) != "undefined") {_RecordType("<3337,3338,92>",(v)); Inst82++; } } catch(e) {}
try { if (Inst83 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3349,3361,93>",(assertEquals)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (v.foo) != "undefined") {_RecordType("<3367,3372,93>",(v.foo)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (v) != "undefined") {_RecordType("<3367,3368,93>",(v)); Inst85++; } } catch(e) {}
assertEquals(103, v.foo);

// Add a getter foo that returns a counter value.
try { if (Inst86 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3426,3438,96>",(assertEquals)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (Object.create(protoFoo, fooGetter).foo) != "undefined") {_RecordType("<3442,3480,96>",(Object.create(protoFoo, fooGetter).foo)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<3442,3455,96>",(Object.create)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3442,3448,96>",(Object)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<3456,3464,96>",(protoFoo)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (fooGetter) != "undefined") {_RecordType("<3466,3475,96>",(fooGetter)); Inst91++; } } catch(e) {}
assertEquals(0, Object.create(protoFoo, fooGetter).foo);
try { if (Inst92 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3483,3495,97>",(assertEquals)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<3499,3502,97>",(ctr)); Inst93++; } } catch(e) {}
assertEquals(2, ctr);
try { if (Inst94 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3505,3517,98>",(assertEquals)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<3521,3525,98>",(ctr2)); Inst95++; } } catch(e) {}
assertEquals(1, ctr2);
try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3528,3540,99>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (ctr3) != "undefined") {_RecordType("<3544,3548,99>",(ctr3)); Inst97++; } } catch(e) {}
assertEquals(1, ctr3);

// Add a setter foo that runs a function.
try { if (Inst98 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3594,3606,102>",(assertEquals)); Inst98++; } } catch(e) {}
assertEquals(1, Object.create(protoFoo, fooSetter).foo = 1);
try { if (Inst99 <= 1000 && typeof (Object.create(protoFoo, fooSetter).foo) != "undefined") {_RecordType("<3610,3648,102>",(Object.create(protoFoo, fooSetter).foo)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<3610,3623,102>",(Object.create)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3610,3616,102>",(Object)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<3624,3632,102>",(protoFoo)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (fooSetter) != "undefined") {_RecordType("<3634,3643,102>",(fooSetter)); Inst103++; } } catch(e) {}
try { if (Inst104 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3655,3667,103>",(assertEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<3671,3674,103>",(ctr)); Inst105++; } } catch(e) {}
assertEquals(2, ctr);
try { if (Inst106 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3677,3689,104>",(assertEquals)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<3693,3697,104>",(ctr2)); Inst107++; } } catch(e) {}
assertEquals(1, ctr2);
try { if (Inst108 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3700,3712,105>",(assertEquals)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (ctr3) != "undefined") {_RecordType("<3716,3720,105>",(ctr3)); Inst109++; } } catch(e) {}
assertEquals(1, ctr3);
try { if (Inst110 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3723,3735,106>",(assertEquals)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (ctr4) != "undefined") {_RecordType("<3739,3743,106>",(ctr4)); Inst111++; } } catch(e) {}
assertEquals(1, ctr4);

// Make sure that trying to add both a value and a getter
// will result in an exception.
try { if (Inst117 <= 1000 && typeof (e) != "undefined") {_RecordType("<3914,3915,113>",(e)); Inst117++; } } catch(e) {}
try {
try { if (Inst112 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<3845,3858,111>",(Object.create)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Object) != "undefined") {_RecordType("<3845,3851,111>",(Object)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (protoFoo) != "undefined") {_RecordType("<3859,3867,111>",(protoFoo)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (fooAmbiguous) != "undefined") {_RecordType("<3869,3881,111>",(fooAmbiguous)); Inst115++; } } catch(e) {}
  Object.create(protoFoo, fooAmbiguous);
try { if (Inst116 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3886,3896,112>",(assertTrue)); Inst116++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst118 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3921,3931,114>",(assertTrue)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (/Invalid property/.test) != "undefined") {_RecordType("<3932,3955,114>",(/Invalid property/.test)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (e) != "undefined") {_RecordType("<3956,3957,114>",(e)); Inst120++; } } catch(e) {}
  assertTrue(/Invalid property/.test(e));
}
try { if (Inst121 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3963,3975,116>",(assertEquals)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (ctr) != "undefined") {_RecordType("<3979,3982,116>",(ctr)); Inst122++; } } catch(e) {}
assertEquals(2, ctr);
try { if (Inst123 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3985,3997,117>",(assertEquals)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (ctr2) != "undefined") {_RecordType("<4001,4005,117>",(ctr2)); Inst124++; } } catch(e) {}
assertEquals(1, ctr2);
try { if (Inst125 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4008,4020,118>",(assertEquals)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (ctr3) != "undefined") {_RecordType("<4024,4028,118>",(ctr3)); Inst126++; } } catch(e) {}
assertEquals(1, ctr3);
try { if (Inst127 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4031,4043,119>",(assertEquals)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (ctr4) != "undefined") {_RecordType("<4047,4051,119>",(ctr4)); Inst128++; } } catch(e) {}
assertEquals(1, ctr4);

var ctr7 = 0;
try { if (Inst129 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4059,4063,121>",(ctr7)); Inst129++; } } catch(e) {}

var metaProps = {
  enumerable: { get: function() {
try { if (Inst131 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4145,4157,125>",(assertEquals)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4161,4165,125>",(ctr7)); Inst132++; } } catch(e) {}
                       assertEquals(0, ctr7++);
                       return true;
                     }},
  configurable: { get: function() {
try { if (Inst133 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4292,4304,129>",(assertEquals)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4308,4312,129>",(ctr7)); Inst134++; } } catch(e) {}
                         assertEquals(1, ctr7++);
                         return true;
                       }},
  value: { get: function() {
try { if (Inst135 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4429,4441,133>",(assertEquals)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4445,4449,133>",(ctr7)); Inst136++; } } catch(e) {}
                  assertEquals(2, ctr7++);
                  return 4;
                }},
  writable: { get: function() {
try { if (Inst137 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4555,4567,137>",(assertEquals)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4571,4575,137>",(ctr7)); Inst138++; } } catch(e) {}
                     assertEquals(3, ctr7++);
                     return true;
                   }},
  get: { get: function() {
try { if (Inst139 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4680,4692,141>",(assertEquals)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4696,4700,141>",(ctr7)); Inst140++; } } catch(e) {}
                assertEquals(4, ctr7++);
                return function() { };
              }},
  set: { get: function() {
try { if (Inst141 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4805,4817,145>",(assertEquals)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<4821,4825,145>",(ctr7)); Inst142++; } } catch(e) {}
                assertEquals(5, ctr7++);
                return function() { };
              }}
};
try { if (Inst130 <= 1000 && typeof (metaProps) != "undefined") {_RecordType("<4074,4083,123>",(metaProps)); Inst130++; } } catch(e) {}


// Instead of a plain props object, let's use getters to return its properties.
try { if (Inst144 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5000,5013,152>",(Object.create)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5000,5006,152>",(Object)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (valueGet) != "undefined") {_RecordType("<5036,5044,152>",(valueGet)); Inst146++; } } catch(e) {}
var magicValueProps = { foo: Object.create(null, { value: { get: valueGet }})};
try { if (Inst143 <= 1000 && typeof (magicValueProps) != "undefined") {_RecordType("<4975,4990,152>",(magicValueProps)); Inst143++; } } catch(e) {}
try { if (Inst148 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5081,5094,153>",(Object.create)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5081,5087,153>",(Object)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (getterGet) != "undefined") {_RecordType("<5115,5124,153>",(getterGet)); Inst150++; } } catch(e) {}
var magicGetterProps = { foo: Object.create(null, { get: { get: getterGet }})};
try { if (Inst147 <= 1000 && typeof (magicGetterProps) != "undefined") {_RecordType("<5055,5071,153>",(magicGetterProps)); Inst147++; } } catch(e) {}
try { if (Inst152 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5164,5177,154>",(Object.create)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5164,5170,154>",(Object)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (metaProps) != "undefined") {_RecordType("<5184,5193,154>",(metaProps)); Inst154++; } } catch(e) {}
var magicAmbiguousProps = { foo: Object.create(null, metaProps) };
try { if (Inst151 <= 1000 && typeof (magicAmbiguousProps) != "undefined") {_RecordType("<5135,5154,154>",(magicAmbiguousProps)); Inst151++; } } catch(e) {}

try { if (Inst155 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5199,5211,156>",(assertEquals)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (Object.create(null, magicValueProps).foo) != "undefined") {_RecordType("<5215,5255,156>",(Object.create(null, magicValueProps).foo)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5215,5228,156>",(Object.create)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5215,5221,156>",(Object)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (magicValueProps) != "undefined") {_RecordType("<5235,5250,156>",(magicValueProps)); Inst159++; } } catch(e) {}
assertEquals(3, Object.create(null, magicValueProps).foo);
try { if (Inst160 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5258,5270,157>",(assertEquals)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (ctr5) != "undefined") {_RecordType("<5274,5278,157>",(ctr5)); Inst161++; } } catch(e) {}
assertEquals(1, ctr5);

try { if (Inst162 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5282,5294,159>",(assertEquals)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (Object.create(null, magicGetterProps).foo) != "undefined") {_RecordType("<5301,5342,159>",(Object.create(null, magicGetterProps).foo)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5301,5314,159>",(Object.create)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5301,5307,159>",(Object)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (magicGetterProps) != "undefined") {_RecordType("<5321,5337,159>",(magicGetterProps)); Inst166++; } } catch(e) {}
assertEquals(1000, Object.create(null, magicGetterProps).foo);
try { if (Inst167 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5345,5357,160>",(assertEquals)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (ctr5) != "undefined") {_RecordType("<5361,5365,160>",(ctr5)); Inst168++; } } catch(e) {}
assertEquals(2, ctr5);

// See if we do the steps in ToPropertyDescriptor in the right order.
// We shouldn't throw the exception for an ambiguous properties object
// before we got all the values out.
try { if (Inst173 <= 1000 && typeof (e) != "undefined") {_RecordType("<5627,5628,168>",(e)); Inst173++; } } catch(e) {}
try {
try { if (Inst169 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5555,5568,166>",(Object.create)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5555,5561,166>",(Object)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (magicAmbiguousProps) != "undefined") {_RecordType("<5575,5594,166>",(magicAmbiguousProps)); Inst171++; } } catch(e) {}
  Object.create(null, magicAmbiguousProps);
try { if (Inst172 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5599,5609,167>",(assertTrue)); Inst172++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst174 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5634,5644,169>",(assertTrue)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (/Invalid property/.test) != "undefined") {_RecordType("<5645,5668,169>",(/Invalid property/.test)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (e) != "undefined") {_RecordType("<5669,5670,169>",(e)); Inst176++; } } catch(e) {}
  assertTrue(/Invalid property/.test(e));
try { if (Inst177 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5676,5688,170>",(assertEquals)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (ctr7) != "undefined") {_RecordType("<5692,5696,170>",(ctr7)); Inst178++; } } catch(e) {}
  assertEquals(6, ctr7);
}

try { if (Inst180 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<5736,5749,174>",(Object.create)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5736,5742,174>",(Object)); Inst181++; } } catch(e) {}
var magicWritableProps = {
  foo: Object.create(null, { value: { value: 4 },
                             writable: { get: function() {
try { if (Inst182 <= 1000 && typeof (ctr6) != "undefined") {_RecordType("<5886,5890,176>",(ctr6)); Inst182++; } } catch(e) {}
                                                ctr6++;
                                                return false;
                                              }}})};
try { if (Inst179 <= 1000 && typeof (magicWritableProps) != "undefined") {_RecordType("<5706,5724,173>",(magicWritableProps)); Inst179++; } } catch(e) {}

try { if (Inst184 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<6031,6044,180>",(Object.create)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6031,6037,180>",(Object)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (magicWritableProps) != "undefined") {_RecordType("<6051,6069,180>",(magicWritableProps)); Inst186++; } } catch(e) {}
var fooNotWritable = Object.create(null, magicWritableProps)
try { if (Inst183 <= 1000 && typeof (fooNotWritable) != "undefined") {_RecordType("<6014,6028,180>",(fooNotWritable)); Inst183++; } } catch(e) {}
try { if (Inst187 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6071,6083,181>",(assertEquals)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (ctr6) != "undefined") {_RecordType("<6090,6094,181>",(ctr6)); Inst188++; } } catch(e) {}
assertEquals(1002, ctr6);
try { if (Inst189 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6097,6109,182>",(assertEquals)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (fooNotWritable.foo) != "undefined") {_RecordType("<6113,6131,182>",(fooNotWritable.foo)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (fooNotWritable) != "undefined") {_RecordType("<6113,6127,182>",(fooNotWritable)); Inst191++; } } catch(e) {}
assertEquals(4, fooNotWritable.foo);
fooNotWritable.foo = 5;
try { if (Inst192 <= 1000 && typeof (fooNotWritable.foo) != "undefined") {_RecordType("<6134,6152,183>",(fooNotWritable.foo)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (fooNotWritable) != "undefined") {_RecordType("<6134,6148,183>",(fooNotWritable)); Inst193++; } } catch(e) {}
try { if (Inst194 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6158,6170,184>",(assertEquals)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (fooNotWritable.foo) != "undefined") {_RecordType("<6174,6192,184>",(fooNotWritable.foo)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (fooNotWritable) != "undefined") {_RecordType("<6174,6188,184>",(fooNotWritable)); Inst196++; } } catch(e) {}
assertEquals(4, fooNotWritable.foo);


// Test enumerable flag.

try { if (Inst198 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<6250,6263,190>",(Object.create)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6250,6256,190>",(Object)); Inst199++; } } catch(e) {}
var fooNotEnumerable =
    Object.create({fizz: 14}, {foo: {value: 3, enumerable: false},
                               bar: {value: 4, enumerable: true},
                               baz: {value: 5}});
try { if (Inst197 <= 1000 && typeof (fooNotEnumerable) != "undefined") {_RecordType("<6227,6243,189>",(fooNotEnumerable)); Inst197++; } } catch(e) {}
var sum = 0;
try { if (Inst200 <= 1000 && typeof (sum) != "undefined") {_RecordType("<6433,6436,193>",(sum)); Inst200++; } } catch(e) {}
for (x in fooNotEnumerable) {
try { if (Inst201 <= 1000 && typeof (x) != "undefined") {_RecordType("<6447,6448,194>",(x)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (fooNotEnumerable) != "undefined") {_RecordType("<6452,6468,194>",(fooNotEnumerable)); Inst202++; } } catch(e) {}
try { if (Inst203 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6474,6484,195>",(assertTrue)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (x) != "undefined") {_RecordType("<6485,6486,195>",(x)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (x) != "undefined") {_RecordType("<6500,6501,195>",(x)); Inst205++; } } catch(e) {}
  assertTrue(x === 'bar' || x === 'fizz');
try { if (Inst207 <= 1000 && typeof (fooNotEnumerable[x]) != "undefined") {_RecordType("<6524,6543,196>",(fooNotEnumerable[x])); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (fooNotEnumerable) != "undefined") {_RecordType("<6524,6540,196>",(fooNotEnumerable)); Inst208++; } } catch(e) {}
  sum += fooNotEnumerable[x];
try { if (Inst206 <= 1000 && typeof (sum) != "undefined") {_RecordType("<6517,6520,196>",(sum)); Inst206++; } } catch(e) {}
}
try { if (Inst209 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6547,6559,198>",(assertEquals)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (sum) != "undefined") {_RecordType("<6564,6567,198>",(sum)); Inst210++; } } catch(e) {}
assertEquals(18, sum);


try { if (Inst214 <= 1000 && typeof (e) != "undefined") {_RecordType("<6650,6651,204>",(e)); Inst214++; } } catch(e) {}
try {
try { if (Inst211 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<6580,6593,202>",(Object.create)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6580,6586,202>",(Object)); Inst212++; } } catch(e) {}
  Object.create(null, {foo: { get: 0 }});
try { if (Inst213 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6622,6632,203>",(assertTrue)); Inst213++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst215 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6657,6667,205>",(assertTrue)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (/Getter must be a function/.test) != "undefined") {_RecordType("<6668,6700,205>",(/Getter must be a function/.test)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (e) != "undefined") {_RecordType("<6701,6702,205>",(e)); Inst217++; } } catch(e) {}
  assertTrue(/Getter must be a function/.test(e));
}

try { if (Inst221 <= 1000 && typeof (e) != "undefined") {_RecordType("<6787,6788,211>",(e)); Inst221++; } } catch(e) {}
try {
try { if (Inst218 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<6717,6730,209>",(Object.create)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6717,6723,209>",(Object)); Inst219++; } } catch(e) {}
  Object.create(null, {foo: { set: 0 }});
try { if (Inst220 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6759,6769,210>",(assertTrue)); Inst220++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst222 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6794,6804,212>",(assertTrue)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (/Setter must be a function/.test) != "undefined") {_RecordType("<6805,6837,212>",(/Setter must be a function/.test)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (e) != "undefined") {_RecordType("<6838,6839,212>",(e)); Inst224++; } } catch(e) {}
  assertTrue(/Setter must be a function/.test(e));
}

try { if (Inst228 <= 1000 && typeof (e) != "undefined") {_RecordType("<6932,6933,218>",(e)); Inst228++; } } catch(e) {}
try {
try { if (Inst225 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<6854,6867,216>",(Object.create)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6854,6860,216>",(Object)); Inst226++; } } catch(e) {}
  Object.create(null, {foo: { set: 0, get: 0 }});
try { if (Inst227 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6904,6914,217>",(assertTrue)); Inst227++; } } catch(e) {}
  assertTrue(false);
} catch (e) {
try { if (Inst229 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6939,6949,219>",(assertTrue)); Inst229++; } } catch(e) {}try { if (Inst230 <= 1000 && typeof (/Getter must be a function/.test) != "undefined") {_RecordType("<6950,6982,219>",(/Getter must be a function/.test)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (e) != "undefined") {_RecordType("<6983,6984,219>",(e)); Inst231++; } } catch(e) {}
  assertTrue(/Getter must be a function/.test(e));
}


// Ensure that only enumerable own properties on the descriptor are used.
try { if (Inst233 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<7079,7092,224>",(Object.create)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (Object) != "undefined") {_RecordType("<7079,7085,224>",(Object)); Inst234++; } } catch(e) {}
var tricky = Object.create(
  { foo: { value: 1, enumerable: true }},
  { bar: { value: { value: 2, enumerable: true }, enumerable: false },
    baz: { value: { value: 4, enumerable: false }, enumerable: true },
    fizz: { value: { value: 8, enumerable: false }, enumerable: false },
    buzz: { value: { value: 16, enumerable: true }, enumerable: true }});
try { if (Inst232 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7070,7076,224>",(tricky)); Inst232++; } } catch(e) {}

try { if (Inst235 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7426,7438,231>",(assertEquals)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (tricky.foo.value) != "undefined") {_RecordType("<7442,7458,231>",(tricky.foo.value)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (tricky.foo) != "undefined") {_RecordType("<7442,7452,231>",(tricky.foo)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7442,7448,231>",(tricky)); Inst238++; } } catch(e) {}
assertEquals(1, tricky.foo.value);
try { if (Inst239 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7461,7473,232>",(assertEquals)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (tricky.bar.value) != "undefined") {_RecordType("<7477,7493,232>",(tricky.bar.value)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (tricky.bar) != "undefined") {_RecordType("<7477,7487,232>",(tricky.bar)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7477,7483,232>",(tricky)); Inst242++; } } catch(e) {}
assertEquals(2, tricky.bar.value);
try { if (Inst243 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7496,7508,233>",(assertEquals)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (tricky.baz.value) != "undefined") {_RecordType("<7512,7528,233>",(tricky.baz.value)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (tricky.baz) != "undefined") {_RecordType("<7512,7522,233>",(tricky.baz)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7512,7518,233>",(tricky)); Inst246++; } } catch(e) {}
assertEquals(4, tricky.baz.value);
try { if (Inst247 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7531,7543,234>",(assertEquals)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (tricky.fizz.value) != "undefined") {_RecordType("<7547,7564,234>",(tricky.fizz.value)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (tricky.fizz) != "undefined") {_RecordType("<7547,7558,234>",(tricky.fizz)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7547,7553,234>",(tricky)); Inst250++; } } catch(e) {}
assertEquals(8, tricky.fizz.value);
try { if (Inst251 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7567,7579,235>",(assertEquals)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (tricky.buzz.value) != "undefined") {_RecordType("<7584,7601,235>",(tricky.buzz.value)); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (tricky.buzz) != "undefined") {_RecordType("<7584,7595,235>",(tricky.buzz)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7584,7590,235>",(tricky)); Inst254++; } } catch(e) {}
assertEquals(16, tricky.buzz.value);

try { if (Inst256 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<7623,7636,237>",(Object.create)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (Object) != "undefined") {_RecordType("<7623,7629,237>",(Object)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (tricky) != "undefined") {_RecordType("<7643,7649,237>",(tricky)); Inst258++; } } catch(e) {}
var sonOfTricky = Object.create(null, tricky);
try { if (Inst255 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7609,7620,237>",(sonOfTricky)); Inst255++; } } catch(e) {}

try { if (Inst259 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7653,7664,239>",(assertFalse)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7674,7685,239>",(sonOfTricky)); Inst260++; } } catch(e) {}
assertFalse("foo" in sonOfTricky);
try { if (Inst261 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7688,7699,240>",(assertFalse)); Inst261++; } } catch(e) {}try { if (Inst262 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7709,7720,240>",(sonOfTricky)); Inst262++; } } catch(e) {}
assertFalse("bar" in sonOfTricky);
try { if (Inst263 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7723,7733,241>",(assertTrue)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7743,7754,241>",(sonOfTricky)); Inst264++; } } catch(e) {}
assertTrue("baz" in sonOfTricky);
try { if (Inst265 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7757,7768,242>",(assertFalse)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7779,7790,242>",(sonOfTricky)); Inst266++; } } catch(e) {}
assertFalse("fizz" in sonOfTricky);
try { if (Inst267 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7793,7803,243>",(assertTrue)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7814,7825,243>",(sonOfTricky)); Inst268++; } } catch(e) {}
assertTrue("buzz" in sonOfTricky);

var sum = 0;
try { if (Inst269 <= 1000 && typeof (sum) != "undefined") {_RecordType("<7833,7836,245>",(sum)); Inst269++; } } catch(e) {}
for (x in sonOfTricky) {
try { if (Inst270 <= 1000 && typeof (x) != "undefined") {_RecordType("<7847,7848,246>",(x)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7852,7863,246>",(sonOfTricky)); Inst271++; } } catch(e) {}
try { if (Inst272 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7869,7879,247>",(assertTrue)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (x) != "undefined") {_RecordType("<7880,7881,247>",(x)); Inst273++; } } catch(e) {}
  assertTrue(x === 'buzz');
try { if (Inst275 <= 1000 && typeof (sonOfTricky[x]) != "undefined") {_RecordType("<7904,7918,248>",(sonOfTricky[x])); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (sonOfTricky) != "undefined") {_RecordType("<7904,7915,248>",(sonOfTricky)); Inst276++; } } catch(e) {}
  sum += sonOfTricky[x];
try { if (Inst274 <= 1000 && typeof (sum) != "undefined") {_RecordType("<7897,7900,248>",(sum)); Inst274++; } } catch(e) {}
}
try { if (Inst277 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7922,7934,250>",(assertEquals)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (sum) != "undefined") {_RecordType("<7939,7942,250>",(sum)); Inst278++; } } catch(e) {}
assertEquals(16, sum);

