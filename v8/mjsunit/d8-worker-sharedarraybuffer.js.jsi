var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2015 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --harmony-sharedarraybuffer

try { if (Inst0 <= 1000 && typeof (this.Worker) != "undefined") {_RecordType("<1641,1652,30>",(this.Worker)); Inst0++; } } catch(e) {}
if (this.Worker) {

try { if (Inst1 <= 1000 && typeof (TestTransfer) != "undefined") {_RecordType("<1669,1681,32>",(TestTransfer)); Inst1++; } } catch(e) {}
  (function TestTransfer() {
    var workerScript =
      `onmessage = function(m) {
       var sab = m;
       var ta = new Uint32Array(sab);
       if (sab.byteLength !== 16) {
         throw new Error('SharedArrayBuffer transfer byteLength');
       }
       for (var i = 0; i < 4; ++i) {
         if (ta[i] !== i) {
           throw new Error('SharedArrayBuffer transfer value ' + i);
         }
       }
        // Atomically update ta[0]
        Atomics.store(ta, 0, 100);
      };`;
try { if (Inst2 <= 1000 && typeof (workerScript) != "undefined") {_RecordType("<1694,1706,33>",(workerScript)); Inst2++; } } catch(e) {}

try { if (Inst4 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<2164,2170,49>",(Worker)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (workerScript) != "undefined") {_RecordType("<2171,2183,49>",(workerScript)); Inst5++; } } catch(e) {}
    var w = new Worker(workerScript);
try { if (Inst3 <= 1000 && typeof (w) != "undefined") {_RecordType("<2156,2157,49>",(w)); Inst3++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (SharedArrayBuffer) != "undefined") {_RecordType("<2205,2222,51>",(SharedArrayBuffer)); Inst7++; } } catch(e) {}
    var sab = new SharedArrayBuffer(16);
try { if (Inst6 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2195,2198,51>",(sab)); Inst6++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<2245,2256,52>",(Uint32Array)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2257,2260,52>",(sab)); Inst10++; } } catch(e) {}
    var ta = new Uint32Array(sab);
try { if (Inst8 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2236,2238,52>",(ta)); Inst8++; } } catch(e) {}
    for (var i = 0; i < 4; ++i) {
try { if (Inst11 <= 1000 && typeof (i) != "undefined") {_RecordType("<2276,2277,53>",(i)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (i) != "undefined") {_RecordType("<2283,2284,53>",(i)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (i) != "undefined") {_RecordType("<2292,2293,53>",(i)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (i) != "undefined") {_RecordType("<2311,2312,54>",(i)); Inst16++; } } catch(e) {}
      ta[i] = i;
try { if (Inst14 <= 1000 && typeof (ta[i]) != "undefined") {_RecordType("<2303,2308,54>",(ta[i])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2303,2305,54>",(ta)); Inst15++; } } catch(e) {}
    }

    // Transfer SharedArrayBuffer
try { if (Inst17 <= 1000 && typeof (w.postMessage) != "undefined") {_RecordType("<2359,2372,58>",(w.postMessage)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (w) != "undefined") {_RecordType("<2359,2360,58>",(w)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2373,2376,58>",(sab)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2379,2382,58>",(sab)); Inst20++; } } catch(e) {}
    w.postMessage(sab, [sab]);
try { if (Inst21 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2390,2402,59>",(assertEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sab.byteLength) != "undefined") {_RecordType("<2407,2421,59>",(sab.byteLength)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2407,2410,59>",(sab)); Inst23++; } } catch(e) {}
    assertEquals(16, sab.byteLength);  // ArrayBuffer should not be neutered.

    // Spinwait for the worker to update ta[0]
    var ta0;
try { if (Inst24 <= 1000 && typeof (ta0) != "undefined") {_RecordType("<2520,2523,62>",(ta0)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (Atomics.load) != "undefined") {_RecordType("<2543,2555,63>",(Atomics.load)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Atomics) != "undefined") {_RecordType("<2543,2550,63>",(Atomics)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2556,2558,63>",(ta)); Inst28++; } } catch(e) {}
    while ((ta0 = Atomics.load(ta, 0)) == 0) {}
try { if (Inst25 <= 1000 && typeof (ta0) != "undefined") {_RecordType("<2537,2540,63>",(ta0)); Inst25++; } } catch(e) {}

try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2578,2590,65>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ta0) != "undefined") {_RecordType("<2596,2599,65>",(ta0)); Inst30++; } } catch(e) {}
    assertEquals(100, ta0);

try { if (Inst31 <= 1000 && typeof (w.terminate) != "undefined") {_RecordType("<2607,2618,67>",(w.terminate)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (w) != "undefined") {_RecordType("<2607,2608,67>",(w)); Inst32++; } } catch(e) {}
    w.terminate();

try { if (Inst33 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2627,2639,69>",(assertEquals)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (sab.byteLength) != "undefined") {_RecordType("<2644,2658,69>",(sab.byteLength)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2644,2647,69>",(sab)); Inst35++; } } catch(e) {}
    assertEquals(16, sab.byteLength);  // Still not neutered.
  })();

try { if (Inst36 <= 1000 && typeof (TestTransferMulti) != "undefined") {_RecordType("<2706,2723,72>",(TestTransferMulti)); Inst36++; } } catch(e) {}
  (function TestTransferMulti() {
    var workerScript =
      `onmessage = function(msg) {
       var sab = msg.sab;
       var id = msg.id;
       var ta = new Uint32Array(sab);
       Atomics.store(ta, id, 1);
       postMessage(id);
      };`;
try { if (Inst37 <= 1000 && typeof (workerScript) != "undefined") {_RecordType("<2736,2748,73>",(workerScript)); Inst37++; } } catch(e) {}

try { if (Inst39 <= 1000 && typeof (SharedArrayBuffer) != "undefined") {_RecordType("<2961,2978,82>",(SharedArrayBuffer)); Inst39++; } } catch(e) {}
    var sab = new SharedArrayBuffer(16);
try { if (Inst38 <= 1000 && typeof (sab) != "undefined") {_RecordType("<2951,2954,82>",(sab)); Inst38++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (Uint32Array) != "undefined") {_RecordType("<3001,3012,83>",(Uint32Array)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (sab) != "undefined") {_RecordType("<3013,3016,83>",(sab)); Inst42++; } } catch(e) {}
    var ta = new Uint32Array(sab);
try { if (Inst40 <= 1000 && typeof (ta) != "undefined") {_RecordType("<2992,2994,83>",(ta)); Inst40++; } } catch(e) {}

    var id;
try { if (Inst43 <= 1000 && typeof (id) != "undefined") {_RecordType("<3028,3030,85>",(id)); Inst43++; } } catch(e) {}
    var workers = [];
try { if (Inst44 <= 1000 && typeof (workers) != "undefined") {_RecordType("<3040,3047,86>",(workers)); Inst44++; } } catch(e) {}
    for (id = 0; id < 4; ++id) {
try { if (Inst45 <= 1000 && typeof (id) != "undefined") {_RecordType("<3063,3065,87>",(id)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (id) != "undefined") {_RecordType("<3071,3073,87>",(id)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (id) != "undefined") {_RecordType("<3081,3083,87>",(id)); Inst47++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<3111,3117,88>",(Worker)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (workerScript) != "undefined") {_RecordType("<3118,3130,88>",(workerScript)); Inst51++; } } catch(e) {}
      workers[id] = new Worker(workerScript);
try { if (Inst48 <= 1000 && typeof (workers[id]) != "undefined") {_RecordType("<3093,3104,88>",(workers[id])); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (workers) != "undefined") {_RecordType("<3093,3100,88>",(workers)); Inst49++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (workers[id].postMessage) != "undefined") {_RecordType("<3139,3162,89>",(workers[id].postMessage)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (workers[id]) != "undefined") {_RecordType("<3139,3150,89>",(workers[id])); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (workers) != "undefined") {_RecordType("<3139,3146,89>",(workers)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (sab) != "undefined") {_RecordType("<3169,3172,89>",(sab)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (id) != "undefined") {_RecordType("<3178,3180,89>",(id)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (sab) != "undefined") {_RecordType("<3184,3187,89>",(sab)); Inst57++; } } catch(e) {}
      workers[id].postMessage({sab: sab, id: id}, [sab]);
    }

    // Spinwait for each worker to update ta[id]
    var count = 0;
try { if (Inst58 <= 1000 && typeof (count) != "undefined") {_RecordType("<3255,3260,93>",(count)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (count) != "undefined") {_RecordType("<3277,3282,94>",(count)); Inst59++; } } catch(e) {}
    while (count < 4) {
      for (id = 0; id < 4; ++id) {
try { if (Inst60 <= 1000 && typeof (id) != "undefined") {_RecordType("<3301,3303,95>",(id)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (id) != "undefined") {_RecordType("<3309,3311,95>",(id)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (id) != "undefined") {_RecordType("<3319,3321,95>",(id)); Inst62++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (Atomics.compareExchange) != "undefined") {_RecordType("<3337,3360,96>",(Atomics.compareExchange)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Atomics) != "undefined") {_RecordType("<3337,3344,96>",(Atomics)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (ta) != "undefined") {_RecordType("<3361,3363,96>",(ta)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (id) != "undefined") {_RecordType("<3365,3367,96>",(id)); Inst66++; } } catch(e) {}
        if (Atomics.compareExchange(ta, id, 1, -1) == 1) {
          // Worker is finished.
try { if (Inst67 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3427,3439,98>",(assertEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (id) != "undefined") {_RecordType("<3440,3442,98>",(id)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (workers[id].getMessage) != "undefined") {_RecordType("<3444,3466,98>",(workers[id].getMessage)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (workers[id]) != "undefined") {_RecordType("<3444,3455,98>",(workers[id])); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (workers) != "undefined") {_RecordType("<3444,3451,98>",(workers)); Inst71++; } } catch(e) {}
          assertEquals(id, workers[id].getMessage());
try { if (Inst72 <= 1000 && typeof (workers[id].terminate) != "undefined") {_RecordType("<3481,3502,99>",(workers[id].terminate)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (workers[id]) != "undefined") {_RecordType("<3481,3492,99>",(workers[id])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (workers) != "undefined") {_RecordType("<3481,3488,99>",(workers)); Inst74++; } } catch(e) {}
          workers[id].terminate();
try { if (Inst75 <= 1000 && typeof (count) != "undefined") {_RecordType("<3516,3521,100>",(count)); Inst75++; } } catch(e) {}
          count++;
        }
      }
    }
  })();

}

