var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Repeat most the tests in smi-ops.js that use SMI_MIN and SMI_MAX, but
// with SMI_MIN and SMI_MAX from the 64-bit platform, which represents all
// signed 32-bit integer values as smis.

const SMI_MAX = (1 << 30) - 1 + (1 << 30);  // Create without overflowing.
try { if (Inst0 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<1794,1801,32>",(SMI_MAX)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<1880,1887,33>",(SMI_MAX)); Inst2++; } } catch(e) {}
const SMI_MIN = -SMI_MAX - 1;  // Create without overflowing.
try { if (Inst1 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<1869,1876,33>",(SMI_MIN)); Inst1++; } } catch(e) {}
const ONE = 1;
try { if (Inst3 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<1931,1934,34>",(ONE)); Inst3++; } } catch(e) {}
const ONE_HUNDRED = 100;
try { if (Inst4 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<1946,1957,35>",(ONE_HUNDRED)); Inst4++; } } catch(e) {}

const OBJ_42 = new (function() {
  this.valueOf = function() { return 42; };
try { if (Inst6 <= 1000 && typeof (this.valueOf) != "undefined") {_RecordType("<2001,2013,38>",(this.valueOf)); Inst6++; } } catch(e) {}
})();
try { if (Inst5 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<1972,1978,37>",(OBJ_42)); Inst5++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2050,2062,41>",(assertEquals)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (OBJ_42.valueOf) != "undefined") {_RecordType("<2067,2081,41>",(OBJ_42.valueOf)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<2067,2073,41>",(OBJ_42)); Inst9++; } } catch(e) {}
assertEquals(42, OBJ_42.valueOf());


try { if (Inst10 <= 1000 && typeof (Add1) != "undefined") {_RecordType("<2097,2101,44>",(Add1)); Inst10++; } } catch(e) {}
function Add1(x) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<2102,2103,44>",(x)); Inst11++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<2116,2117,45>",(x)); Inst12++; } } catch(e) {}
  return x + 1;
}

try { if (Inst13 <= 1000 && typeof (Add100) != "undefined") {_RecordType("<2135,2141,48>",(Add100)); Inst13++; } } catch(e) {}
function Add100(x) {
try { if (Inst14 <= 1000 && typeof (x) != "undefined") {_RecordType("<2142,2143,48>",(x)); Inst14++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<2156,2157,49>",(x)); Inst15++; } } catch(e) {}
  return x + 100;
}

try { if (Inst16 <= 1000 && typeof (Add1Reversed) != "undefined") {_RecordType("<2177,2189,52>",(Add1Reversed)); Inst16++; } } catch(e) {}
function Add1Reversed(x) {
try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<2190,2191,52>",(x)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<2208,2209,53>",(x)); Inst18++; } } catch(e) {}
  return 1 + x;
}

try { if (Inst19 <= 1000 && typeof (Add100Reversed) != "undefined") {_RecordType("<2223,2237,56>",(Add100Reversed)); Inst19++; } } catch(e) {}
function Add100Reversed(x) {
try { if (Inst20 <= 1000 && typeof (x) != "undefined") {_RecordType("<2238,2239,56>",(x)); Inst20++; } } catch(e) {}
try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<2258,2259,57>",(x)); Inst21++; } } catch(e) {}
  return 100 + x;
}


try { if (Inst22 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2265,2277,61>",(assertEquals)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Add1) != "undefined") {_RecordType("<2281,2285,61>",(Add1)); Inst23++; } } catch(e) {}
assertEquals(1, Add1(0));  // fast case
try { if (Inst24 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2305,2317,62>",(assertEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Add1Reversed) != "undefined") {_RecordType("<2321,2333,62>",(Add1Reversed)); Inst25++; } } catch(e) {}
assertEquals(1, Add1Reversed(0));  // fast case
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2353,2365,63>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2366,2373,63>",(SMI_MAX)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<2376,2379,63>",(ONE)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Add1) != "undefined") {_RecordType("<2381,2385,63>",(Add1)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2386,2393,63>",(SMI_MAX)); Inst30++; } } catch(e) {}
assertEquals(SMI_MAX + ONE, Add1(SMI_MAX), "smimax + 1");
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2411,2423,64>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2424,2431,64>",(SMI_MAX)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<2434,2437,64>",(ONE)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (Add1Reversed) != "undefined") {_RecordType("<2439,2451,64>",(Add1Reversed)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2452,2459,64>",(SMI_MAX)); Inst35++; } } catch(e) {}
assertEquals(SMI_MAX + ONE, Add1Reversed(SMI_MAX), "1 + smimax");
try { if (Inst36 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2477,2489,65>",(assertEquals)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<2495,2498,65>",(ONE)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Add1) != "undefined") {_RecordType("<2500,2504,65>",(Add1)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<2505,2511,65>",(OBJ_42)); Inst39++; } } catch(e) {}
assertEquals(42 + ONE, Add1(OBJ_42));  // non-smi
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2527,2539,66>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<2545,2548,66>",(ONE)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (Add1Reversed) != "undefined") {_RecordType("<2550,2562,66>",(Add1Reversed)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<2563,2569,66>",(OBJ_42)); Inst43++; } } catch(e) {}
assertEquals(42 + ONE, Add1Reversed(OBJ_42));  // non-smi

try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2586,2598,68>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (Add100) != "undefined") {_RecordType("<2604,2610,68>",(Add100)); Inst45++; } } catch(e) {}
assertEquals(100, Add100(0));  // fast case
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2630,2642,69>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Add100Reversed) != "undefined") {_RecordType("<2648,2662,69>",(Add100Reversed)); Inst47++; } } catch(e) {}
assertEquals(100, Add100Reversed(0));  // fast case
try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2682,2694,70>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2695,2702,70>",(SMI_MAX)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<2705,2716,70>",(ONE_HUNDRED)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Add100) != "undefined") {_RecordType("<2718,2724,70>",(Add100)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2725,2732,70>",(SMI_MAX)); Inst52++; } } catch(e) {}
assertEquals(SMI_MAX + ONE_HUNDRED, Add100(SMI_MAX), "smimax + 100");
try { if (Inst53 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2752,2764,71>",(assertEquals)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2765,2772,71>",(SMI_MAX)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<2775,2786,71>",(ONE_HUNDRED)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Add100Reversed) != "undefined") {_RecordType("<2788,2802,71>",(Add100Reversed)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<2803,2810,71>",(SMI_MAX)); Inst57++; } } catch(e) {}
assertEquals(SMI_MAX + ONE_HUNDRED, Add100Reversed(SMI_MAX), " 100 + smimax");
try { if (Inst58 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2831,2843,72>",(assertEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<2849,2860,72>",(ONE_HUNDRED)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Add100) != "undefined") {_RecordType("<2862,2868,72>",(Add100)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<2869,2875,72>",(OBJ_42)); Inst61++; } } catch(e) {}
assertEquals(42 + ONE_HUNDRED, Add100(OBJ_42));  // non-smi
try { if (Inst62 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2891,2903,73>",(assertEquals)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<2909,2920,73>",(ONE_HUNDRED)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Add100Reversed) != "undefined") {_RecordType("<2922,2936,73>",(Add100Reversed)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<2937,2943,73>",(OBJ_42)); Inst65++; } } catch(e) {}
assertEquals(42 + ONE_HUNDRED, Add100Reversed(OBJ_42));  // non-smi



try { if (Inst66 <= 1000 && typeof (Sub1) != "undefined") {_RecordType("<2971,2975,77>",(Sub1)); Inst66++; } } catch(e) {}
function Sub1(x) {
try { if (Inst67 <= 1000 && typeof (x) != "undefined") {_RecordType("<2976,2977,77>",(x)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (x) != "undefined") {_RecordType("<2990,2991,78>",(x)); Inst68++; } } catch(e) {}
  return x - 1;
}

try { if (Inst69 <= 1000 && typeof (Sub100) != "undefined") {_RecordType("<3009,3015,81>",(Sub100)); Inst69++; } } catch(e) {}
function Sub100(x) {
try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<3016,3017,81>",(x)); Inst70++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<3030,3031,82>",(x)); Inst71++; } } catch(e) {}
  return x - 100;
}

try { if (Inst72 <= 1000 && typeof (Sub1Reversed) != "undefined") {_RecordType("<3051,3063,85>",(Sub1Reversed)); Inst72++; } } catch(e) {}
function Sub1Reversed(x) {
try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<3064,3065,85>",(x)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (x) != "undefined") {_RecordType("<3082,3083,86>",(x)); Inst74++; } } catch(e) {}
  return 1 - x;
}

try { if (Inst75 <= 1000 && typeof (Sub100Reversed) != "undefined") {_RecordType("<3097,3111,89>",(Sub100Reversed)); Inst75++; } } catch(e) {}
function Sub100Reversed(x) {
try { if (Inst76 <= 1000 && typeof (x) != "undefined") {_RecordType("<3112,3113,89>",(x)); Inst76++; } } catch(e) {}
try { if (Inst77 <= 1000 && typeof (x) != "undefined") {_RecordType("<3132,3133,90>",(x)); Inst77++; } } catch(e) {}
  return 100 - x;
}


try { if (Inst78 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3139,3151,94>",(assertEquals)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (Sub1) != "undefined") {_RecordType("<3155,3159,94>",(Sub1)); Inst79++; } } catch(e) {}
assertEquals(0, Sub1(1));  // fast case
try { if (Inst80 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3179,3191,95>",(assertEquals)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Sub1Reversed) != "undefined") {_RecordType("<3196,3208,95>",(Sub1Reversed)); Inst81++; } } catch(e) {}
assertEquals(-1, Sub1Reversed(2));  // fast case
try { if (Inst82 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3228,3240,96>",(assertEquals)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3241,3248,96>",(SMI_MIN)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<3251,3254,96>",(ONE)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Sub1) != "undefined") {_RecordType("<3256,3260,96>",(Sub1)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3261,3268,96>",(SMI_MIN)); Inst86++; } } catch(e) {}
assertEquals(SMI_MIN - ONE, Sub1(SMI_MIN));  // overflow
try { if (Inst87 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3285,3297,97>",(assertEquals)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<3298,3301,97>",(ONE)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3304,3311,97>",(SMI_MIN)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Sub1Reversed) != "undefined") {_RecordType("<3313,3325,97>",(Sub1Reversed)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3326,3333,97>",(SMI_MIN)); Inst91++; } } catch(e) {}
assertEquals(ONE - SMI_MIN, Sub1Reversed(SMI_MIN));  // overflow
try { if (Inst92 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3350,3362,98>",(assertEquals)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<3368,3371,98>",(ONE)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (Sub1) != "undefined") {_RecordType("<3373,3377,98>",(Sub1)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<3378,3384,98>",(OBJ_42)); Inst95++; } } catch(e) {}
assertEquals(42 - ONE, Sub1(OBJ_42));  // non-smi
try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3400,3412,99>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (ONE) != "undefined") {_RecordType("<3413,3416,99>",(ONE)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Sub1Reversed) != "undefined") {_RecordType("<3423,3435,99>",(Sub1Reversed)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<3436,3442,99>",(OBJ_42)); Inst99++; } } catch(e) {}
assertEquals(ONE - 42, Sub1Reversed(OBJ_42));  // non-smi

try { if (Inst100 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3459,3471,101>",(assertEquals)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Sub100) != "undefined") {_RecordType("<3475,3481,101>",(Sub100)); Inst101++; } } catch(e) {}
assertEquals(0, Sub100(100));  // fast case
try { if (Inst102 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3503,3515,102>",(assertEquals)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (Sub100Reversed) != "undefined") {_RecordType("<3519,3533,102>",(Sub100Reversed)); Inst103++; } } catch(e) {}
assertEquals(1, Sub100Reversed(99));  // fast case
try { if (Inst104 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3554,3566,103>",(assertEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3567,3574,103>",(SMI_MIN)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<3577,3588,103>",(ONE_HUNDRED)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Sub100) != "undefined") {_RecordType("<3590,3596,103>",(Sub100)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3597,3604,103>",(SMI_MIN)); Inst108++; } } catch(e) {}
assertEquals(SMI_MIN - ONE_HUNDRED, Sub100(SMI_MIN));  // overflow
try { if (Inst109 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3621,3633,104>",(assertEquals)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<3634,3645,104>",(ONE_HUNDRED)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3648,3655,104>",(SMI_MIN)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Sub100Reversed) != "undefined") {_RecordType("<3657,3671,104>",(Sub100Reversed)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<3672,3679,104>",(SMI_MIN)); Inst113++; } } catch(e) {}
assertEquals(ONE_HUNDRED - SMI_MIN, Sub100Reversed(SMI_MIN));  // overflow
try { if (Inst114 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3696,3708,105>",(assertEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<3714,3725,105>",(ONE_HUNDRED)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Sub100) != "undefined") {_RecordType("<3727,3733,105>",(Sub100)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<3734,3740,105>",(OBJ_42)); Inst117++; } } catch(e) {}
assertEquals(42 - ONE_HUNDRED, Sub100(OBJ_42));  // non-smi
try { if (Inst118 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3756,3768,106>",(assertEquals)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (ONE_HUNDRED) != "undefined") {_RecordType("<3769,3780,106>",(ONE_HUNDRED)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Sub100Reversed) != "undefined") {_RecordType("<3787,3801,106>",(Sub100Reversed)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<3802,3808,106>",(OBJ_42)); Inst121++; } } catch(e) {}
assertEquals(ONE_HUNDRED - 42, Sub100Reversed(OBJ_42));  // non-smi


try { if (Inst122 <= 1000 && typeof (Shr1) != "undefined") {_RecordType("<3835,3839,109>",(Shr1)); Inst122++; } } catch(e) {}
function Shr1(x) {
try { if (Inst123 <= 1000 && typeof (x) != "undefined") {_RecordType("<3840,3841,109>",(x)); Inst123++; } } catch(e) {}
try { if (Inst124 <= 1000 && typeof (x) != "undefined") {_RecordType("<3854,3855,110>",(x)); Inst124++; } } catch(e) {}
  return x >>> 1;
}

try { if (Inst125 <= 1000 && typeof (Shr100) != "undefined") {_RecordType("<3875,3881,113>",(Shr100)); Inst125++; } } catch(e) {}
function Shr100(x) {
try { if (Inst126 <= 1000 && typeof (x) != "undefined") {_RecordType("<3882,3883,113>",(x)); Inst126++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (x) != "undefined") {_RecordType("<3896,3897,114>",(x)); Inst127++; } } catch(e) {}
  return x >>> 100;
}

try { if (Inst128 <= 1000 && typeof (Shr1Reversed) != "undefined") {_RecordType("<3919,3931,117>",(Shr1Reversed)); Inst128++; } } catch(e) {}
function Shr1Reversed(x) {
try { if (Inst129 <= 1000 && typeof (x) != "undefined") {_RecordType("<3932,3933,117>",(x)); Inst129++; } } catch(e) {}
try { if (Inst130 <= 1000 && typeof (x) != "undefined") {_RecordType("<3952,3953,118>",(x)); Inst130++; } } catch(e) {}
  return 1 >>> x;
}

try { if (Inst131 <= 1000 && typeof (Shr100Reversed) != "undefined") {_RecordType("<3967,3981,121>",(Shr100Reversed)); Inst131++; } } catch(e) {}
function Shr100Reversed(x) {
try { if (Inst132 <= 1000 && typeof (x) != "undefined") {_RecordType("<3982,3983,121>",(x)); Inst132++; } } catch(e) {}
try { if (Inst133 <= 1000 && typeof (x) != "undefined") {_RecordType("<4004,4005,122>",(x)); Inst133++; } } catch(e) {}
  return 100 >>> x;
}

try { if (Inst134 <= 1000 && typeof (Sar1) != "undefined") {_RecordType("<4019,4023,125>",(Sar1)); Inst134++; } } catch(e) {}
function Sar1(x) {
try { if (Inst135 <= 1000 && typeof (x) != "undefined") {_RecordType("<4024,4025,125>",(x)); Inst135++; } } catch(e) {}
try { if (Inst136 <= 1000 && typeof (x) != "undefined") {_RecordType("<4038,4039,126>",(x)); Inst136++; } } catch(e) {}
  return x >> 1;
}

try { if (Inst137 <= 1000 && typeof (Sar100) != "undefined") {_RecordType("<4058,4064,129>",(Sar100)); Inst137++; } } catch(e) {}
function Sar100(x) {
try { if (Inst138 <= 1000 && typeof (x) != "undefined") {_RecordType("<4065,4066,129>",(x)); Inst138++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (x) != "undefined") {_RecordType("<4079,4080,130>",(x)); Inst139++; } } catch(e) {}
  return x >> 100;
}

try { if (Inst140 <= 1000 && typeof (Sar1Reversed) != "undefined") {_RecordType("<4101,4113,133>",(Sar1Reversed)); Inst140++; } } catch(e) {}
function Sar1Reversed(x) {
try { if (Inst141 <= 1000 && typeof (x) != "undefined") {_RecordType("<4114,4115,133>",(x)); Inst141++; } } catch(e) {}
try { if (Inst142 <= 1000 && typeof (x) != "undefined") {_RecordType("<4133,4134,134>",(x)); Inst142++; } } catch(e) {}
  return 1 >> x;
}

try { if (Inst143 <= 1000 && typeof (Sar100Reversed) != "undefined") {_RecordType("<4148,4162,137>",(Sar100Reversed)); Inst143++; } } catch(e) {}
function Sar100Reversed(x) {
try { if (Inst144 <= 1000 && typeof (x) != "undefined") {_RecordType("<4163,4164,137>",(x)); Inst144++; } } catch(e) {}
try { if (Inst145 <= 1000 && typeof (x) != "undefined") {_RecordType("<4184,4185,138>",(x)); Inst145++; } } catch(e) {}
  return 100 >> x;
}


try { if (Inst146 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4191,4203,142>",(assertEquals)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (Shr1) != "undefined") {_RecordType("<4207,4211,142>",(Shr1)); Inst147++; } } catch(e) {}
assertEquals(0, Shr1(1));
try { if (Inst148 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4217,4229,143>",(assertEquals)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Sar1) != "undefined") {_RecordType("<4233,4237,143>",(Sar1)); Inst149++; } } catch(e) {}
assertEquals(0, Sar1(1));
try { if (Inst150 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4243,4255,144>",(assertEquals)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (Shr1Reversed) != "undefined") {_RecordType("<4259,4271,144>",(Shr1Reversed)); Inst151++; } } catch(e) {}
assertEquals(0, Shr1Reversed(2));
try { if (Inst152 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4277,4289,145>",(assertEquals)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Sar1Reversed) != "undefined") {_RecordType("<4293,4305,145>",(Sar1Reversed)); Inst153++; } } catch(e) {}
assertEquals(0, Sar1Reversed(2));
try { if (Inst154 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4311,4323,146>",(assertEquals)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (Shr1) != "undefined") {_RecordType("<4336,4340,146>",(Shr1)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4341,4348,146>",(SMI_MIN)); Inst156++; } } catch(e) {}
assertEquals(1073741824, Shr1(SMI_MIN));
try { if (Inst157 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4352,4364,147>",(assertEquals)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (Sar1) != "undefined") {_RecordType("<4378,4382,147>",(Sar1)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4383,4390,147>",(SMI_MIN)); Inst159++; } } catch(e) {}
assertEquals(-1073741824, Sar1(SMI_MIN));
try { if (Inst160 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4394,4406,148>",(assertEquals)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (Shr1Reversed) != "undefined") {_RecordType("<4410,4422,148>",(Shr1Reversed)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4423,4430,148>",(SMI_MIN)); Inst162++; } } catch(e) {}
assertEquals(1, Shr1Reversed(SMI_MIN));
try { if (Inst163 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4434,4446,149>",(assertEquals)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (Sar1Reversed) != "undefined") {_RecordType("<4450,4462,149>",(Sar1Reversed)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4463,4470,149>",(SMI_MIN)); Inst165++; } } catch(e) {}
assertEquals(1, Sar1Reversed(SMI_MIN));
try { if (Inst166 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4474,4486,150>",(assertEquals)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (Shr1) != "undefined") {_RecordType("<4491,4495,150>",(Shr1)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<4496,4502,150>",(OBJ_42)); Inst168++; } } catch(e) {}
assertEquals(21, Shr1(OBJ_42));
try { if (Inst169 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4506,4518,151>",(assertEquals)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Sar1) != "undefined") {_RecordType("<4523,4527,151>",(Sar1)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<4528,4534,151>",(OBJ_42)); Inst171++; } } catch(e) {}
assertEquals(21, Sar1(OBJ_42));
try { if (Inst172 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4538,4550,152>",(assertEquals)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (Shr1Reversed) != "undefined") {_RecordType("<4554,4566,152>",(Shr1Reversed)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<4567,4573,152>",(OBJ_42)); Inst174++; } } catch(e) {}
assertEquals(0, Shr1Reversed(OBJ_42));
try { if (Inst175 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4577,4589,153>",(assertEquals)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (Sar1Reversed) != "undefined") {_RecordType("<4593,4605,153>",(Sar1Reversed)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<4606,4612,153>",(OBJ_42)); Inst177++; } } catch(e) {}
assertEquals(0, Sar1Reversed(OBJ_42));

try { if (Inst178 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4617,4629,155>",(assertEquals)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (Shr100) != "undefined") {_RecordType("<4633,4639,155>",(Shr100)); Inst179++; } } catch(e) {}
assertEquals(6, Shr100(100), "100 >>> 100");
try { if (Inst180 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4662,4674,156>",(assertEquals)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Sar100) != "undefined") {_RecordType("<4678,4684,156>",(Sar100)); Inst181++; } } catch(e) {}
assertEquals(6, Sar100(100), "100 >> 100");
try { if (Inst182 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4706,4718,157>",(assertEquals)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (Shr100Reversed) != "undefined") {_RecordType("<4723,4737,157>",(Shr100Reversed)); Inst183++; } } catch(e) {}
assertEquals(12, Shr100Reversed(99));
try { if (Inst184 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4744,4756,158>",(assertEquals)); Inst184++; } } catch(e) {}try { if (Inst185 <= 1000 && typeof (Sar100Reversed) != "undefined") {_RecordType("<4761,4775,158>",(Sar100Reversed)); Inst185++; } } catch(e) {}
assertEquals(12, Sar100Reversed(99));
try { if (Inst186 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4782,4794,159>",(assertEquals)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Shr100) != "undefined") {_RecordType("<4806,4812,159>",(Shr100)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4813,4820,159>",(SMI_MIN)); Inst188++; } } catch(e) {}
assertEquals(134217728, Shr100(SMI_MIN));
try { if (Inst189 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4824,4836,160>",(assertEquals)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (Sar100) != "undefined") {_RecordType("<4849,4855,160>",(Sar100)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4856,4863,160>",(SMI_MIN)); Inst191++; } } catch(e) {}
assertEquals(-134217728, Sar100(SMI_MIN));
try { if (Inst192 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4867,4879,161>",(assertEquals)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (Shr100Reversed) != "undefined") {_RecordType("<4885,4899,161>",(Shr100Reversed)); Inst193++; } } catch(e) {}try { if (Inst194 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4900,4907,161>",(SMI_MIN)); Inst194++; } } catch(e) {}
assertEquals(100, Shr100Reversed(SMI_MIN));
try { if (Inst195 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4911,4923,162>",(assertEquals)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (Sar100Reversed) != "undefined") {_RecordType("<4929,4943,162>",(Sar100Reversed)); Inst196++; } } catch(e) {}try { if (Inst197 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<4944,4951,162>",(SMI_MIN)); Inst197++; } } catch(e) {}
assertEquals(100, Sar100Reversed(SMI_MIN));
try { if (Inst198 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4955,4967,163>",(assertEquals)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (Shr100) != "undefined") {_RecordType("<4971,4977,163>",(Shr100)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<4978,4984,163>",(OBJ_42)); Inst200++; } } catch(e) {}
assertEquals(2, Shr100(OBJ_42));
try { if (Inst201 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4988,5000,164>",(assertEquals)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (Sar100) != "undefined") {_RecordType("<5004,5010,164>",(Sar100)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5011,5017,164>",(OBJ_42)); Inst203++; } } catch(e) {}
assertEquals(2, Sar100(OBJ_42));
try { if (Inst204 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5021,5033,165>",(assertEquals)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (Shr100Reversed) != "undefined") {_RecordType("<5037,5051,165>",(Shr100Reversed)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5052,5058,165>",(OBJ_42)); Inst206++; } } catch(e) {}
assertEquals(0, Shr100Reversed(OBJ_42));
try { if (Inst207 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5062,5074,166>",(assertEquals)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (Sar100Reversed) != "undefined") {_RecordType("<5078,5092,166>",(Sar100Reversed)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5093,5099,166>",(OBJ_42)); Inst209++; } } catch(e) {}
assertEquals(0, Sar100Reversed(OBJ_42));


try { if (Inst210 <= 1000 && typeof (Xor1) != "undefined") {_RecordType("<5114,5118,169>",(Xor1)); Inst210++; } } catch(e) {}
function Xor1(x) {
try { if (Inst211 <= 1000 && typeof (x) != "undefined") {_RecordType("<5119,5120,169>",(x)); Inst211++; } } catch(e) {}
try { if (Inst212 <= 1000 && typeof (x) != "undefined") {_RecordType("<5133,5134,170>",(x)); Inst212++; } } catch(e) {}
  return x ^ 1;
}

try { if (Inst213 <= 1000 && typeof (Xor100) != "undefined") {_RecordType("<5152,5158,173>",(Xor100)); Inst213++; } } catch(e) {}
function Xor100(x) {
try { if (Inst214 <= 1000 && typeof (x) != "undefined") {_RecordType("<5159,5160,173>",(x)); Inst214++; } } catch(e) {}
try { if (Inst215 <= 1000 && typeof (x) != "undefined") {_RecordType("<5173,5174,174>",(x)); Inst215++; } } catch(e) {}
  return x ^ 100;
}

try { if (Inst216 <= 1000 && typeof (Xor1Reversed) != "undefined") {_RecordType("<5194,5206,177>",(Xor1Reversed)); Inst216++; } } catch(e) {}
function Xor1Reversed(x) {
try { if (Inst217 <= 1000 && typeof (x) != "undefined") {_RecordType("<5207,5208,177>",(x)); Inst217++; } } catch(e) {}
try { if (Inst218 <= 1000 && typeof (x) != "undefined") {_RecordType("<5225,5226,178>",(x)); Inst218++; } } catch(e) {}
  return 1 ^ x;
}

try { if (Inst219 <= 1000 && typeof (Xor100Reversed) != "undefined") {_RecordType("<5240,5254,181>",(Xor100Reversed)); Inst219++; } } catch(e) {}
function Xor100Reversed(x) {
try { if (Inst220 <= 1000 && typeof (x) != "undefined") {_RecordType("<5255,5256,181>",(x)); Inst220++; } } catch(e) {}
try { if (Inst221 <= 1000 && typeof (x) != "undefined") {_RecordType("<5275,5276,182>",(x)); Inst221++; } } catch(e) {}
  return 100 ^ x;
}


try { if (Inst222 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5282,5294,186>",(assertEquals)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (Xor1) != "undefined") {_RecordType("<5298,5302,186>",(Xor1)); Inst223++; } } catch(e) {}
assertEquals(0, Xor1(1));
try { if (Inst224 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5308,5320,187>",(assertEquals)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (Xor1Reversed) != "undefined") {_RecordType("<5324,5336,187>",(Xor1Reversed)); Inst225++; } } catch(e) {}
assertEquals(3, Xor1Reversed(2));
try { if (Inst226 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5342,5354,188>",(assertEquals)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5355,5362,188>",(SMI_MIN)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (Xor1) != "undefined") {_RecordType("<5368,5372,188>",(Xor1)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5373,5380,188>",(SMI_MIN)); Inst229++; } } catch(e) {}
assertEquals(SMI_MIN + 1, Xor1(SMI_MIN));
try { if (Inst230 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5384,5396,189>",(assertEquals)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5397,5404,189>",(SMI_MIN)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (Xor1Reversed) != "undefined") {_RecordType("<5410,5422,189>",(Xor1Reversed)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5423,5430,189>",(SMI_MIN)); Inst233++; } } catch(e) {}
assertEquals(SMI_MIN + 1, Xor1Reversed(SMI_MIN));
try { if (Inst234 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5434,5446,190>",(assertEquals)); Inst234++; } } catch(e) {}try { if (Inst235 <= 1000 && typeof (Xor1) != "undefined") {_RecordType("<5451,5455,190>",(Xor1)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5456,5462,190>",(OBJ_42)); Inst236++; } } catch(e) {}
assertEquals(43, Xor1(OBJ_42));
try { if (Inst237 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5466,5478,191>",(assertEquals)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (Xor1Reversed) != "undefined") {_RecordType("<5483,5495,191>",(Xor1Reversed)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5496,5502,191>",(OBJ_42)); Inst239++; } } catch(e) {}
assertEquals(43, Xor1Reversed(OBJ_42));

try { if (Inst240 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5507,5519,193>",(assertEquals)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (Xor100) != "undefined") {_RecordType("<5523,5529,193>",(Xor100)); Inst241++; } } catch(e) {}
assertEquals(0, Xor100(100));
try { if (Inst242 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5537,5549,194>",(assertEquals)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (Xor100Reversed) != "undefined") {_RecordType("<5553,5567,194>",(Xor100Reversed)); Inst243++; } } catch(e) {}
assertEquals(7, Xor100Reversed(99));
try { if (Inst244 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5574,5586,195>",(assertEquals)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (Xor100) != "undefined") {_RecordType("<5600,5606,195>",(Xor100)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5607,5614,195>",(SMI_MIN)); Inst246++; } } catch(e) {}
assertEquals(-2147483548, Xor100(SMI_MIN));
try { if (Inst247 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5618,5630,196>",(assertEquals)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (Xor100Reversed) != "undefined") {_RecordType("<5644,5658,196>",(Xor100Reversed)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5659,5666,196>",(SMI_MIN)); Inst249++; } } catch(e) {}
assertEquals(-2147483548, Xor100Reversed(SMI_MIN));
try { if (Inst250 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5670,5682,197>",(assertEquals)); Inst250++; } } catch(e) {}try { if (Inst251 <= 1000 && typeof (Xor100) != "undefined") {_RecordType("<5687,5693,197>",(Xor100)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5694,5700,197>",(OBJ_42)); Inst252++; } } catch(e) {}
assertEquals(78, Xor100(OBJ_42));
try { if (Inst253 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5704,5716,198>",(assertEquals)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (Xor100Reversed) != "undefined") {_RecordType("<5721,5735,198>",(Xor100Reversed)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (OBJ_42) != "undefined") {_RecordType("<5736,5742,198>",(OBJ_42)); Inst255++; } } catch(e) {}
assertEquals(78, Xor100Reversed(OBJ_42));

var x = 0x23; var y = 0x35;
try { if (Inst256 <= 1000 && typeof (x) != "undefined") {_RecordType("<5751,5752,200>",(x)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (y) != "undefined") {_RecordType("<5765,5766,200>",(y)); Inst257++; } } catch(e) {}
try { if (Inst258 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5775,5787,201>",(assertEquals)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (x) != "undefined") {_RecordType("<5794,5795,201>",(x)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (y) != "undefined") {_RecordType("<5798,5799,201>",(y)); Inst260++; } } catch(e) {}
assertEquals(0x16, x ^ y);


// Bitwise not.
var v = 0;
try { if (Inst261 <= 1000 && typeof (v) != "undefined") {_RecordType("<5824,5825,205>",(v)); Inst261++; } } catch(e) {}
try { if (Inst262 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5831,5843,206>",(assertEquals)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (v) != "undefined") {_RecordType("<5849,5850,206>",(v)); Inst263++; } } catch(e) {}
assertEquals(-1, ~v);
try { if (Inst265 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<5857,5864,207>",(SMI_MIN)); Inst265++; } } catch(e) {}
v = SMI_MIN;
try { if (Inst264 <= 1000 && typeof (v) != "undefined") {_RecordType("<5853,5854,207>",(v)); Inst264++; } } catch(e) {}
try { if (Inst266 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5866,5878,208>",(assertEquals)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (v) != "undefined") {_RecordType("<5892,5893,208>",(v)); Inst267++; } } catch(e) {}
assertEquals(0x7fffffff, ~v, "~smimin");
try { if (Inst269 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<5911,5918,209>",(SMI_MAX)); Inst269++; } } catch(e) {}
v = SMI_MAX;
try { if (Inst268 <= 1000 && typeof (v) != "undefined") {_RecordType("<5907,5908,209>",(v)); Inst268++; } } catch(e) {}
try { if (Inst270 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5920,5932,210>",(assertEquals)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (v) != "undefined") {_RecordType("<5947,5948,210>",(v)); Inst271++; } } catch(e) {}
assertEquals(-0x80000000, ~v, "~smimax");

// Overflowing ++ and --.
try { if (Inst273 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<5993,6000,213>",(SMI_MAX)); Inst273++; } } catch(e) {}
v = SMI_MAX;
try { if (Inst272 <= 1000 && typeof (v) != "undefined") {_RecordType("<5989,5990,213>",(v)); Inst272++; } } catch(e) {}
try { if (Inst274 <= 1000 && typeof (v) != "undefined") {_RecordType("<6002,6003,214>",(v)); Inst274++; } } catch(e) {}
v++;
try { if (Inst275 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6007,6019,215>",(assertEquals)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (v) != "undefined") {_RecordType("<6032,6033,215>",(v)); Inst276++; } } catch(e) {}
assertEquals(0x80000000, v, "smimax++");
try { if (Inst278 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<6052,6059,216>",(SMI_MIN)); Inst278++; } } catch(e) {}
v = SMI_MIN;
try { if (Inst277 <= 1000 && typeof (v) != "undefined") {_RecordType("<6048,6049,216>",(v)); Inst277++; } } catch(e) {}
try { if (Inst279 <= 1000 && typeof (v) != "undefined") {_RecordType("<6061,6062,217>",(v)); Inst279++; } } catch(e) {}
v--;
try { if (Inst280 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6066,6078,218>",(assertEquals)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (v) != "undefined") {_RecordType("<6092,6093,218>",(v)); Inst281++; } } catch(e) {}
assertEquals(-0x80000001, v, "smimin--");

// Check that comparisons of numbers separated by MIN_SMI work.
try { if (Inst282 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6173,6184,221>",(assertFalse)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<6185,6192,221>",(SMI_MIN)); Inst283++; } } catch(e) {}
assertFalse(SMI_MIN > 0);
try { if (Inst284 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6199,6210,222>",(assertFalse)); Inst284++; } } catch(e) {}try { if (Inst285 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<6211,6218,222>",(SMI_MIN)); Inst285++; } } catch(e) {}
assertFalse(SMI_MIN + 1 > 1);
try { if (Inst286 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6229,6240,223>",(assertFalse)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<6241,6248,223>",(SMI_MIN)); Inst287++; } } catch(e) {}
assertFalse(SMI_MIN + 1 > 2);
try { if (Inst288 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6259,6270,224>",(assertFalse)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<6271,6278,224>",(SMI_MIN)); Inst289++; } } catch(e) {}
assertFalse(SMI_MIN + 2 > 1);
try { if (Inst290 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6289,6300,225>",(assertFalse)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (SMI_MIN) != "undefined") {_RecordType("<6305,6312,225>",(SMI_MIN)); Inst291++; } } catch(e) {}
assertFalse(0 < SMI_MIN);
try { if (Inst292 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6315,6325,226>",(assertTrue)); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<6331,6338,226>",(SMI_MAX)); Inst293++; } } catch(e) {}
assertTrue(-1 < SMI_MAX);
try { if (Inst294 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6341,6352,227>",(assertFalse)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (SMI_MAX) != "undefined") {_RecordType("<6353,6360,227>",(SMI_MAX)); Inst295++; } } catch(e) {}
assertFalse(SMI_MAX < -1);

