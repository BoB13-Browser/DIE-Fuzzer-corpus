var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


// Test that an optional capture is cleared between two matches.
var str = "ABX X";
try { if (Inst0 <= 1000 && typeof (str) != "undefined") {_RecordType("<1668,1671,30>",(str)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<1689,1700,31>",(str.replace)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (str) != "undefined") {_RecordType("<1689,1692,31>",(str)); Inst3++; } } catch(e) {}
str = str.replace(/(\w)?X/g, function(match, capture) {
try { if (Inst4 <= 1000 && typeof (match) != "undefined") {_RecordType("<1721,1726,31>",(match)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1728,1735,31>",(capture)); Inst5++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1770,1780,32>",(assertTrue)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (match.indexOf) != "undefined") {_RecordType("<1781,1794,32>",(match.indexOf)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (match) != "undefined") {_RecordType("<1781,1786,32>",(match)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1795,1802,32>",(capture)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1855,1862,33>",(capture)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1867,1876,33>",(undefined)); Inst11++; } } catch(e) {}
                               assertTrue(match.indexOf(capture) >= 0 ||
                                           capture === undefined);
try { if (Inst12 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1917,1924,34>",(capture)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (capture.toLowerCase) != "undefined") {_RecordType("<1927,1946,34>",(capture.toLowerCase)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (capture) != "undefined") {_RecordType("<1927,1934,34>",(capture)); Inst14++; } } catch(e) {}
                               return capture ? capture.toLowerCase() : "-";
                             });
try { if (Inst1 <= 1000 && typeof (str) != "undefined") {_RecordType("<1683,1686,31>",(str)); Inst1++; } } catch(e) {}
try { if (Inst15 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1989,2001,36>",(assertEquals)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (str) != "undefined") {_RecordType("<2010,2013,36>",(str)); Inst16++; } } catch(e) {}
assertEquals("Ab -", str);

// Test zero-length matches.
str = "Als Gregor Samsa eines Morgens";
try { if (Inst17 <= 1000 && typeof (str) != "undefined") {_RecordType("<2046,2049,39>",(str)); Inst17++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<2092,2103,40>",(str.replace)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (str) != "undefined") {_RecordType("<2092,2095,40>",(str)); Inst20++; } } catch(e) {}
str = str.replace(/\b/g, function(match, capture) {
try { if (Inst21 <= 1000 && typeof (match) != "undefined") {_RecordType("<2120,2125,40>",(match)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (capture) != "undefined") {_RecordType("<2127,2134,40>",(capture)); Inst22++; } } catch(e) {}
                           return "/";
                         });
try { if (Inst18 <= 1000 && typeof (str) != "undefined") {_RecordType("<2086,2089,40>",(str)); Inst18++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2206,2218,43>",(assertEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (str) != "undefined") {_RecordType("<2263,2266,43>",(str)); Inst24++; } } catch(e) {}
assertEquals("/Als/ /Gregor/ /Samsa/ /eines/ /Morgens/", str);

// Test zero-length matches that have non-zero-length sub-captures.
str = "It was a pleasure to burn.";
try { if (Inst25 <= 1000 && typeof (str) != "undefined") {_RecordType("<2338,2341,46>",(str)); Inst25++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<2380,2391,47>",(str.replace)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (str) != "undefined") {_RecordType("<2380,2383,47>",(str)); Inst28++; } } catch(e) {}
str = str.replace(/(?=(\w+))\b/g, function(match, capture) {
try { if (Inst29 <= 1000 && typeof (match) != "undefined") {_RecordType("<2417,2422,47>",(match)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (capture) != "undefined") {_RecordType("<2424,2431,47>",(capture)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (capture.length) != "undefined") {_RecordType("<2478,2492,48>",(capture.length)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (capture) != "undefined") {_RecordType("<2478,2485,48>",(capture)); Inst32++; } } catch(e) {}
                                    return capture.length;
                                  });
try { if (Inst26 <= 1000 && typeof (str) != "undefined") {_RecordType("<2374,2377,47>",(str)); Inst26++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2532,2544,50>",(assertEquals)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (str) != "undefined") {_RecordType("<2581,2584,50>",(str)); Inst34++; } } catch(e) {}
assertEquals("2It 3was 1a 8pleasure 2to 4burn.", str);

// Test multiple captures.
str = "Try not. Do, or do not. There is no try.";
try { if (Inst35 <= 1000 && typeof (str) != "undefined") {_RecordType("<2615,2618,53>",(str)); Inst35++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<2671,2682,54>",(str.replace)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (str) != "undefined") {_RecordType("<2671,2674,54>",(str)); Inst38++; } } catch(e) {}
str = str.replace(/(not?)|(do)|(try)/gi,
                  function(match, c1, c2, c3) {
try { if (Inst39 <= 1000 && typeof (match) != "undefined") {_RecordType("<2733,2738,55>",(match)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (c1) != "undefined") {_RecordType("<2740,2742,55>",(c1)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2744,2746,55>",(c2)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2748,2750,55>",(c3)); Inst42++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2774,2784,56>",(assertTrue)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (c1) != "undefined") {_RecordType("<2786,2788,56>",(c1)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2793,2802,56>",(undefined)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2806,2808,56>",(c2)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2813,2822,56>",(undefined)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (c2) != "undefined") {_RecordType("<2859,2861,57>",(c2)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2866,2875,57>",(undefined)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2879,2881,57>",(c3)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2886,2895,57>",(undefined)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (c1) != "undefined") {_RecordType("<2932,2934,58>",(c1)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2939,2948,58>",(undefined)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (c3) != "undefined") {_RecordType("<2952,2954,58>",(c3)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2959,2968,58>",(undefined)); Inst55++; } } catch(e) {}
                    assertTrue((c1 === undefined && c2 === undefined) ||
                               (c2 === undefined && c3 === undefined) ||
                               (c1 === undefined && c3 === undefined));
try { if (Inst56 <= 1000 && typeof (c1) != "undefined") {_RecordType("<2996,2998,59>",(c1)); Inst56++; } } catch(e) {}
                    if (c1) return "-";
try { if (Inst57 <= 1000 && typeof (c2) != "undefined") {_RecordType("<3036,3038,60>",(c2)); Inst57++; } } catch(e) {}
                    if (c2) return "+";
try { if (Inst58 <= 1000 && typeof (c3) != "undefined") {_RecordType("<3076,3078,61>",(c3)); Inst58++; } } catch(e) {}
                    if (c3) return "="
                  });
try { if (Inst36 <= 1000 && typeof (str) != "undefined") {_RecordType("<2665,2668,54>",(str)); Inst36++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3113,3125,63>",(assertEquals)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (str) != "undefined") {_RecordType("<3159,3162,63>",(str)); Inst60++; } } catch(e) {}
assertEquals("= -. +, or + -. There is - =.", str);

// Test multiple alternate captures.
str = "FOUR LEGS GOOD, TWO LEGS BAD!";
try { if (Inst61 <= 1000 && typeof (str) != "undefined") {_RecordType("<3203,3206,66>",(str)); Inst61++; } } catch(e) {}
try { if (Inst63 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<3248,3259,67>",(str.replace)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (str) != "undefined") {_RecordType("<3248,3251,67>",(str)); Inst64++; } } catch(e) {}
str = str.replace(/(FOUR|TWO) LEGS (GOOD|BAD)/g,
                  function(match, num_legs, likeability) {
try { if (Inst65 <= 1000 && typeof (match) != "undefined") {_RecordType("<3318,3323,68>",(match)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<3325,3333,68>",(num_legs)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<3335,3346,68>",(likeability)); Inst67++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3370,3380,69>",(assertTrue)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<3381,3389,69>",(num_legs)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3394,3403,69>",(undefined)); Inst70++; } } catch(e) {}
                    assertTrue(num_legs !== undefined);
try { if (Inst71 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3426,3436,70>",(assertTrue)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<3437,3448,70>",(likeability)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<3453,3462,70>",(undefined)); Inst73++; } } catch(e) {}
                    assertTrue(likeability !== undefined);
try { if (Inst74 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<3489,3497,71>",(num_legs)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3509,3519,71>",(assertTrue)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<3520,3531,71>",(likeability)); Inst76++; } } catch(e) {}
                    if (num_legs == "FOUR") assertTrue(likeability == "GOOD");
try { if (Inst77 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<3568,3576,72>",(num_legs)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3587,3597,72>",(assertTrue)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<3598,3609,72>",(likeability)); Inst79++; } } catch(e) {}
                    if (num_legs == "TWO") assertTrue(likeability == "BAD");
try { if (Inst80 <= 1000 && typeof (match.length) != "undefined") {_RecordType("<3648,3660,73>",(match.length)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (match) != "undefined") {_RecordType("<3648,3653,73>",(match)); Inst81++; } } catch(e) {}
                    return match.length - 10;
                  });
try { if (Inst62 <= 1000 && typeof (str) != "undefined") {_RecordType("<3242,3245,67>",(str)); Inst62++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3689,3701,75>",(assertEquals)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (str) != "undefined") {_RecordType("<3711,3714,75>",(str)); Inst83++; } } catch(e) {}
assertEquals("4, 2!", str);


// The same tests with UC16.

//Test that an optional capture is cleared between two matches.
str = "AB\u1234 \u1234";
try { if (Inst84 <= 1000 && typeof (str) != "undefined") {_RecordType("<3813,3816,81>",(str)); Inst84++; } } catch(e) {}
try { if (Inst86 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<3844,3855,82>",(str.replace)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (str) != "undefined") {_RecordType("<3844,3847,82>",(str)); Inst87++; } } catch(e) {}
str = str.replace(/(\w)?\u1234/g,
                  function(match, capture) {
try { if (Inst88 <= 1000 && typeof (match) != "undefined") {_RecordType("<3899,3904,83>",(match)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (capture) != "undefined") {_RecordType("<3906,3913,83>",(capture)); Inst89++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3937,3947,84>",(assertTrue)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (match.indexOf) != "undefined") {_RecordType("<3948,3961,84>",(match.indexOf)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (match) != "undefined") {_RecordType("<3948,3953,84>",(match)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (capture) != "undefined") {_RecordType("<3962,3969,84>",(capture)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (capture) != "undefined") {_RecordType("<4010,4017,85>",(capture)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4022,4031,85>",(undefined)); Inst95++; } } catch(e) {}
                    assertTrue(match.indexOf(capture) >= 0 ||
                               capture === undefined);
try { if (Inst96 <= 1000 && typeof (capture) != "undefined") {_RecordType("<4061,4068,86>",(capture)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (capture.toLowerCase) != "undefined") {_RecordType("<4071,4090,86>",(capture.toLowerCase)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (capture) != "undefined") {_RecordType("<4071,4078,86>",(capture)); Inst98++; } } catch(e) {}
                    return capture ? capture.toLowerCase() : "-";
                  });
try { if (Inst85 <= 1000 && typeof (str) != "undefined") {_RecordType("<3838,3841,82>",(str)); Inst85++; } } catch(e) {}
try { if (Inst99 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4122,4134,88>",(assertEquals)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (str) != "undefined") {_RecordType("<4143,4146,88>",(str)); Inst100++; } } catch(e) {}
assertEquals("Ab -", str);

// Test zero-length matches.
str = "Als \u2623\u2642 eines Morgens";
try { if (Inst101 <= 1000 && typeof (str) != "undefined") {_RecordType("<4179,4182,91>",(str)); Inst101++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<4225,4236,92>",(str.replace)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (str) != "undefined") {_RecordType("<4225,4228,92>",(str)); Inst104++; } } catch(e) {}
str = str.replace(/\b/g, function(match, capture) {
try { if (Inst105 <= 1000 && typeof (match) != "undefined") {_RecordType("<4253,4258,92>",(match)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (capture) != "undefined") {_RecordType("<4260,4267,92>",(capture)); Inst106++; } } catch(e) {}
                           return "/";
                         });
try { if (Inst102 <= 1000 && typeof (str) != "undefined") {_RecordType("<4219,4222,92>",(str)); Inst102++; } } catch(e) {}
try { if (Inst107 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4339,4351,95>",(assertEquals)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (str) != "undefined") {_RecordType("<4392,4395,95>",(str)); Inst108++; } } catch(e) {}
assertEquals("/Als/ \u2623\u2642 /eines/ /Morgens/", str);

// Test zero-length matches that have non-zero-length sub-captures.
str = "It was a pleasure to \u70e7.";
try { if (Inst109 <= 1000 && typeof (str) != "undefined") {_RecordType("<4467,4470,98>",(str)); Inst109++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<4511,4522,99>",(str.replace)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (str) != "undefined") {_RecordType("<4511,4514,99>",(str)); Inst112++; } } catch(e) {}
str = str.replace(/(?=(\w+))\b/g, function(match, capture) {
try { if (Inst113 <= 1000 && typeof (match) != "undefined") {_RecordType("<4548,4553,99>",(match)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (capture) != "undefined") {_RecordType("<4555,4562,99>",(capture)); Inst114++; } } catch(e) {}
try { if (Inst115 <= 1000 && typeof (capture.length) != "undefined") {_RecordType("<4609,4623,100>",(capture.length)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (capture) != "undefined") {_RecordType("<4609,4616,100>",(capture)); Inst116++; } } catch(e) {}
                                    return capture.length;
                                  });
try { if (Inst110 <= 1000 && typeof (str) != "undefined") {_RecordType("<4505,4508,99>",(str)); Inst110++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4663,4675,102>",(assertEquals)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (str) != "undefined") {_RecordType("<4713,4716,102>",(str)); Inst118++; } } catch(e) {}
assertEquals("2It 3was 1a 8pleasure 2to \u70e7.", str);

// Test multiple captures.
str = "Try not. D\u26aa, or d\u26aa not. There is no try.";
try { if (Inst119 <= 1000 && typeof (str) != "undefined") {_RecordType("<4747,4750,105>",(str)); Inst119++; } } catch(e) {}
try { if (Inst121 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<4813,4824,106>",(str.replace)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (str) != "undefined") {_RecordType("<4813,4816,106>",(str)); Inst122++; } } catch(e) {}
str = str.replace(/(not?)|(d\u26aa)|(try)/gi,
                  function(match, c1, c2, c3) {
try { if (Inst123 <= 1000 && typeof (match) != "undefined") {_RecordType("<4880,4885,107>",(match)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (c1) != "undefined") {_RecordType("<4887,4889,107>",(c1)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (c2) != "undefined") {_RecordType("<4891,4893,107>",(c2)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (c3) != "undefined") {_RecordType("<4895,4897,107>",(c3)); Inst126++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4921,4931,108>",(assertTrue)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (c1) != "undefined") {_RecordType("<4933,4935,108>",(c1)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4940,4949,108>",(undefined)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (c2) != "undefined") {_RecordType("<4953,4955,108>",(c2)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<4960,4969,108>",(undefined)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (c2) != "undefined") {_RecordType("<5006,5008,109>",(c2)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5013,5022,109>",(undefined)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (c3) != "undefined") {_RecordType("<5026,5028,109>",(c3)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5033,5042,109>",(undefined)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (c1) != "undefined") {_RecordType("<5079,5081,110>",(c1)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5086,5095,110>",(undefined)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (c3) != "undefined") {_RecordType("<5099,5101,110>",(c3)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5106,5115,110>",(undefined)); Inst139++; } } catch(e) {}
                    assertTrue((c1 === undefined && c2 === undefined) ||
                               (c2 === undefined && c3 === undefined) ||
                               (c1 === undefined && c3 === undefined));
try { if (Inst140 <= 1000 && typeof (c1) != "undefined") {_RecordType("<5143,5145,111>",(c1)); Inst140++; } } catch(e) {}
                    if (c1) return "-";
try { if (Inst141 <= 1000 && typeof (c2) != "undefined") {_RecordType("<5183,5185,112>",(c2)); Inst141++; } } catch(e) {}
                    if (c2) return "+";
try { if (Inst142 <= 1000 && typeof (c3) != "undefined") {_RecordType("<5223,5225,113>",(c3)); Inst142++; } } catch(e) {}
                    if (c3) return "="
                  });
try { if (Inst120 <= 1000 && typeof (str) != "undefined") {_RecordType("<4807,4810,106>",(str)); Inst120++; } } catch(e) {}
try { if (Inst143 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5260,5272,115>",(assertEquals)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (str) != "undefined") {_RecordType("<5306,5309,115>",(str)); Inst144++; } } catch(e) {}
assertEquals("= -. +, or + -. There is - =.", str);

// Test multiple alternate captures.
str = "FOUR \u817f GOOD, TWO \u817f BAD!";
try { if (Inst145 <= 1000 && typeof (str) != "undefined") {_RecordType("<5350,5353,118>",(str)); Inst145++; } } catch(e) {}
try { if (Inst147 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<5399,5410,119>",(str.replace)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (str) != "undefined") {_RecordType("<5399,5402,119>",(str)); Inst148++; } } catch(e) {}
str = str.replace(/(FOUR|TWO) \u817f (GOOD|BAD)/g,
                  function(match, num_legs, likeability) {
try { if (Inst149 <= 1000 && typeof (match) != "undefined") {_RecordType("<5471,5476,120>",(match)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<5478,5486,120>",(num_legs)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<5488,5499,120>",(likeability)); Inst151++; } } catch(e) {}
try { if (Inst152 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5523,5533,121>",(assertTrue)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<5534,5542,121>",(num_legs)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5547,5556,121>",(undefined)); Inst154++; } } catch(e) {}
                    assertTrue(num_legs !== undefined);
try { if (Inst155 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5579,5589,122>",(assertTrue)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<5590,5601,122>",(likeability)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<5606,5615,122>",(undefined)); Inst157++; } } catch(e) {}
                    assertTrue(likeability !== undefined);
try { if (Inst158 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<5642,5650,123>",(num_legs)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5662,5672,123>",(assertTrue)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<5673,5684,123>",(likeability)); Inst160++; } } catch(e) {}
                    if (num_legs == "FOUR") assertTrue(likeability == "GOOD");
try { if (Inst161 <= 1000 && typeof (num_legs) != "undefined") {_RecordType("<5721,5729,124>",(num_legs)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5740,5750,124>",(assertTrue)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (likeability) != "undefined") {_RecordType("<5751,5762,124>",(likeability)); Inst163++; } } catch(e) {}
                    if (num_legs == "TWO") assertTrue(likeability == "BAD");
try { if (Inst164 <= 1000 && typeof (match.length) != "undefined") {_RecordType("<5801,5813,125>",(match.length)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (match) != "undefined") {_RecordType("<5801,5806,125>",(match)); Inst165++; } } catch(e) {}
                    return match.length - 7;
                  });
try { if (Inst146 <= 1000 && typeof (str) != "undefined") {_RecordType("<5393,5396,119>",(str)); Inst146++; } } catch(e) {}
try { if (Inst166 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5841,5853,127>",(assertEquals)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (str) != "undefined") {_RecordType("<5863,5866,127>",(str)); Inst167++; } } catch(e) {}
assertEquals("4, 2!", str);

// Test capture that is a real substring.
var str = "Beasts of England, beasts of Ireland";
try { if (Inst168 <= 1000 && typeof (str) != "undefined") {_RecordType("<5916,5919,130>",(str)); Inst168++; } } catch(e) {}
try { if (Inst170 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<5968,5979,131>",(str.replace)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (str) != "undefined") {_RecordType("<5968,5971,131>",(str)); Inst171++; } } catch(e) {}
str = str.replace(/(.*)/g, function(match) { return '~'; });
try { if (Inst169 <= 1000 && typeof (str) != "undefined") {_RecordType("<5962,5965,131>",(str)); Inst169++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (match) != "undefined") {_RecordType("<5998,6003,131>",(match)); Inst172++; } } catch(e) {}
try { if (Inst173 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6023,6035,132>",(assertEquals)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (str) != "undefined") {_RecordType("<6042,6045,132>",(str)); Inst174++; } } catch(e) {}
assertEquals("~~", str);

// Test zero-length matches that have non-zero-length sub-captures that do not
// start at the match start position.
str = "up up up up";
try { if (Inst175 <= 1000 && typeof (str) != "undefined") {_RecordType("<6166,6169,136>",(str)); Inst175++; } } catch(e) {}
try { if (Inst177 <= 1000 && typeof (str.replace) != "undefined") {_RecordType("<6193,6204,137>",(str.replace)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (str) != "undefined") {_RecordType("<6193,6196,137>",(str)); Inst178++; } } catch(e) {}
str = str.replace(/\b(?=u(p))/g, function(match, capture) {
try { if (Inst179 <= 1000 && typeof (match) != "undefined") {_RecordType("<6229,6234,137>",(match)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (capture) != "undefined") {_RecordType("<6236,6243,137>",(capture)); Inst180++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (capture.length) != "undefined") {_RecordType("<6290,6304,138>",(capture.length)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (capture) != "undefined") {_RecordType("<6290,6297,138>",(capture)); Inst182++; } } catch(e) {}
                                    return capture.length;
                                  });
try { if (Inst176 <= 1000 && typeof (str) != "undefined") {_RecordType("<6187,6190,137>",(str)); Inst176++; } } catch(e) {}

try { if (Inst183 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6345,6357,141>",(assertEquals)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (str) != "undefined") {_RecordType("<6377,6380,141>",(str)); Inst184++; } } catch(e) {}
assertEquals("1up 1up 1up 1up", str);


// Create regexp that has a *lot* of captures.
var re_string = "(a)";
try { if (Inst185 <= 1000 && typeof (re_string) != "undefined") {_RecordType("<6436,6445,145>",(re_string)); Inst185++; } } catch(e) {}
for (var i = 0; i < 500; i++) {
try { if (Inst186 <= 1000 && typeof (i) != "undefined") {_RecordType("<6464,6465,146>",(i)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (i) != "undefined") {_RecordType("<6471,6472,146>",(i)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (i) != "undefined") {_RecordType("<6480,6481,146>",(i)); Inst188++; } } catch(e) {}
try { if (Inst190 <= 1000 && typeof (re_string) != "undefined") {_RecordType("<6507,6516,147>",(re_string)); Inst190++; } } catch(e) {}
  re_string = "(" + re_string + ")";
try { if (Inst189 <= 1000 && typeof (re_string) != "undefined") {_RecordType("<6489,6498,147>",(re_string)); Inst189++; } } catch(e) {}
}
try { if (Inst192 <= 1000 && typeof (re_string) != "undefined") {_RecordType("<6538,6547,149>",(re_string)); Inst192++; } } catch(e) {}
re_string = re_string + "1";
try { if (Inst191 <= 1000 && typeof (re_string) != "undefined") {_RecordType("<6526,6535,149>",(re_string)); Inst191++; } } catch(e) {}
// re_string = "(((...((a))...)))1"

try { if (Inst194 <= 1000 && typeof (Array) != "undefined") {_RecordType("<6610,6615,152>",(Array)); Inst194++; } } catch(e) {}
var regexps = new Array();
try { if (Inst193 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<6596,6603,152>",(regexps)); Inst193++; } } catch(e) {}
try { if (Inst196 <= 1000 && typeof (Array) != "undefined") {_RecordType("<6653,6658,153>",(Array)); Inst196++; } } catch(e) {}
var last_match_expectations = new Array();
try { if (Inst195 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<6623,6646,153>",(last_match_expectations)); Inst195++; } } catch(e) {}
try { if (Inst198 <= 1000 && typeof (Array) != "undefined") {_RecordType("<6699,6704,154>",(Array)); Inst198++; } } catch(e) {}
var first_capture_expectations = new Array();
try { if (Inst197 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<6666,6692,154>",(first_capture_expectations)); Inst197++; } } catch(e) {}

// Atomic regexp.
try { if (Inst199 <= 1000 && typeof (regexps.push) != "undefined") {_RecordType("<6727,6739,157>",(regexps.push)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<6727,6734,157>",(regexps)); Inst200++; } } catch(e) {}
regexps.push(/a1/g);
try { if (Inst201 <= 1000 && typeof (last_match_expectations.push) != "undefined") {_RecordType("<6748,6776,158>",(last_match_expectations.push)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<6748,6771,158>",(last_match_expectations)); Inst202++; } } catch(e) {}
last_match_expectations.push("a1");
try { if (Inst203 <= 1000 && typeof (first_capture_expectations.push) != "undefined") {_RecordType("<6784,6815,159>",(first_capture_expectations.push)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<6784,6810,159>",(first_capture_expectations)); Inst204++; } } catch(e) {}
first_capture_expectations.push("");
// Small regexp (no capture);
try { if (Inst205 <= 1000 && typeof (regexps.push) != "undefined") {_RecordType("<6851,6863,161>",(regexps.push)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<6851,6858,161>",(regexps)); Inst206++; } } catch(e) {}
regexps.push(/\w1/g);
try { if (Inst207 <= 1000 && typeof (last_match_expectations.push) != "undefined") {_RecordType("<6873,6901,162>",(last_match_expectations.push)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<6873,6896,162>",(last_match_expectations)); Inst208++; } } catch(e) {}
last_match_expectations.push("a1");
try { if (Inst209 <= 1000 && typeof (first_capture_expectations.push) != "undefined") {_RecordType("<6909,6940,163>",(first_capture_expectations.push)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<6909,6935,163>",(first_capture_expectations)); Inst210++; } } catch(e) {}
first_capture_expectations.push("");
// Small regexp (one capture).
try { if (Inst211 <= 1000 && typeof (regexps.push) != "undefined") {_RecordType("<6977,6989,165>",(regexps.push)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<6977,6984,165>",(regexps)); Inst212++; } } catch(e) {}
regexps.push(/(a)1/g);
try { if (Inst213 <= 1000 && typeof (last_match_expectations.push) != "undefined") {_RecordType("<7000,7028,166>",(last_match_expectations.push)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<7000,7023,166>",(last_match_expectations)); Inst214++; } } catch(e) {}
last_match_expectations.push("a1");
try { if (Inst215 <= 1000 && typeof (first_capture_expectations.push) != "undefined") {_RecordType("<7036,7067,167>",(first_capture_expectations.push)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<7036,7062,167>",(first_capture_expectations)); Inst216++; } } catch(e) {}
first_capture_expectations.push("a");
// Large regexp (a lot of captures).
try { if (Inst217 <= 1000 && typeof (regexps.push) != "undefined") {_RecordType("<7111,7123,169>",(regexps.push)); Inst217++; } } catch(e) {}try { if (Inst218 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<7111,7118,169>",(regexps)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7128,7134,169>",(RegExp)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (re_string) != "undefined") {_RecordType("<7135,7144,169>",(re_string)); Inst220++; } } catch(e) {}
regexps.push(new RegExp(re_string, "g"));
try { if (Inst221 <= 1000 && typeof (last_match_expectations.push) != "undefined") {_RecordType("<7153,7181,170>",(last_match_expectations.push)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<7153,7176,170>",(last_match_expectations)); Inst222++; } } catch(e) {}
last_match_expectations.push("a1");
try { if (Inst223 <= 1000 && typeof (first_capture_expectations.push) != "undefined") {_RecordType("<7189,7220,171>",(first_capture_expectations.push)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<7189,7215,171>",(first_capture_expectations)); Inst224++; } } catch(e) {}
first_capture_expectations.push("a");

try { if (Inst225 <= 1000 && typeof (test_replace) != "undefined") {_RecordType("<7237,7249,173>",(test_replace)); Inst225++; } } catch(e) {}
function test_replace(result_expectation,
                      subject,
                      regexp,
                      replacement) {
try { if (Inst226 <= 1000 && typeof (result_expectation) != "undefined") {_RecordType("<7250,7268,173>",(result_expectation)); Inst226++; } } catch(e) {}try { if (Inst227 <= 1000 && typeof (subject) != "undefined") {_RecordType("<7292,7299,174>",(subject)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<7323,7329,175>",(regexp)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (replacement) != "undefined") {_RecordType("<7353,7364,176>",(replacement)); Inst229++; } } catch(e) {}
  for (var i = 0; i < regexps.length; i++) {
try { if (Inst230 <= 1000 && typeof (i) != "undefined") {_RecordType("<7379,7380,177>",(i)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (i) != "undefined") {_RecordType("<7386,7387,177>",(i)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (regexps.length) != "undefined") {_RecordType("<7390,7404,177>",(regexps.length)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<7390,7397,177>",(regexps)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (i) != "undefined") {_RecordType("<7406,7407,177>",(i)); Inst234++; } } catch(e) {}
    // Overwrite last match info.
try { if (Inst235 <= 1000 && typeof ("deadbeef".replace) != "undefined") {_RecordType("<7451,7469,179>",("deadbeef".replace)); Inst235++; } } catch(e) {}
    "deadbeef".replace(/(dead)beef/, "$1holeycow");
    // Conduct tests.
try { if (Inst236 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7525,7537,181>",(assertEquals)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (result_expectation) != "undefined") {_RecordType("<7538,7556,181>",(result_expectation)); Inst237++; } } catch(e) {}try { if (Inst238 <= 1000 && typeof (subject.replace) != "undefined") {_RecordType("<7558,7573,181>",(subject.replace)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (subject) != "undefined") {_RecordType("<7558,7565,181>",(subject)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (regexps[i]) != "undefined") {_RecordType("<7574,7584,181>",(regexps[i])); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<7574,7581,181>",(regexps)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (replacement) != "undefined") {_RecordType("<7586,7597,181>",(replacement)); Inst242++; } } catch(e) {}
    assertEquals(result_expectation, subject.replace(regexps[i], replacement));
try { if (Inst243 <= 1000 && typeof (subject.length) != "undefined") {_RecordType("<7609,7623,182>",(subject.length)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (subject) != "undefined") {_RecordType("<7609,7616,182>",(subject)); Inst244++; } } catch(e) {}
    if (subject.length == 0) {
try { if (Inst245 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7638,7650,183>",(assertEquals)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<7663,7679,183>",(RegExp.lastMatch)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7663,7669,183>",(RegExp)); Inst247++; } } catch(e) {}
      assertEquals("deadbeef", RegExp.lastMatch);
try { if (Inst248 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7688,7700,184>",(assertEquals)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (RegExp["$1"]) != "undefined") {_RecordType("<7709,7721,184>",(RegExp["$1"])); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7709,7715,184>",(RegExp)); Inst250++; } } catch(e) {}
      assertEquals("dead", RegExp["$1"]);
    } else {
try { if (Inst251 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7743,7755,186>",(assertEquals)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (last_match_expectations[i]) != "undefined") {_RecordType("<7756,7782,186>",(last_match_expectations[i])); Inst252++; } } catch(e) {}try { if (Inst253 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<7756,7779,186>",(last_match_expectations)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<7784,7800,186>",(RegExp.lastMatch)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7784,7790,186>",(RegExp)); Inst255++; } } catch(e) {}
      assertEquals(last_match_expectations[i], RegExp.lastMatch);
try { if (Inst256 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<7809,7821,187>",(assertEquals)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (first_capture_expectations[i]) != "undefined") {_RecordType("<7822,7851,187>",(first_capture_expectations[i])); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<7822,7848,187>",(first_capture_expectations)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (RegExp["$1"]) != "undefined") {_RecordType("<7853,7865,187>",(RegExp["$1"])); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7853,7859,187>",(RegExp)); Inst260++; } } catch(e) {}
      assertEquals(first_capture_expectations[i], RegExp["$1"]);
    }
  }
}


try { if (Inst261 <= 1000 && typeof (test_match) != "undefined") {_RecordType("<7891,7901,193>",(test_match)); Inst261++; } } catch(e) {}
function test_match(result_expectation,
                    subject,
                    regexp) {
try { if (Inst262 <= 1000 && typeof (result_expectation) != "undefined") {_RecordType("<7902,7920,193>",(result_expectation)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (subject) != "undefined") {_RecordType("<7942,7949,194>",(subject)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (regexp) != "undefined") {_RecordType("<7971,7977,195>",(regexp)); Inst264++; } } catch(e) {}
  for (var i = 0; i < regexps.length; i++) {
try { if (Inst265 <= 1000 && typeof (i) != "undefined") {_RecordType("<7992,7993,196>",(i)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (i) != "undefined") {_RecordType("<7999,8000,196>",(i)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (regexps.length) != "undefined") {_RecordType("<8003,8017,196>",(regexps.length)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<8003,8010,196>",(regexps)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (i) != "undefined") {_RecordType("<8019,8020,196>",(i)); Inst269++; } } catch(e) {}
    // Overwrite last match info.
try { if (Inst270 <= 1000 && typeof ("deadbeef".replace) != "undefined") {_RecordType("<8064,8082,198>",("deadbeef".replace)); Inst270++; } } catch(e) {}
    "deadbeef".replace(/(dead)beef/, "$1holeycow");
    // Conduct tests.
try { if (Inst271 <= 1000 && typeof (result_expectation) != "undefined") {_RecordType("<8142,8160,200>",(result_expectation)); Inst271++; } } catch(e) {}
    if (result_expectation == null) {
try { if (Inst272 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<8178,8188,201>",(assertNull)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (subject.match) != "undefined") {_RecordType("<8189,8202,201>",(subject.match)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (subject) != "undefined") {_RecordType("<8189,8196,201>",(subject)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (regexps[i]) != "undefined") {_RecordType("<8203,8213,201>",(regexps[i])); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<8203,8210,201>",(regexps)); Inst276++; } } catch(e) {}
      assertNull(subject.match(regexps[i]));
    } else {
try { if (Inst277 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<8236,8253,203>",(assertArrayEquals)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (result_expectation) != "undefined") {_RecordType("<8254,8272,203>",(result_expectation)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (subject.match) != "undefined") {_RecordType("<8274,8287,203>",(subject.match)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (subject) != "undefined") {_RecordType("<8274,8281,203>",(subject)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (regexps[i]) != "undefined") {_RecordType("<8288,8298,203>",(regexps[i])); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (regexps) != "undefined") {_RecordType("<8288,8295,203>",(regexps)); Inst282++; } } catch(e) {}
      assertArrayEquals(result_expectation, subject.match(regexps[i]));
    }
try { if (Inst283 <= 1000 && typeof (subject.length) != "undefined") {_RecordType("<8316,8330,205>",(subject.length)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (subject) != "undefined") {_RecordType("<8316,8323,205>",(subject)); Inst284++; } } catch(e) {}
    if (subject.length == 0) {
try { if (Inst285 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8345,8357,206>",(assertEquals)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<8370,8386,206>",(RegExp.lastMatch)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8370,8376,206>",(RegExp)); Inst287++; } } catch(e) {}
      assertEquals("deadbeef", RegExp.lastMatch);
try { if (Inst288 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8395,8407,207>",(assertEquals)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (RegExp["$1"]) != "undefined") {_RecordType("<8416,8428,207>",(RegExp["$1"])); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8416,8422,207>",(RegExp)); Inst290++; } } catch(e) {}
      assertEquals("dead", RegExp["$1"]);
    } else {
try { if (Inst291 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8450,8462,209>",(assertEquals)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (last_match_expectations[i]) != "undefined") {_RecordType("<8463,8489,209>",(last_match_expectations[i])); Inst292++; } } catch(e) {}try { if (Inst293 <= 1000 && typeof (last_match_expectations) != "undefined") {_RecordType("<8463,8486,209>",(last_match_expectations)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (RegExp.lastMatch) != "undefined") {_RecordType("<8491,8507,209>",(RegExp.lastMatch)); Inst294++; } } catch(e) {}try { if (Inst295 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8491,8497,209>",(RegExp)); Inst295++; } } catch(e) {}
      assertEquals(last_match_expectations[i], RegExp.lastMatch);
try { if (Inst296 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8516,8528,210>",(assertEquals)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (first_capture_expectations[i]) != "undefined") {_RecordType("<8529,8558,210>",(first_capture_expectations[i])); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (first_capture_expectations) != "undefined") {_RecordType("<8529,8555,210>",(first_capture_expectations)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (RegExp["$1"]) != "undefined") {_RecordType("<8560,8572,210>",(RegExp["$1"])); Inst299++; } } catch(e) {}try { if (Inst300 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8560,8566,210>",(RegExp)); Inst300++; } } catch(e) {}
      assertEquals(first_capture_expectations[i], RegExp["$1"]);
    }
  }
}


// Test for different number of matches.
for (var m = 0; m < 33; m++) {
try { if (Inst301 <= 1000 && typeof (m) != "undefined") {_RecordType("<8639,8640,217>",(m)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (m) != "undefined") {_RecordType("<8646,8647,217>",(m)); Inst302++; } } catch(e) {}try { if (Inst303 <= 1000 && typeof (m) != "undefined") {_RecordType("<8654,8655,217>",(m)); Inst303++; } } catch(e) {}
  // Create string that matches m times.
  var subject = "";
try { if (Inst304 <= 1000 && typeof (subject) != "undefined") {_RecordType("<8708,8715,219>",(subject)); Inst304++; } } catch(e) {}
  var test_1_expectation = "";
try { if (Inst305 <= 1000 && typeof (test_1_expectation) != "undefined") {_RecordType("<8728,8746,220>",(test_1_expectation)); Inst305++; } } catch(e) {}
  var test_2_expectation = "";
try { if (Inst306 <= 1000 && typeof (test_2_expectation) != "undefined") {_RecordType("<8759,8777,221>",(test_2_expectation)); Inst306++; } } catch(e) {}
try { if (Inst308 <= 1000 && typeof (m) != "undefined") {_RecordType("<8812,8813,222>",(m)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (Array) != "undefined") {_RecordType("<8833,8838,222>",(Array)); Inst309++; } } catch(e) {}
  var test_3_expectation = (m == 0) ? null : new Array();
try { if (Inst307 <= 1000 && typeof (test_3_expectation) != "undefined") {_RecordType("<8790,8808,222>",(test_3_expectation)); Inst307++; } } catch(e) {}
  for (var i = 0; i < m; i++) {
try { if (Inst310 <= 1000 && typeof (i) != "undefined") {_RecordType("<8853,8854,223>",(i)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (i) != "undefined") {_RecordType("<8860,8861,223>",(i)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (m) != "undefined") {_RecordType("<8864,8865,223>",(m)); Inst312++; } } catch(e) {}try { if (Inst313 <= 1000 && typeof (i) != "undefined") {_RecordType("<8867,8868,223>",(i)); Inst313++; } } catch(e) {}
    subject += "a11";
try { if (Inst314 <= 1000 && typeof (subject) != "undefined") {_RecordType("<8878,8885,224>",(subject)); Inst314++; } } catch(e) {}
    test_1_expectation += "x1";
try { if (Inst315 <= 1000 && typeof (test_1_expectation) != "undefined") {_RecordType("<8900,8918,225>",(test_1_expectation)); Inst315++; } } catch(e) {}
    test_2_expectation += "1";
try { if (Inst316 <= 1000 && typeof (test_2_expectation) != "undefined") {_RecordType("<8932,8950,226>",(test_2_expectation)); Inst316++; } } catch(e) {}
try { if (Inst317 <= 1000 && typeof (test_3_expectation.push) != "undefined") {_RecordType("<8963,8986,227>",(test_3_expectation.push)); Inst317++; } } catch(e) {}try { if (Inst318 <= 1000 && typeof (test_3_expectation) != "undefined") {_RecordType("<8963,8981,227>",(test_3_expectation)); Inst318++; } } catch(e) {}
    test_3_expectation.push("a1");
  }

  // Test 1a: String.replace with string.
try { if (Inst319 <= 1000 && typeof (test_replace) != "undefined") {_RecordType("<9043,9055,231>",(test_replace)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (test_1_expectation) != "undefined") {_RecordType("<9056,9074,231>",(test_1_expectation)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (subject) != "undefined") {_RecordType("<9076,9083,231>",(subject)); Inst321++; } } catch(e) {}
  test_replace(test_1_expectation, subject, /a1/g, "x");

  // Test 1b: String.replace with function.
try { if (Inst322 <= 1000 && typeof (f) != "undefined") {_RecordType("<9154,9155,234>",(f)); Inst322++; } } catch(e) {}
  function f() { return "x"; }
try { if (Inst323 <= 1000 && typeof (test_replace) != "undefined") {_RecordType("<9176,9188,235>",(test_replace)); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (test_1_expectation) != "undefined") {_RecordType("<9189,9207,235>",(test_1_expectation)); Inst324++; } } catch(e) {}try { if (Inst325 <= 1000 && typeof (subject) != "undefined") {_RecordType("<9209,9216,235>",(subject)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (f) != "undefined") {_RecordType("<9225,9226,235>",(f)); Inst326++; } } catch(e) {}
  test_replace(test_1_expectation, subject, /a1/g, f);

  // Test 2a: String.replace with empty string.
try { if (Inst327 <= 1000 && typeof (test_replace) != "undefined") {_RecordType("<9280,9292,238>",(test_replace)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (test_2_expectation) != "undefined") {_RecordType("<9293,9311,238>",(test_2_expectation)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (subject) != "undefined") {_RecordType("<9313,9320,238>",(subject)); Inst329++; } } catch(e) {}
  test_replace(test_2_expectation, subject, /a1/g, "");

  // Test 3a: String.match.
try { if (Inst330 <= 1000 && typeof (test_match) != "undefined") {_RecordType("<9365,9375,241>",(test_match)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (test_3_expectation) != "undefined") {_RecordType("<9376,9394,241>",(test_3_expectation)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (subject) != "undefined") {_RecordType("<9396,9403,241>",(subject)); Inst332++; } } catch(e) {}
  test_match(test_3_expectation, subject, /a1/g);
}


// Test String hashing (compiling regular expression includes hashing).
var crosscheck = "\x80";
try { if (Inst333 <= 1000 && typeof (crosscheck) != "undefined") {_RecordType("<9493,9503,246>",(crosscheck)); Inst333++; } } catch(e) {}
try { if (Inst338 <= 1000 && typeof (crosscheck) != "undefined") {_RecordType("<9557,9567,247>",(crosscheck)); Inst338++; } } catch(e) {}
for (var i = 0; i < 12; i++) crosscheck += crosscheck;
try { if (Inst334 <= 1000 && typeof (i) != "undefined") {_RecordType("<9523,9524,247>",(i)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (i) != "undefined") {_RecordType("<9530,9531,247>",(i)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (i) != "undefined") {_RecordType("<9538,9539,247>",(i)); Inst336++; } } catch(e) {}try { if (Inst337 <= 1000 && typeof (crosscheck) != "undefined") {_RecordType("<9543,9553,247>",(crosscheck)); Inst337++; } } catch(e) {}
try { if (Inst339 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9573,9579,248>",(RegExp)); Inst339++; } } catch(e) {}try { if (Inst340 <= 1000 && typeof (crosscheck) != "undefined") {_RecordType("<9580,9590,248>",(crosscheck)); Inst340++; } } catch(e) {}
new RegExp(crosscheck);

var subject = "ascii~only~string~here~";
try { if (Inst341 <= 1000 && typeof (subject) != "undefined") {_RecordType("<9598,9605,250>",(subject)); Inst341++; } } catch(e) {}
var replacement = "\x80";
try { if (Inst342 <= 1000 && typeof (replacement) != "undefined") {_RecordType("<9639,9650,251>",(replacement)); Inst342++; } } catch(e) {}
try { if (Inst344 <= 1000 && typeof (subject.replace) != "undefined") {_RecordType("<9674,9689,252>",(subject.replace)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (subject) != "undefined") {_RecordType("<9674,9681,252>",(subject)); Inst345++; } } catch(e) {}try { if (Inst346 <= 1000 && typeof (replacement) != "undefined") {_RecordType("<9696,9707,252>",(replacement)); Inst346++; } } catch(e) {}
var result = subject.replace(/~/g, replacement);
try { if (Inst343 <= 1000 && typeof (result) != "undefined") {_RecordType("<9665,9671,252>",(result)); Inst343++; } } catch(e) {}
try { if (Inst351 <= 1000 && typeof (result) != "undefined") {_RecordType("<9748,9754,253>",(result)); Inst351++; } } catch(e) {}
for (var i = 0; i < 5; i++) result += result;
try { if (Inst347 <= 1000 && typeof (i) != "undefined") {_RecordType("<9719,9720,253>",(i)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (i) != "undefined") {_RecordType("<9726,9727,253>",(i)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (i) != "undefined") {_RecordType("<9733,9734,253>",(i)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (result) != "undefined") {_RecordType("<9738,9744,253>",(result)); Inst350++; } } catch(e) {}
try { if (Inst352 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9760,9766,254>",(RegExp)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (result) != "undefined") {_RecordType("<9767,9773,254>",(result)); Inst353++; } } catch(e) {}
new RegExp(result);

