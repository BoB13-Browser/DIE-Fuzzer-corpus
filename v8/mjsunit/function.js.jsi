var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

try { if (Inst1 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1606,1614,28>",(Function)); Inst1++; } } catch(e) {}
var f = Function();
try { if (Inst0 <= 1000 && typeof (f) != "undefined") {_RecordType("<1602,1603,28>",(f)); Inst0++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1618,1628,29>",(assertTrue)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1636,1637,29>",(f)); Inst3++; } } catch(e) {}
assertTrue(typeof f() == 'undefined');
try { if (Inst5 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1665,1673,30>",(Function)); Inst5++; } } catch(e) {}
f = new Function();
try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<1657,1658,30>",(f)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1677,1687,31>",(assertTrue)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f) != "undefined") {_RecordType("<1695,1696,31>",(f)); Inst7++; } } catch(e) {}
assertTrue(typeof f() == 'undefined');

try { if (Inst9 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1721,1729,33>",(Function)); Inst9++; } } catch(e) {}
f = Function('return 1');
try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<1717,1718,33>",(f)); Inst8++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1743,1755,34>",(assertEquals)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f) != "undefined") {_RecordType("<1759,1760,34>",(f)); Inst11++; } } catch(e) {}
assertEquals(1, f());
try { if (Inst13 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1773,1781,35>",(Function)); Inst13++; } } catch(e) {}
f = new Function('return 1');
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<1765,1766,35>",(f)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1795,1807,36>",(assertEquals)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<1811,1812,36>",(f)); Inst15++; } } catch(e) {}
assertEquals(1, f());

try { if (Inst17 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1822,1830,38>",(Function)); Inst17++; } } catch(e) {}
f = Function('return true');
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<1818,1819,38>",(f)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1847,1857,39>",(assertTrue)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f) != "undefined") {_RecordType("<1858,1859,39>",(f)); Inst19++; } } catch(e) {}
assertTrue(f());
try { if (Inst21 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1872,1880,40>",(Function)); Inst21++; } } catch(e) {}
f = new Function('return true');
try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<1864,1865,40>",(f)); Inst20++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1897,1907,41>",(assertTrue)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<1908,1909,41>",(f)); Inst23++; } } catch(e) {}
assertTrue(f());

try { if (Inst25 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1919,1927,43>",(Function)); Inst25++; } } catch(e) {}
f = Function('x', 'return x');
try { if (Inst24 <= 1000 && typeof (f) != "undefined") {_RecordType("<1915,1916,43>",(f)); Inst24++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1946,1958,44>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f) != "undefined") {_RecordType("<1962,1963,44>",(f)); Inst27++; } } catch(e) {}
assertEquals(1, f(1));
try { if (Inst28 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1969,1981,45>",(assertEquals)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f) != "undefined") {_RecordType("<1989,1990,45>",(f)); Inst29++; } } catch(e) {}
assertEquals('bar', f('bar'));
try { if (Inst30 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2000,2010,46>",(assertTrue)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<2018,2019,46>",(f)); Inst31++; } } catch(e) {}
assertTrue(typeof f() == 'undefined');
var x = {};
try { if (Inst32 <= 1000 && typeof (x) != "undefined") {_RecordType("<2043,2044,47>",(x)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2051,2061,48>",(assertTrue)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<2062,2063,48>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f) != "undefined") {_RecordType("<2068,2069,48>",(f)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<2070,2071,48>",(x)); Inst36++; } } catch(e) {}
assertTrue(x === f(x));

try { if (Inst38 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2080,2088,50>",(Function)); Inst38++; } } catch(e) {}
f = Function('x', 'return x // comment');
try { if (Inst37 <= 1000 && typeof (f) != "undefined") {_RecordType("<2076,2077,50>",(f)); Inst37++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2118,2130,51>",(assertEquals)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f) != "undefined") {_RecordType("<2134,2135,51>",(f)); Inst40++; } } catch(e) {}
assertEquals(1, f(1));

try { if (Inst42 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2146,2154,53>",(Function)); Inst42++; } } catch(e) {}
f = Function('return typeof anonymous');
try { if (Inst41 <= 1000 && typeof (f) != "undefined") {_RecordType("<2142,2143,53>",(f)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2183,2195,54>",(assertEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (f) != "undefined") {_RecordType("<2209,2210,54>",(f)); Inst44++; } } catch(e) {}
assertEquals('undefined', f());

var anonymous = 42;
try { if (Inst45 <= 1000 && typeof (anonymous) != "undefined") {_RecordType("<2220,2229,56>",(anonymous)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2240,2248,57>",(Function)); Inst47++; } } catch(e) {}
f = Function('return anonymous;');
try { if (Inst46 <= 1000 && typeof (f) != "undefined") {_RecordType("<2236,2237,57>",(f)); Inst46++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2271,2283,58>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (f) != "undefined") {_RecordType("<2288,2289,58>",(f)); Inst49++; } } catch(e) {}
assertEquals(42, f());

try { if (Inst51 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2303,2311,60>",(Function)); Inst51++; } } catch(e) {}
f = new Function('x', 'return x')
try { if (Inst50 <= 1000 && typeof (f) != "undefined") {_RecordType("<2295,2296,60>",(f)); Inst50++; } } catch(e) {}
try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2329,2341,61>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (f) != "undefined") {_RecordType("<2345,2346,61>",(f)); Inst53++; } } catch(e) {}
assertEquals(1, f(1));
try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2352,2364,62>",(assertEquals)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (f) != "undefined") {_RecordType("<2372,2373,62>",(f)); Inst55++; } } catch(e) {}
assertEquals('bar', f('bar'));
try { if (Inst56 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2383,2393,63>",(assertTrue)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (f) != "undefined") {_RecordType("<2401,2402,63>",(f)); Inst57++; } } catch(e) {}
assertTrue(typeof f() == 'undefined');
var x = {};
try { if (Inst58 <= 1000 && typeof (x) != "undefined") {_RecordType("<2426,2427,64>",(x)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2434,2444,65>",(assertTrue)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (x) != "undefined") {_RecordType("<2445,2446,65>",(x)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (f) != "undefined") {_RecordType("<2451,2452,65>",(f)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<2453,2454,65>",(x)); Inst62++; } } catch(e) {}
assertTrue(x === f(x));

try { if (Inst64 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2463,2471,67>",(Function)); Inst64++; } } catch(e) {}
f = Function('x', 'y', 'return x+y');
try { if (Inst63 <= 1000 && typeof (f) != "undefined") {_RecordType("<2459,2460,67>",(f)); Inst63++; } } catch(e) {}
try { if (Inst65 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2497,2509,68>",(assertEquals)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (f) != "undefined") {_RecordType("<2513,2514,68>",(f)); Inst66++; } } catch(e) {}
assertEquals(5, f(2, 3));
try { if (Inst67 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2523,2535,69>",(assertEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (f) != "undefined") {_RecordType("<2546,2547,69>",(f)); Inst68++; } } catch(e) {}
assertEquals('foobar', f('foo', 'bar'));
try { if (Inst70 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2572,2580,70>",(Function)); Inst70++; } } catch(e) {}
f = new Function('x', 'y', 'return x+y');
try { if (Inst69 <= 1000 && typeof (f) != "undefined") {_RecordType("<2564,2565,70>",(f)); Inst69++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2606,2618,71>",(assertEquals)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (f) != "undefined") {_RecordType("<2622,2623,71>",(f)); Inst72++; } } catch(e) {}
assertEquals(5, f(2, 3));
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2632,2644,72>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (f) != "undefined") {_RecordType("<2655,2656,72>",(f)); Inst74++; } } catch(e) {}
assertEquals('foobar', f('foo', 'bar'));

var x = {}; x.toString = function() { return 'x'; };
try { if (Inst75 <= 1000 && typeof (x) != "undefined") {_RecordType("<2678,2679,74>",(x)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (x.toString) != "undefined") {_RecordType("<2686,2696,74>",(x.toString)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (x) != "undefined") {_RecordType("<2686,2687,74>",(x)); Inst77++; } } catch(e) {}
var y = {}; y.toString = function() { return 'y'; };
try { if (Inst78 <= 1000 && typeof (y) != "undefined") {_RecordType("<2731,2732,75>",(y)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (y.toString) != "undefined") {_RecordType("<2739,2749,75>",(y.toString)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (y) != "undefined") {_RecordType("<2739,2740,75>",(y)); Inst80++; } } catch(e) {}
var z = {}; z.toString = function() { return 'return x*y'; }
try { if (Inst81 <= 1000 && typeof (z) != "undefined") {_RecordType("<2784,2785,76>",(z)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (z.toString) != "undefined") {_RecordType("<2792,2802,76>",(z.toString)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (z) != "undefined") {_RecordType("<2792,2793,76>",(z)); Inst83++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2849,2857,77>",(Function)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (x) != "undefined") {_RecordType("<2858,2859,77>",(x)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (y) != "undefined") {_RecordType("<2861,2862,77>",(y)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (z) != "undefined") {_RecordType("<2864,2865,77>",(z)); Inst88++; } } catch(e) {}
var f = Function(x, y, z);
try { if (Inst84 <= 1000 && typeof (f) != "undefined") {_RecordType("<2845,2846,77>",(f)); Inst84++; } } catch(e) {}
try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2868,2880,78>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (f) != "undefined") {_RecordType("<2885,2886,78>",(f)); Inst90++; } } catch(e) {}
assertEquals(25, f(5, 5));
try { if (Inst91 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2895,2907,79>",(assertEquals)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (f) != "undefined") {_RecordType("<2912,2913,79>",(f)); Inst92++; } } catch(e) {}
assertEquals(42, f(2, 21));
try { if (Inst94 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2931,2939,80>",(Function)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (x) != "undefined") {_RecordType("<2940,2941,80>",(x)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (y) != "undefined") {_RecordType("<2943,2944,80>",(y)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (z) != "undefined") {_RecordType("<2946,2947,80>",(z)); Inst97++; } } catch(e) {}
f = new Function(x, y, z);
try { if (Inst93 <= 1000 && typeof (f) != "undefined") {_RecordType("<2923,2924,80>",(f)); Inst93++; } } catch(e) {}
try { if (Inst98 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2950,2962,81>",(assertEquals)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (f) != "undefined") {_RecordType("<2967,2968,81>",(f)); Inst99++; } } catch(e) {}
assertEquals(25, f(5, 5));
try { if (Inst100 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2977,2989,82>",(assertEquals)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (f) != "undefined") {_RecordType("<2994,2995,82>",(f)); Inst101++; } } catch(e) {}
assertEquals(42, f(2, 21));

