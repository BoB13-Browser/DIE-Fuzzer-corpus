var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Load implementations from <project root>/tools.
// Files: tools/csvparser.js tools/splaytree.js tools/codemap.js
// Files: tools/consarray.js tools/profile.js tools/profile_view.js
// Files: tools/logreader.js tools/tickprocessor.js
// Files: tools/profviz/composer.js
// Env: TEST_FILE_NAME

try { if (Inst0 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1894,1906,35>",(assertEquals)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<1924,1938,35>",(TEST_FILE_NAME)); Inst1++; } } catch(e) {}
assertEquals('string', typeof TEST_FILE_NAME);
try { if (Inst3 <= 1000 && typeof (TEST_FILE_NAME.lastIndexOf) != "undefined") {_RecordType("<1959,1985,36>",(TEST_FILE_NAME.lastIndexOf)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<1959,1973,36>",(TEST_FILE_NAME)); Inst4++; } } catch(e) {}
var path_length = TEST_FILE_NAME.lastIndexOf('/');
try { if (Inst2 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<1945,1956,36>",(path_length)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<1996,2007,37>",(path_length)); Inst5++; } } catch(e) {}
if (path_length == -1) {
try { if (Inst7 <= 1000 && typeof (TEST_FILE_NAME.lastIndexOf) != "undefined") {_RecordType("<2033,2059,38>",(TEST_FILE_NAME.lastIndexOf)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<2033,2047,38>",(TEST_FILE_NAME)); Inst8++; } } catch(e) {}
  path_length = TEST_FILE_NAME.lastIndexOf('\\');
try { if (Inst6 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2019,2030,38>",(path_length)); Inst6++; } } catch(e) {}
}
try { if (Inst9 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2069,2079,40>",(assertTrue)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2080,2091,40>",(path_length)); Inst10++; } } catch(e) {}
assertTrue(path_length != -1);

try { if (Inst12 <= 1000 && typeof (TEST_FILE_NAME.substr) != "undefined") {_RecordType("<2112,2133,42>",(TEST_FILE_NAME.substr)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (TEST_FILE_NAME) != "undefined") {_RecordType("<2112,2126,42>",(TEST_FILE_NAME)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (path_length) != "undefined") {_RecordType("<2137,2148,42>",(path_length)); Inst14++; } } catch(e) {}
var path = TEST_FILE_NAME.substr(0, path_length + 1);
try { if (Inst11 <= 1000 && typeof (path) != "undefined") {_RecordType("<2105,2109,42>",(path)); Inst11++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (path) != "undefined") {_RecordType("<2172,2176,43>",(path)); Inst16++; } } catch(e) {}
var input_file = path + "profviz-test.log";
try { if (Inst15 <= 1000 && typeof (input_file) != "undefined") {_RecordType("<2159,2169,43>",(input_file)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (path) != "undefined") {_RecordType("<2220,2224,44>",(path)); Inst18++; } } catch(e) {}
var reference_file = path + "profviz-test.default";
try { if (Inst17 <= 1000 && typeof (reference_file) != "undefined") {_RecordType("<2203,2217,44>",(reference_file)); Inst17++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (read(input_file).split) != "undefined") {_RecordType("<2272,2294,46>",(read(input_file).split)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (read) != "undefined") {_RecordType("<2272,2276,46>",(read)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (input_file) != "undefined") {_RecordType("<2277,2287,46>",(input_file)); Inst22++; } } catch(e) {}
var content_lines = read(input_file).split("\n");
try { if (Inst19 <= 1000 && typeof (content_lines) != "undefined") {_RecordType("<2256,2269,46>",(content_lines)); Inst19++; } } catch(e) {}
var line_cursor = 0;
try { if (Inst23 <= 1000 && typeof (line_cursor) != "undefined") {_RecordType("<2306,2317,47>",(line_cursor)); Inst23++; } } catch(e) {}
var output_lines = [];
try { if (Inst24 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<2327,2339,48>",(output_lines)); Inst24++; } } catch(e) {}

try { if (Inst25 <= 1000 && typeof (input) != "undefined") {_RecordType("<2356,2361,50>",(input)); Inst25++; } } catch(e) {}
function input() {
try { if (Inst26 <= 1000 && typeof (content_lines[line_cursor++]) != "undefined") {_RecordType("<2375,2403,51>",(content_lines[line_cursor++])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (content_lines) != "undefined") {_RecordType("<2375,2388,51>",(content_lines)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (line_cursor) != "undefined") {_RecordType("<2389,2400,51>",(line_cursor)); Inst28++; } } catch(e) {}
  return content_lines[line_cursor++];
}

try { if (Inst29 <= 1000 && typeof (output) != "undefined") {_RecordType("<2417,2423,54>",(output)); Inst29++; } } catch(e) {}
function output(line) {
try { if (Inst30 <= 1000 && typeof (line) != "undefined") {_RecordType("<2424,2428,54>",(line)); Inst30++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (output_lines.push) != "undefined") {_RecordType("<2434,2451,55>",(output_lines.push)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<2434,2446,55>",(output_lines)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (line) != "undefined") {_RecordType("<2452,2456,55>",(line)); Inst33++; } } catch(e) {}
  output_lines.push(line);
}

try { if (Inst34 <= 1000 && typeof (set_range) != "undefined") {_RecordType("<2471,2480,58>",(set_range)); Inst34++; } } catch(e) {}
function set_range(start, end) {
try { if (Inst35 <= 1000 && typeof (start) != "undefined") {_RecordType("<2481,2486,58>",(start)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (end) != "undefined") {_RecordType("<2488,2491,58>",(end)); Inst36++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (start) != "undefined") {_RecordType("<2511,2516,59>",(start)); Inst38++; } } catch(e) {}
  range_start = start;
try { if (Inst37 <= 1000 && typeof (range_start) != "undefined") {_RecordType("<2497,2508,59>",(range_start)); Inst37++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (end) != "undefined") {_RecordType("<2532,2535,60>",(end)); Inst40++; } } catch(e) {}
  range_end = end;
try { if (Inst39 <= 1000 && typeof (range_end) != "undefined") {_RecordType("<2520,2529,60>",(range_end)); Inst39++; } } catch(e) {}
}

var distortion = 4500 / 1000000;
try { if (Inst41 <= 1000 && typeof (distortion) != "undefined") {_RecordType("<2544,2554,63>",(distortion)); Inst41++; } } catch(e) {}
var resx = 1600;
try { if (Inst42 <= 1000 && typeof (resx) != "undefined") {_RecordType("<2577,2581,64>",(resx)); Inst42++; } } catch(e) {}
var resy = 600;
try { if (Inst43 <= 1000 && typeof (resy) != "undefined") {_RecordType("<2594,2598,65>",(resy)); Inst43++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (PlotScriptComposer) != "undefined") {_RecordType("<2621,2639,67>",(PlotScriptComposer)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (resx) != "undefined") {_RecordType("<2640,2644,67>",(resx)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (resy) != "undefined") {_RecordType("<2646,2650,67>",(resy)); Inst47++; } } catch(e) {}
var psc = new PlotScriptComposer(resx, resy);
try { if (Inst44 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2611,2614,67>",(psc)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (psc.collectData) != "undefined") {_RecordType("<2653,2668,68>",(psc.collectData)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2653,2656,68>",(psc)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (input) != "undefined") {_RecordType("<2669,2674,68>",(input)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (distortion) != "undefined") {_RecordType("<2676,2686,68>",(distortion)); Inst51++; } } catch(e) {}
psc.collectData(input, distortion);
try { if (Inst52 <= 1000 && typeof (psc.findPlotRange) != "undefined") {_RecordType("<2689,2706,69>",(psc.findPlotRange)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2689,2692,69>",(psc)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2707,2716,69>",(undefined)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2718,2727,69>",(undefined)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (set_range) != "undefined") {_RecordType("<2729,2738,69>",(set_range)); Inst56++; } } catch(e) {}
psc.findPlotRange(undefined, undefined, set_range);
try { if (Inst58 <= 1000 && typeof (psc.assembleOutput) != "undefined") {_RecordType("<2755,2773,70>",(psc.assembleOutput)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (psc) != "undefined") {_RecordType("<2755,2758,70>",(psc)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (output) != "undefined") {_RecordType("<2774,2780,70>",(output)); Inst60++; } } catch(e) {}
var objects = psc.assembleOutput(output);
try { if (Inst57 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2745,2752,70>",(objects)); Inst57++; } } catch(e) {}

try { if (Inst61 <= 1000 && typeof (output) != "undefined") {_RecordType("<2784,2790,72>",(output)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (range_start) != "undefined") {_RecordType("<2805,2816,72>",(range_start)); Inst62++; } } catch(e) {}
output("# start: " + range_start);
try { if (Inst63 <= 1000 && typeof (output) != "undefined") {_RecordType("<2819,2825,73>",(output)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (range_end) != "undefined") {_RecordType("<2838,2847,73>",(range_end)); Inst64++; } } catch(e) {}
output("# end: " + range_end);
try { if (Inst65 <= 1000 && typeof (output) != "undefined") {_RecordType("<2850,2856,74>",(output)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (objects) != "undefined") {_RecordType("<2873,2880,74>",(objects)); Inst66++; } } catch(e) {}
output("# objects: " + objects);

var create_baseline = false;
try { if (Inst67 <= 1000 && typeof (create_baseline) != "undefined") {_RecordType("<2888,2903,76>",(create_baseline)); Inst67++; } } catch(e) {}

try { if (Inst68 <= 1000 && typeof (create_baseline) != "undefined") {_RecordType("<2918,2933,78>",(create_baseline)); Inst68++; } } catch(e) {}
if (create_baseline) {
try { if (Inst69 <= 1000 && typeof (print) != "undefined") {_RecordType("<2939,2944,79>",(print)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2945,2959,79>",(JSON.stringify)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2945,2949,79>",(JSON)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<2960,2972,79>",(output_lines)); Inst72++; } } catch(e) {}
  print(JSON.stringify(output_lines, null, 2));
} else {
try { if (Inst73 <= 1000 && typeof (assertArrayEquals) != "undefined") {_RecordType("<2996,3013,81>",(assertArrayEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (output_lines) != "undefined") {_RecordType("<3014,3026,81>",(output_lines)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<3048,3058,82>",(JSON.parse)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<3048,3052,82>",(JSON)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (read) != "undefined") {_RecordType("<3059,3063,82>",(read)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (reference_file) != "undefined") {_RecordType("<3064,3078,82>",(reference_file)); Inst78++; } } catch(e) {}
  assertArrayEquals(output_lines,
                    JSON.parse(read(reference_file)));
}

