var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --expose-debug-as debug

// Test we break at every assignment in a var-statement with multiple
// variable declarations.

var exception = null;
try { if (Inst0 <= 1000 && typeof (exception) != "undefined") {_RecordType("<304,313,10>",(exception)); Inst0++; } } catch(e) {}
var log = []
try { if (Inst1 <= 1000 && typeof (log) != "undefined") {_RecordType("<326,329,11>",(log)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<345,346,13>",(f)); Inst2++; } } catch(e) {}
function f() {
  var l1 = 1,    // l
      l2,        // m
      l3 = 3;    // n
try { if (Inst3 <= 1000 && typeof (l1) != "undefined") {_RecordType("<357,359,14>",(l1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (l2) != "undefined") {_RecordType("<379,381,15>",(l2)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (l3) != "undefined") {_RecordType("<401,403,16>",(l3)); Inst5++; } } catch(e) {}
  let l4,        // o
      l5 = 5,    // p
      l6 = 6;    // q
try { if (Inst6 <= 1000 && typeof (l4) != "undefined") {_RecordType("<423,425,17>",(l4)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (l5) != "undefined") {_RecordType("<445,447,18>",(l5)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (l6) != "undefined") {_RecordType("<467,469,19>",(l6)); Inst8++; } } catch(e) {}
  const l7 = 7,  // r
        l8 = 8,  // s
        l9 = 9;  // t
try { if (Inst9 <= 1000 && typeof (l7) != "undefined") {_RecordType("<491,493,20>",(l7)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (l8) != "undefined") {_RecordType("<513,515,21>",(l8)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (l9) != "undefined") {_RecordType("<535,537,22>",(l9)); Inst11++; } } catch(e) {}
  return 0;      // u
}                // v

try { if (Inst12 <= 1000 && typeof (listener) != "undefined") {_RecordType("<603,611,26>",(listener)); Inst12++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst13 <= 1000 && typeof (event) != "undefined") {_RecordType("<612,617,26>",(event)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<619,629,26>",(exec_state)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<631,641,26>",(event_data)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (data) != "undefined") {_RecordType("<643,647,26>",(data)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (event) != "undefined") {_RecordType("<657,662,27>",(event)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<666,688,27>",(Debug.DebugEvent.Break)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<666,682,27>",(Debug.DebugEvent)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<666,671,27>",(Debug)); Inst20++; } } catch(e) {}
  if (event != Debug.DebugEvent.Break) return;
try { if (Inst49 <= 1000 && typeof (e) != "undefined") {_RecordType("<1032,1033,38>",(e)); Inst49++; } } catch(e) {}
  try {
try { if (Inst22 <= 1000 && typeof (exec_state.frame(0).sourceLineText) != "undefined") {_RecordType("<721,755,29>",(exec_state.frame(0).sourceLineText)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<721,737,29>",(exec_state.frame)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<721,731,29>",(exec_state)); Inst24++; } } catch(e) {}
    var line = exec_state.frame(0).sourceLineText();
try { if (Inst21 <= 1000 && typeof (line) != "undefined") {_RecordType("<714,718,29>",(line)); Inst21++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (exec_state.frame(0).sourceColumn) != "undefined") {_RecordType("<773,805,30>",(exec_state.frame(0).sourceColumn)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (exec_state.frame) != "undefined") {_RecordType("<773,789,30>",(exec_state.frame)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<773,783,30>",(exec_state)); Inst28++; } } catch(e) {}
    var col = exec_state.frame(0).sourceColumn();
try { if (Inst25 <= 1000 && typeof (col) != "undefined") {_RecordType("<767,770,30>",(col)); Inst25++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (print) != "undefined") {_RecordType("<813,818,31>",(print)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (line) != "undefined") {_RecordType("<819,823,31>",(line)); Inst30++; } } catch(e) {}
    print(line);
try { if (Inst32 <= 1000 && typeof (line.match) != "undefined") {_RecordType("<842,852,32>",(line.match)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (line) != "undefined") {_RecordType("<842,846,32>",(line)); Inst33++; } } catch(e) {}
    var match = line.match(/\/\/ (\w)$/);
try { if (Inst31 <= 1000 && typeof (match) != "undefined") {_RecordType("<834,839,32>",(match)); Inst31++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<872,884,33>",(assertEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (match.length) != "undefined") {_RecordType("<888,900,33>",(match.length)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (match) != "undefined") {_RecordType("<888,893,33>",(match)); Inst36++; } } catch(e) {}
    assertEquals(2, match.length);
try { if (Inst37 <= 1000 && typeof (log.push) != "undefined") {_RecordType("<907,915,34>",(log.push)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (log) != "undefined") {_RecordType("<907,910,34>",(log)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (match[1]) != "undefined") {_RecordType("<916,924,34>",(match[1])); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (match) != "undefined") {_RecordType("<916,921,34>",(match)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (col) != "undefined") {_RecordType("<927,930,34>",(col)); Inst41++; } } catch(e) {}
    log.push(match[1] + col);
try { if (Inst42 <= 1000 && typeof (match[1]) != "undefined") {_RecordType("<941,949,35>",(match[1])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (match) != "undefined") {_RecordType("<941,946,35>",(match)); Inst43++; } } catch(e) {}
    if (match[1] != "v") {
try { if (Inst44 <= 1000 && typeof (exec_state.prepareStep) != "undefined") {_RecordType("<966,988,36>",(exec_state.prepareStep)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<966,976,36>",(exec_state)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Debug.StepAction.StepIn) != "undefined") {_RecordType("<989,1012,36>",(Debug.StepAction.StepIn)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (Debug.StepAction) != "undefined") {_RecordType("<989,1005,36>",(Debug.StepAction)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<989,994,36>",(Debug)); Inst48++; } } catch(e) {}
      exec_state.prepareStep(Debug.StepAction.StepIn);
    }
  } catch (e) {
try { if (Inst51 <= 1000 && typeof (e) != "undefined") {_RecordType("<1053,1054,39>",(e)); Inst51++; } } catch(e) {}
    exception = e;
try { if (Inst50 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1041,1050,39>",(exception)); Inst50++; } } catch(e) {}
  }
}

try { if (Inst53 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1075,1086,43>",(debug.Debug)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1075,1080,43>",(debug)); Inst54++; } } catch(e) {}
var Debug = debug.Debug;
try { if (Inst52 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1067,1072,43>",(Debug)); Inst52++; } } catch(e) {}
try { if (Inst55 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<1088,1105,44>",(Debug.setListener)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1088,1093,44>",(Debug)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (listener) != "undefined") {_RecordType("<1106,1114,44>",(listener)); Inst57++; } } catch(e) {}
Debug.setListener(listener);

debugger;        // a
var g1 = 1,      // b
    g2 = 2,      // c
    g3;          // d
try { if (Inst58 <= 1000 && typeof (g1) != "undefined") {_RecordType("<1144,1146,47>",(g1)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (g2) != "undefined") {_RecordType("<1166,1168,48>",(g2)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (g3) != "undefined") {_RecordType("<1188,1190,49>",(g3)); Inst60++; } } catch(e) {}
let g4 = 4,      // e
    g5,          // f
    g6 = 6;      // g
try { if (Inst61 <= 1000 && typeof (g4) != "undefined") {_RecordType("<1210,1212,50>",(g4)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (g5) != "undefined") {_RecordType("<1232,1234,51>",(g5)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (g6) != "undefined") {_RecordType("<1254,1256,52>",(g6)); Inst63++; } } catch(e) {}
try { if (Inst67 <= 1000 && typeof (f) != "undefined") {_RecordType("<1327,1328,55>",(f)); Inst67++; } } catch(e) {}
const g7 = 7,    // h
      g8 = 8,    // i
      g9 = f();  // j
try { if (Inst64 <= 1000 && typeof (g7) != "undefined") {_RecordType("<1278,1280,53>",(g7)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (g8) != "undefined") {_RecordType("<1300,1302,54>",(g8)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (g9) != "undefined") {_RecordType("<1322,1324,55>",(g9)); Inst66++; } } catch(e) {}

try { if (Inst68 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<1339,1356,57>",(Debug.setListener)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1339,1344,57>",(Debug)); Inst69++; } } catch(e) {}
Debug.setListener(null);

try { if (Inst70 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<1365,1375,59>",(assertNull)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1376,1385,59>",(exception)); Inst71++; } } catch(e) {}
assertNull(exception);

// Note that let declarations, if not explicitly initialized, implicitly
// initialize to undefined.

var expected = [
  "a0",               // debugger statement
  "b9","c9",          // global var
  "e9","f4","g9",     // global let
  "h11","i11","j11",  // global const
  "l11","n11",        // local var
  "o6","p11","q11",   // local let
  "r13","s13","t13",  // local const
  "u2","v0",          // return
];
try { if (Inst72 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1495,1503,64>",(expected)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1804,1816,74>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (expected) != "undefined") {_RecordType("<1817,1825,74>",(expected)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (log) != "undefined") {_RecordType("<1827,1830,74>",(log)); Inst75++; } } catch(e) {}
assertEquals(expected, log);

