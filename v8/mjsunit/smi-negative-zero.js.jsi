var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Ensure that operations on small integers handle -0.

var zero = 0;
try { if (Inst0 <= 1000 && typeof (zero) != "undefined") {_RecordType("<1658,1662,30>",(zero)); Inst0++; } } catch(e) {}
var one = 1;
try { if (Inst1 <= 1000 && typeof (one) != "undefined") {_RecordType("<1672,1675,31>",(one)); Inst1++; } } catch(e) {}
var minus_one = -1;
try { if (Inst2 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<1685,1694,32>",(minus_one)); Inst2++; } } catch(e) {}
var two = 2;
try { if (Inst3 <= 1000 && typeof (two) != "undefined") {_RecordType("<1705,1708,33>",(two)); Inst3++; } } catch(e) {}
var four = 4;
try { if (Inst4 <= 1000 && typeof (four) != "undefined") {_RecordType("<1718,1722,34>",(four)); Inst4++; } } catch(e) {}
var minus_two = -2;
try { if (Inst5 <= 1000 && typeof (minus_two) != "undefined") {_RecordType("<1732,1741,35>",(minus_two)); Inst5++; } } catch(e) {}
var minus_four = -4;
try { if (Inst6 <= 1000 && typeof (minus_four) != "undefined") {_RecordType("<1752,1762,36>",(minus_four)); Inst6++; } } catch(e) {}

// variable op variable

try { if (Inst7 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1795,1807,40>",(assertEquals)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1809,1817,40>",(Infinity)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (one) != "undefined") {_RecordType("<1819,1822,40>",(one)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (zero) != "undefined") {_RecordType("<1827,1831,40>",(zero)); Inst10++; } } catch(e) {}
assertEquals(-Infinity, one / (-zero), "one / -0 I");

try { if (Inst11 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1850,1862,42>",(assertEquals)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1864,1872,42>",(Infinity)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (one) != "undefined") {_RecordType("<1874,1877,42>",(one)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (zero) != "undefined") {_RecordType("<1881,1885,42>",(zero)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<1888,1897,42>",(minus_one)); Inst15++; } } catch(e) {}
assertEquals(-Infinity, one / (zero * minus_one), "one / -1");
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1913,1925,43>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1927,1935,43>",(Infinity)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (one) != "undefined") {_RecordType("<1937,1940,43>",(one)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<1944,1953,43>",(minus_one)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (zero) != "undefined") {_RecordType("<1956,1960,43>",(zero)); Inst20++; } } catch(e) {}
assertEquals(-Infinity, one / (minus_one * zero), "one / -0 II");
try { if (Inst21 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1979,1991,44>",(assertEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<1992,2000,44>",(Infinity)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (one) != "undefined") {_RecordType("<2002,2005,44>",(one)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (zero) != "undefined") {_RecordType("<2009,2013,44>",(zero)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (zero) != "undefined") {_RecordType("<2016,2020,44>",(zero)); Inst25++; } } catch(e) {}
assertEquals(Infinity, one / (zero * zero), "one / 0 I");
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2037,2049,45>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (one) != "undefined") {_RecordType("<2053,2056,45>",(one)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<2060,2069,45>",(minus_one)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<2072,2081,45>",(minus_one)); Inst29++; } } catch(e) {}
assertEquals(1, one / (minus_one * minus_one), "one / 1");

try { if (Inst30 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2097,2109,47>",(assertEquals)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2111,2119,47>",(Infinity)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (one) != "undefined") {_RecordType("<2121,2124,47>",(one)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (zero) != "undefined") {_RecordType("<2128,2132,47>",(zero)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<2135,2144,47>",(minus_one)); Inst34++; } } catch(e) {}
assertEquals(-Infinity, one / (zero / minus_one), "one / -0 III");
try { if (Inst35 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2164,2176,48>",(assertEquals)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2177,2185,48>",(Infinity)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (one) != "undefined") {_RecordType("<2187,2190,48>",(one)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (zero) != "undefined") {_RecordType("<2194,2198,48>",(zero)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (one) != "undefined") {_RecordType("<2201,2204,48>",(one)); Inst39++; } } catch(e) {}
assertEquals(Infinity, one / (zero / one), "one / 0 II");

try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2223,2235,50>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2237,2245,50>",(Infinity)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (one) != "undefined") {_RecordType("<2247,2250,50>",(one)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (minus_four) != "undefined") {_RecordType("<2254,2264,50>",(minus_four)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (two) != "undefined") {_RecordType("<2267,2270,50>",(two)); Inst44++; } } catch(e) {}
assertEquals(-Infinity, one / (minus_four % two), "foo1");
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2282,2294,51>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2296,2304,51>",(Infinity)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (one) != "undefined") {_RecordType("<2306,2309,51>",(one)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (minus_four) != "undefined") {_RecordType("<2313,2323,51>",(minus_four)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (minus_two) != "undefined") {_RecordType("<2326,2335,51>",(minus_two)); Inst49++; } } catch(e) {}
assertEquals(-Infinity, one / (minus_four % minus_two), "foo2");
try { if (Inst50 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2347,2359,52>",(assertEquals)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2360,2368,52>",(Infinity)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (one) != "undefined") {_RecordType("<2370,2373,52>",(one)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (four) != "undefined") {_RecordType("<2377,2381,52>",(four)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (two) != "undefined") {_RecordType("<2384,2387,52>",(two)); Inst54++; } } catch(e) {}
assertEquals(Infinity, one / (four % two), "foo3");
try { if (Inst55 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2399,2411,53>",(assertEquals)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2412,2420,53>",(Infinity)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (one) != "undefined") {_RecordType("<2422,2425,53>",(one)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (four) != "undefined") {_RecordType("<2429,2433,53>",(four)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (minus_two) != "undefined") {_RecordType("<2436,2445,53>",(minus_two)); Inst59++; } } catch(e) {}
assertEquals(Infinity, one / (four % minus_two), "foo4");

// literal op variable

try { if (Inst60 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2482,2494,57>",(assertEquals)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2496,2504,57>",(Infinity)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (one) != "undefined") {_RecordType("<2506,2509,57>",(one)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<2517,2526,57>",(minus_one)); Inst63++; } } catch(e) {}
assertEquals(-Infinity, one / (0 * minus_one), "bar1");
try { if (Inst64 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2538,2550,58>",(assertEquals)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2552,2560,58>",(Infinity)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (one) != "undefined") {_RecordType("<2562,2565,58>",(one)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (zero) != "undefined") {_RecordType("<2574,2578,58>",(zero)); Inst67++; } } catch(e) {}
assertEquals(-Infinity, one / (-1 * zero), "bar2");
try { if (Inst68 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2590,2602,59>",(assertEquals)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2603,2611,59>",(Infinity)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (one) != "undefined") {_RecordType("<2613,2616,59>",(one)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (zero) != "undefined") {_RecordType("<2624,2628,59>",(zero)); Inst71++; } } catch(e) {}
assertEquals(Infinity, one / (0 * zero), "bar3");
try { if (Inst72 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2640,2652,60>",(assertEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (one) != "undefined") {_RecordType("<2656,2659,60>",(one)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<2668,2677,60>",(minus_one)); Inst74++; } } catch(e) {}
assertEquals(1, one / (-1 * minus_one), "bar4");

try { if (Inst75 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2690,2702,62>",(assertEquals)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2704,2712,62>",(Infinity)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (one) != "undefined") {_RecordType("<2714,2717,62>",(one)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<2725,2734,62>",(minus_one)); Inst78++; } } catch(e) {}
assertEquals(-Infinity, one / (0 / minus_one), "baz1");
try { if (Inst79 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2746,2758,63>",(assertEquals)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2759,2767,63>",(Infinity)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (one) != "undefined") {_RecordType("<2769,2772,63>",(one)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (one) != "undefined") {_RecordType("<2780,2783,63>",(one)); Inst82++; } } catch(e) {}
assertEquals(Infinity, one / (0 / one), "baz2");

try { if (Inst83 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2796,2808,65>",(assertEquals)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2810,2818,65>",(Infinity)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (one) != "undefined") {_RecordType("<2820,2823,65>",(one)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (two) != "undefined") {_RecordType("<2832,2835,65>",(two)); Inst86++; } } catch(e) {}
assertEquals(-Infinity, one / (-4 % two), "baz3");
try { if (Inst87 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2847,2859,66>",(assertEquals)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2861,2869,66>",(Infinity)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (one) != "undefined") {_RecordType("<2871,2874,66>",(one)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (minus_two) != "undefined") {_RecordType("<2883,2892,66>",(minus_two)); Inst90++; } } catch(e) {}
assertEquals(-Infinity, one / (-4 % minus_two), "baz4");
try { if (Inst91 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2904,2916,67>",(assertEquals)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2917,2925,67>",(Infinity)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (one) != "undefined") {_RecordType("<2927,2930,67>",(one)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (two) != "undefined") {_RecordType("<2938,2941,67>",(two)); Inst94++; } } catch(e) {}
assertEquals(Infinity, one / (4 % two), "baz5");
try { if (Inst95 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2953,2965,68>",(assertEquals)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<2966,2974,68>",(Infinity)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (one) != "undefined") {_RecordType("<2976,2979,68>",(one)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (minus_two) != "undefined") {_RecordType("<2987,2996,68>",(minus_two)); Inst98++; } } catch(e) {}
assertEquals(Infinity, one / (4 % minus_two), "baz6");

// variable op literal

try { if (Inst99 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3033,3045,72>",(assertEquals)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3047,3055,72>",(Infinity)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (one) != "undefined") {_RecordType("<3057,3060,72>",(one)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (zero) != "undefined") {_RecordType("<3064,3068,72>",(zero)); Inst102++; } } catch(e) {}
assertEquals(-Infinity, one / (zero * -1), "fizz1");
try { if (Inst103 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3086,3098,73>",(assertEquals)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3100,3108,73>",(Infinity)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (one) != "undefined") {_RecordType("<3110,3113,73>",(one)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<3117,3126,73>",(minus_one)); Inst106++; } } catch(e) {}
assertEquals(-Infinity, one / (minus_one * 0), "fizz2");
try { if (Inst107 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3143,3155,74>",(assertEquals)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3156,3164,74>",(Infinity)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (one) != "undefined") {_RecordType("<3166,3169,74>",(one)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (zero) != "undefined") {_RecordType("<3173,3177,74>",(zero)); Inst110++; } } catch(e) {}
assertEquals(Infinity, one / (zero * 0), "fizz3");
try { if (Inst111 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3194,3206,75>",(assertEquals)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (one) != "undefined") {_RecordType("<3210,3213,75>",(one)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (minus_one) != "undefined") {_RecordType("<3217,3226,75>",(minus_one)); Inst113++; } } catch(e) {}
assertEquals(1, one / (minus_one * -1), "fizz4");

try { if (Inst114 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3245,3257,77>",(assertEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3259,3267,77>",(Infinity)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (one) != "undefined") {_RecordType("<3269,3272,77>",(one)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (zero) != "undefined") {_RecordType("<3276,3280,77>",(zero)); Inst117++; } } catch(e) {}
assertEquals(-Infinity, one / (zero / -1), "buzz1");
try { if (Inst118 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3298,3310,78>",(assertEquals)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3311,3319,78>",(Infinity)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (one) != "undefined") {_RecordType("<3321,3324,78>",(one)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (zero) != "undefined") {_RecordType("<3328,3332,78>",(zero)); Inst121++; } } catch(e) {}
assertEquals(Infinity, one / (zero / 1), "buzz2");

try { if (Inst122 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3350,3362,80>",(assertEquals)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3364,3372,80>",(Infinity)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (one) != "undefined") {_RecordType("<3374,3377,80>",(one)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (minus_four) != "undefined") {_RecordType("<3381,3391,80>",(minus_four)); Inst125++; } } catch(e) {}
assertEquals(-Infinity, one / (minus_four % 2), "buzz3");
try { if (Inst126 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3408,3420,81>",(assertEquals)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3422,3430,81>",(Infinity)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (one) != "undefined") {_RecordType("<3432,3435,81>",(one)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (minus_four) != "undefined") {_RecordType("<3439,3449,81>",(minus_four)); Inst129++; } } catch(e) {}
assertEquals(-Infinity, one / (minus_four % -2), "buzz4");
try { if (Inst130 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3467,3479,82>",(assertEquals)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3480,3488,82>",(Infinity)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (one) != "undefined") {_RecordType("<3490,3493,82>",(one)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (four) != "undefined") {_RecordType("<3497,3501,82>",(four)); Inst133++; } } catch(e) {}
assertEquals(Infinity, one / (four % 2), "buzz5");
try { if (Inst134 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3518,3530,83>",(assertEquals)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3531,3539,83>",(Infinity)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (one) != "undefined") {_RecordType("<3541,3544,83>",(one)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (four) != "undefined") {_RecordType("<3548,3552,83>",(four)); Inst137++; } } catch(e) {}
assertEquals(Infinity, one / (four % -2), "buzz6");

// literal op literal

try { if (Inst138 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3594,3606,87>",(assertEquals)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3608,3616,87>",(Infinity)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (one) != "undefined") {_RecordType("<3618,3621,87>",(one)); Inst140++; } } catch(e) {}
assertEquals(-Infinity, one / (-0), "fisk1");

try { if (Inst141 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3641,3653,89>",(assertEquals)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3655,3663,89>",(Infinity)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (one) != "undefined") {_RecordType("<3665,3668,89>",(one)); Inst143++; } } catch(e) {}
assertEquals(-Infinity, one / (0 * -1), "fisk2");
try { if (Inst144 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3691,3703,90>",(assertEquals)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3705,3713,90>",(Infinity)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (one) != "undefined") {_RecordType("<3715,3718,90>",(one)); Inst146++; } } catch(e) {}
assertEquals(-Infinity, one / (-1 * 0), "fisk3");
try { if (Inst147 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3741,3753,91>",(assertEquals)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3754,3762,91>",(Infinity)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (one) != "undefined") {_RecordType("<3764,3767,91>",(one)); Inst149++; } } catch(e) {}
assertEquals(Infinity, one / (0 * 0), "fisk4");
try { if (Inst150 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3789,3801,92>",(assertEquals)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (one) != "undefined") {_RecordType("<3805,3808,92>",(one)); Inst151++; } } catch(e) {}
assertEquals(1, one / (-1 * -1), "fisk5");

try { if (Inst152 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3833,3845,94>",(assertEquals)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3847,3855,94>",(Infinity)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (one) != "undefined") {_RecordType("<3857,3860,94>",(one)); Inst154++; } } catch(e) {}
assertEquals(-Infinity, one / (0 / -1), "hest1");
try { if (Inst155 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3883,3895,95>",(assertEquals)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3896,3904,95>",(Infinity)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (one) != "undefined") {_RecordType("<3906,3909,95>",(one)); Inst157++; } } catch(e) {}
assertEquals(Infinity, one / (0 / 1), "hest2");

try { if (Inst158 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3932,3944,97>",(assertEquals)); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<3946,3954,97>",(Infinity)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (one) != "undefined") {_RecordType("<3956,3959,97>",(one)); Inst160++; } } catch(e) {}
assertEquals(-Infinity, one / (-4 % 2), "fiskhest1");
try { if (Inst161 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3986,3998,98>",(assertEquals)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<4000,4008,98>",(Infinity)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (one) != "undefined") {_RecordType("<4010,4013,98>",(one)); Inst163++; } } catch(e) {}
assertEquals(-Infinity, one / (-4 % -2), "fiskhest2");
try { if (Inst164 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4041,4053,99>",(assertEquals)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<4054,4062,99>",(Infinity)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (one) != "undefined") {_RecordType("<4064,4067,99>",(one)); Inst166++; } } catch(e) {}
assertEquals(Infinity, one / (4 % 2), "fiskhest3");
try { if (Inst167 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4093,4105,100>",(assertEquals)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Infinity) != "undefined") {_RecordType("<4106,4114,100>",(Infinity)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (one) != "undefined") {_RecordType("<4116,4119,100>",(one)); Inst169++; } } catch(e) {}
assertEquals(Infinity, one / (4 % -2), "fiskhest4");


// This tests against a singleton -0.0 object being overwritten.gc
x = 0;
try { if (Inst170 <= 1000 && typeof (x) != "undefined") {_RecordType("<4215,4216,104>",(x)); Inst170++; } } catch(e) {}
z = 3044;
try { if (Inst171 <= 1000 && typeof (z) != "undefined") {_RecordType("<4222,4223,105>",(z)); Inst171++; } } catch(e) {}

try { if (Inst172 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4242,4245,107>",(foo)); Inst172++; } } catch(e) {}
function foo(x) {
try { if (Inst173 <= 1000 && typeof (x) != "undefined") {_RecordType("<4246,4247,107>",(x)); Inst173++; } } catch(e) {}
try { if (Inst175 <= 1000 && typeof (x) != "undefined") {_RecordType("<4262,4263,108>",(x)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (z) != "undefined") {_RecordType("<4266,4267,108>",(z)); Inst176++; } } catch(e) {}
  var y = -x + z;
try { if (Inst174 <= 1000 && typeof (y) != "undefined") {_RecordType("<4257,4258,108>",(y)); Inst174++; } } catch(e) {}
try { if (Inst177 <= 1000 && typeof (x) != "undefined") {_RecordType("<4279,4280,109>",(x)); Inst177++; } } catch(e) {}
  return -x;
}

try { if (Inst178 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4285,4297,112>",(assertEquals)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4302,4305,112>",(foo)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (x) != "undefined") {_RecordType("<4306,4307,112>",(x)); Inst180++; } } catch(e) {}
assertEquals(-0, foo(x));
try { if (Inst181 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4311,4323,113>",(assertEquals)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (foo) != "undefined") {_RecordType("<4328,4331,113>",(foo)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (x) != "undefined") {_RecordType("<4332,4333,113>",(x)); Inst183++; } } catch(e) {}
assertEquals(-0, foo(x));

