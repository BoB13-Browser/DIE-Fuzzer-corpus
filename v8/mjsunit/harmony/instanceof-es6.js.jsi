var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2016 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --harmony-instanceof

// Make sure it's an error if @@hasInstance isn't a function.
(function() {
  var F = {};
try { if (Inst0 <= 1000 && typeof (F) != "undefined") {_RecordType("<282,283,9>",(F)); Inst0++; } } catch(e) {}
  F[Symbol.hasInstance] = null;
try { if (Inst1 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<292,313,10>",(F[Symbol.hasInstance])); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (F) != "undefined") {_RecordType("<292,293,10>",(F)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<294,312,10>",(Symbol.hasInstance)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<294,300,10>",(Symbol)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<324,336,11>",(assertThrows)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (F) != "undefined") {_RecordType("<363,364,11>",(F)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<369,378,11>",(TypeError)); Inst7++; } } catch(e) {}
  assertThrows(function() { 0 instanceof F; }, TypeError);
})();

// Make sure the result is coerced to boolean.
(function() {
  var F = {};
try { if (Inst8 <= 1000 && typeof (F) != "undefined") {_RecordType("<455,456,16>",(F)); Inst8++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<509,518,17>",(undefined)); Inst13++; } } catch(e) {}
  F[Symbol.hasInstance] = function() { return undefined; };
try { if (Inst9 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<465,486,17>",(F[Symbol.hasInstance])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (F) != "undefined") {_RecordType("<465,466,17>",(F)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<467,485,17>",(Symbol.hasInstance)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<467,473,17>",(Symbol)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<525,537,18>",(assertEquals)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (F) != "undefined") {_RecordType("<551,552,18>",(F)); Inst15++; } } catch(e) {}
  assertEquals(0 instanceof F, false);
  F[Symbol.hasInstance] = function() { return null; };
try { if (Inst16 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<564,585,19>",(F[Symbol.hasInstance])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (F) != "undefined") {_RecordType("<564,565,19>",(F)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<566,584,19>",(Symbol.hasInstance)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<566,572,19>",(Symbol)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<619,631,20>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (F) != "undefined") {_RecordType("<645,646,20>",(F)); Inst21++; } } catch(e) {}
  assertEquals(0 instanceof F, false);
  F[Symbol.hasInstance] = function() { return true; };
try { if (Inst22 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<658,679,21>",(F[Symbol.hasInstance])); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (F) != "undefined") {_RecordType("<658,659,21>",(F)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<660,678,21>",(Symbol.hasInstance)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<660,666,21>",(Symbol)); Inst25++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<713,725,22>",(assertEquals)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (F) != "undefined") {_RecordType("<739,740,22>",(F)); Inst27++; } } catch(e) {}
  assertEquals(0 instanceof F, true);
})();

// Make sure if @@hasInstance throws, we catch it.
(function() {
  var F = {};
try { if (Inst28 <= 1000 && typeof (F) != "undefined") {_RecordType("<827,828,27>",(F)); Inst28++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (Error) != "undefined") {_RecordType("<884,889,28>",(Error)); Inst33++; } } catch(e) {}
  F[Symbol.hasInstance] = function() { throw new Error("always throws"); }
try { if (Inst29 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<837,858,28>",(F[Symbol.hasInstance])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (F) != "undefined") {_RecordType("<837,838,28>",(F)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<839,857,28>",(Symbol.hasInstance)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<839,845,28>",(Symbol)); Inst32++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (e) != "undefined") {_RecordType("<949,950,31>",(e)); Inst35++; } } catch(e) {}
  try {
try { if (Inst34 <= 1000 && typeof (F) != "undefined") {_RecordType("<935,936,30>",(F)); Inst34++; } } catch(e) {}
    0 instanceof F;
  } catch (e) {
try { if (Inst36 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<958,970,32>",(assertEquals)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (e.message) != "undefined") {_RecordType("<971,980,32>",(e.message)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (e) != "undefined") {_RecordType("<971,972,32>",(e)); Inst38++; } } catch(e) {}
    assertEquals(e.message, "always throws");
  }
})();

// @@hasInstance works for bound functions.
(function() {
  var BC = function() {};
try { if (Inst39 <= 1000 && typeof (BC) != "undefined") {_RecordType("<1075,1077,38>",(BC)); Inst39++; } } catch(e) {}
try { if (Inst41 <= 1000 && typeof (BC) != "undefined") {_RecordType("<1110,1112,39>",(BC)); Inst41++; } } catch(e) {}
  var bc = new BC();
try { if (Inst40 <= 1000 && typeof (bc) != "undefined") {_RecordType("<1101,1103,39>",(bc)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (BC.bind) != "undefined") {_RecordType("<1130,1137,40>",(BC.bind)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (BC) != "undefined") {_RecordType("<1130,1132,40>",(BC)); Inst44++; } } catch(e) {}
  var bound = BC.bind();
try { if (Inst42 <= 1000 && typeof (bound) != "undefined") {_RecordType("<1122,1127,40>",(bound)); Inst42++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1143,1155,41>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (bound[Symbol.hasInstance]) != "undefined") {_RecordType("<1156,1181,41>",(bound[Symbol.hasInstance])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (bound) != "undefined") {_RecordType("<1156,1161,41>",(bound)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<1162,1180,41>",(Symbol.hasInstance)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1162,1168,41>",(Symbol)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (bc) != "undefined") {_RecordType("<1182,1184,41>",(bc)); Inst50++; } } catch(e) {}
  assertEquals(bound[Symbol.hasInstance](bc), true);
try { if (Inst51 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1196,1208,42>",(assertEquals)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (bound[Symbol.hasInstance]) != "undefined") {_RecordType("<1209,1234,42>",(bound[Symbol.hasInstance])); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (bound) != "undefined") {_RecordType("<1209,1214,42>",(bound)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<1215,1233,42>",(Symbol.hasInstance)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1215,1221,42>",(Symbol)); Inst55++; } } catch(e) {}
  assertEquals(bound[Symbol.hasInstance]([]), false);
})();

// if OrdinaryHasInstance is passed a non-callable receiver, return false.
try { if (Inst56 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1330,1342,46>",(assertEquals)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (Function.prototype[Symbol.hasInstance].call) != "undefined") {_RecordType("<1343,1386,46>",(Function.prototype[Symbol.hasInstance].call)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Function.prototype[Symbol.hasInstance]) != "undefined") {_RecordType("<1343,1381,46>",(Function.prototype[Symbol.hasInstance])); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1343,1361,46>",(Function.prototype)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1343,1351,46>",(Function)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<1362,1380,46>",(Symbol.hasInstance)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1362,1368,46>",(Symbol)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1387,1392,46>",(Array)); Inst63++; } } catch(e) {}
assertEquals(Function.prototype[Symbol.hasInstance].call(Array, []), true);
try { if (Inst64 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1406,1418,47>",(assertEquals)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Function.prototype[Symbol.hasInstance].call) != "undefined") {_RecordType("<1419,1462,47>",(Function.prototype[Symbol.hasInstance].call)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Function.prototype[Symbol.hasInstance]) != "undefined") {_RecordType("<1419,1457,47>",(Function.prototype[Symbol.hasInstance])); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1419,1437,47>",(Function.prototype)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1419,1427,47>",(Function)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<1438,1456,47>",(Symbol.hasInstance)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1438,1444,47>",(Symbol)); Inst70++; } } catch(e) {}
assertEquals(Function.prototype[Symbol.hasInstance].call({}, {}), false);

// OrdinaryHasInstance passed a non-object argument returns false.
try { if (Inst71 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1548,1560,50>",(assertEquals)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Function.prototype[Symbol.hasInstance].call) != "undefined") {_RecordType("<1561,1604,50>",(Function.prototype[Symbol.hasInstance].call)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Function.prototype[Symbol.hasInstance]) != "undefined") {_RecordType("<1561,1599,50>",(Function.prototype[Symbol.hasInstance])); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<1561,1579,50>",(Function.prototype)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Function) != "undefined") {_RecordType("<1561,1569,50>",(Function)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<1580,1598,50>",(Symbol.hasInstance)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1580,1586,50>",(Symbol)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1605,1610,50>",(Array)); Inst78++; } } catch(e) {}
assertEquals(Function.prototype[Symbol.hasInstance].call(Array, 0), false);

// Cannot assign to @@hasInstance with %FunctionPrototype%.
(function() {
  "use strict";
try { if (Inst79 <= 1000 && typeof (F) != "undefined") {_RecordType("<1726,1727,55>",(F)); Inst79++; } } catch(e) {}
  function F() {}
try { if (Inst80 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<1735,1747,56>",(assertThrows)); Inst80++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (v) != "undefined") {_RecordType("<1786,1787,56>",(v)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (v) != "undefined") {_RecordType("<1792,1793,56>",(v)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (TypeError) != "undefined") {_RecordType("<1797,1806,56>",(TypeError)); Inst87++; } } catch(e) {}
  assertThrows(function() { F[Symbol.hasInstance] = (v) => v }, TypeError);
try { if (Inst81 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<1761,1782,56>",(F[Symbol.hasInstance])); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (F) != "undefined") {_RecordType("<1761,1762,56>",(F)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<1763,1781,56>",(Symbol.hasInstance)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<1763,1769,56>",(Symbol)); Inst84++; } } catch(e) {}
})();

// Check correct invocation of @@hasInstance handler on function instance.
(function() {
try { if (Inst88 <= 1000 && typeof (F) != "undefined") {_RecordType("<1916,1917,61>",(F)); Inst88++; } } catch(e) {}
  function F() {}
  var counter = 0;
try { if (Inst89 <= 1000 && typeof (counter) != "undefined") {_RecordType("<1929,1936,62>",(counter)); Inst89++; } } catch(e) {}
try { if (Inst91 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1956,1977,63>",(Object.getPrototypeOf)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1956,1962,63>",(Object)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (F) != "undefined") {_RecordType("<1978,1979,63>",(F)); Inst93++; } } catch(e) {}
  var proto = Object.getPrototypeOf(F);
try { if (Inst90 <= 1000 && typeof (proto) != "undefined") {_RecordType("<1948,1953,63>",(proto)); Inst90++; } } catch(e) {}
try { if (Inst94 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1984,2005,64>",(Object.setPrototypeOf)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1984,1990,64>",(Object)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (F) != "undefined") {_RecordType("<2006,2007,64>",(F)); Inst96++; } } catch(e) {}
  Object.setPrototypeOf(F, null);
try { if (Inst102 <= 1000 && typeof (counter) != "undefined") {_RecordType("<2058,2065,65>",(counter)); Inst102++; } } catch(e) {}
  F[Symbol.hasInstance] = function(v) { ++counter; return true };
try { if (Inst97 <= 1000 && typeof (F[Symbol.hasInstance]) != "undefined") {_RecordType("<2018,2039,65>",(F[Symbol.hasInstance])); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (F) != "undefined") {_RecordType("<2018,2019,65>",(F)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Symbol.hasInstance) != "undefined") {_RecordType("<2020,2038,65>",(Symbol.hasInstance)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<2020,2026,65>",(Symbol)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (v) != "undefined") {_RecordType("<2051,2052,65>",(v)); Inst101++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<2084,2105,66>",(Object.setPrototypeOf)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2084,2090,66>",(Object)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (F) != "undefined") {_RecordType("<2106,2107,66>",(F)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (proto) != "undefined") {_RecordType("<2109,2114,66>",(proto)); Inst106++; } } catch(e) {}
  Object.setPrototypeOf(F, proto);
try { if (Inst107 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2119,2129,67>",(assertTrue)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (F) != "undefined") {_RecordType("<2143,2144,67>",(F)); Inst108++; } } catch(e) {}
  assertTrue(1 instanceof F);
try { if (Inst109 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2149,2161,68>",(assertEquals)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (counter) != "undefined") {_RecordType("<2165,2172,68>",(counter)); Inst110++; } } catch(e) {}
  assertEquals(1, counter);
})();

