var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// ES6 extends the \uxxxx escape and also allows \u{xxxxx}.

// Flags: --harmony-unicode-regexps

try { if (Inst0 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<275,291,9>",(testRegexpHelper)); Inst0++; } } catch(e) {}
function testRegexpHelper(r) {
try { if (Inst1 <= 1000 && typeof (r) != "undefined") {_RecordType("<292,293,9>",(r)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<299,309,10>",(assertTrue)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<310,316,10>",(r.test)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (r) != "undefined") {_RecordType("<310,311,10>",(r)); Inst4++; } } catch(e) {}
  assertTrue(r.test("foo"));
try { if (Inst5 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<328,338,11>",(assertTrue)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<339,345,11>",(r.test)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (r) != "undefined") {_RecordType("<339,340,11>",(r)); Inst7++; } } catch(e) {}
  assertTrue(r.test("boo"));
try { if (Inst8 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<357,368,12>",(assertFalse)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<369,375,12>",(r.test)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (r) != "undefined") {_RecordType("<369,370,12>",(r)); Inst10++; } } catch(e) {}
  assertFalse(r.test("moo"));
}


try { if (Inst11 <= 1000 && typeof (TestUnicodeEscapes) != "undefined") {_RecordType("<399,417,16>",(TestUnicodeEscapes)); Inst11++; } } catch(e) {}
(function TestUnicodeEscapes() {
try { if (Inst12 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<424,440,17>",(testRegexpHelper)); Inst12++; } } catch(e) {}
  testRegexpHelper(/(\u0066|\u0062)oo/);
try { if (Inst13 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<465,481,18>",(testRegexpHelper)); Inst13++; } } catch(e) {}
  testRegexpHelper(/(\u0066|\u0062)oo/u);
try { if (Inst14 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<507,523,19>",(testRegexpHelper)); Inst14++; } } catch(e) {}
  testRegexpHelper(/(\u{0066}|\u{0062})oo/u);
try { if (Inst15 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<553,569,20>",(testRegexpHelper)); Inst15++; } } catch(e) {}
  testRegexpHelper(/(\u{66}|\u{000062})oo/u);

  // Note that we need \\ inside a string, otherwise it's interpreted as a
  // unicode escape inside a string.
try { if (Inst16 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<712,728,24>",(testRegexpHelper)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<733,739,24>",(RegExp)); Inst17++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\\u0066|\\u0062)oo"));
try { if (Inst18 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<767,783,25>",(testRegexpHelper)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<788,794,25>",(RegExp)); Inst19++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\\u0066|\\u0062)oo", "u"));
try { if (Inst20 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<827,843,26>",(testRegexpHelper)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<848,854,26>",(RegExp)); Inst21++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\\u{0066}|\\u{0062})oo", "u"));
try { if (Inst22 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<891,907,27>",(testRegexpHelper)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<912,918,27>",(RegExp)); Inst23++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\\u{66}|\\u{000062})oo", "u"));

  // Though, unicode escapes via strings should work too.
try { if (Inst24 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1014,1030,30>",(testRegexpHelper)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1035,1041,30>",(RegExp)); Inst25++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\u0066|\u0062)oo"));
try { if (Inst26 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1067,1083,31>",(testRegexpHelper)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1088,1094,31>",(RegExp)); Inst27++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\u0066|\u0062)oo", "u"));
try { if (Inst28 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1125,1141,32>",(testRegexpHelper)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1146,1152,32>",(RegExp)); Inst29++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\u{0066}|\u{0062})oo", "u"));
try { if (Inst30 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1187,1203,33>",(testRegexpHelper)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1208,1214,33>",(RegExp)); Inst31++; } } catch(e) {}
  testRegexpHelper(new RegExp("(\u{66}|\u{000062})oo", "u"));
})();


try { if (Inst32 <= 1000 && typeof (TestUnicodeEscapesInCharacterClasses) != "undefined") {_RecordType("<1265,1301,37>",(TestUnicodeEscapesInCharacterClasses)); Inst32++; } } catch(e) {}
(function TestUnicodeEscapesInCharacterClasses() {
try { if (Inst33 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1308,1324,38>",(testRegexpHelper)); Inst33++; } } catch(e) {}
  testRegexpHelper(/[\u0062-\u0066]oo/);
try { if (Inst34 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1349,1365,39>",(testRegexpHelper)); Inst34++; } } catch(e) {}
  testRegexpHelper(/[\u0062-\u0066]oo/u);
try { if (Inst35 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1391,1407,40>",(testRegexpHelper)); Inst35++; } } catch(e) {}
  testRegexpHelper(/[\u{0062}-\u{0066}]oo/u);
try { if (Inst36 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1437,1453,41>",(testRegexpHelper)); Inst36++; } } catch(e) {}
  testRegexpHelper(/[\u{62}-\u{00000066}]oo/u);

  // Note that we need \\ inside a string, otherwise it's interpreted as a
  // unicode escape inside a string.
try { if (Inst37 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1598,1614,45>",(testRegexpHelper)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1619,1625,45>",(RegExp)); Inst38++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\\u0062-\\u0066]oo"));
try { if (Inst39 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1653,1669,46>",(testRegexpHelper)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1674,1680,46>",(RegExp)); Inst40++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\\u0062-\\u0066]oo", "u"));
try { if (Inst41 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1713,1729,47>",(testRegexpHelper)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1734,1740,47>",(RegExp)); Inst42++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\\u{0062}-\\u{0066}]oo", "u"));
try { if (Inst43 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1777,1793,48>",(testRegexpHelper)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1798,1804,48>",(RegExp)); Inst44++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\\u{62}-\\u{00000066}]oo", "u"));

  // Though, unicode escapes via strings should work too.
try { if (Inst45 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1902,1918,51>",(testRegexpHelper)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1923,1929,51>",(RegExp)); Inst46++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\u0062-\u0066]oo"));
try { if (Inst47 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<1955,1971,52>",(testRegexpHelper)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<1976,1982,52>",(RegExp)); Inst48++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\u0062-\u0066]oo", "u"));
try { if (Inst49 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<2013,2029,53>",(testRegexpHelper)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2034,2040,53>",(RegExp)); Inst50++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\u{0062}-\u{0066}]oo", "u"));
try { if (Inst51 <= 1000 && typeof (testRegexpHelper) != "undefined") {_RecordType("<2075,2091,54>",(testRegexpHelper)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2096,2102,54>",(RegExp)); Inst52++; } } catch(e) {}
  testRegexpHelper(new RegExp("[\u{62}-\u{00000066}]oo", "u"));
})();


try { if (Inst53 <= 1000 && typeof (TestBraceEscapesWithoutUnicodeFlag) != "undefined") {_RecordType("<2155,2189,58>",(TestBraceEscapesWithoutUnicodeFlag)); Inst53++; } } catch(e) {}
(function TestBraceEscapesWithoutUnicodeFlag() {
  // \u followed by illegal escape will be parsed as u. {x} will be the
  // character count.
try { if (Inst54 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<2299,2306,61>",(helper1)); Inst54++; } } catch(e) {}
  function helper1(r) {
try { if (Inst55 <= 1000 && typeof (r) != "undefined") {_RecordType("<2307,2308,61>",(r)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2316,2327,62>",(assertFalse)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2328,2334,62>",(r.test)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (r) != "undefined") {_RecordType("<2328,2329,62>",(r)); Inst58++; } } catch(e) {}
    assertFalse(r.test("fbar"));
try { if (Inst59 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2349,2360,63>",(assertFalse)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2361,2367,63>",(r.test)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (r) != "undefined") {_RecordType("<2361,2362,63>",(r)); Inst61++; } } catch(e) {}
    assertFalse(r.test("fubar"));
try { if (Inst62 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2383,2393,64>",(assertTrue)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2394,2400,64>",(r.test)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (r) != "undefined") {_RecordType("<2394,2395,64>",(r)); Inst64++; } } catch(e) {}
    assertTrue(r.test("fuubar"));
try { if (Inst65 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2417,2428,65>",(assertFalse)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2429,2435,65>",(r.test)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (r) != "undefined") {_RecordType("<2429,2430,65>",(r)); Inst67++; } } catch(e) {}
    assertFalse(r.test("fuuubar"));
  }
try { if (Inst68 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<2455,2462,67>",(helper1)); Inst68++; } } catch(e) {}
  helper1(/f\u{2}bar/);
try { if (Inst69 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<2479,2486,68>",(helper1)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2491,2497,68>",(RegExp)); Inst70++; } } catch(e) {}
  helper1(new RegExp("f\\u{2}bar"));

try { if (Inst71 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<2526,2533,70>",(helper2)); Inst71++; } } catch(e) {}
  function helper2(r) {
try { if (Inst72 <= 1000 && typeof (r) != "undefined") {_RecordType("<2534,2535,70>",(r)); Inst72++; } } catch(e) {}
try { if (Inst73 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2543,2554,71>",(assertFalse)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2555,2561,71>",(r.test)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (r) != "undefined") {_RecordType("<2555,2556,71>",(r)); Inst75++; } } catch(e) {}
    assertFalse(r.test("fbar"));
try { if (Inst76 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2576,2586,72>",(assertTrue)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2587,2593,72>",(r.test)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (r) != "undefined") {_RecordType("<2587,2588,72>",(r)); Inst78++; } } catch(e) {}
    assertTrue(r.test("fubar"));
try { if (Inst79 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2609,2619,73>",(assertTrue)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2620,2626,73>",(r.test)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (r) != "undefined") {_RecordType("<2620,2621,73>",(r)); Inst81++; } } catch(e) {}
    assertTrue(r.test("fuubar"));
try { if (Inst82 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2643,2654,74>",(assertFalse)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2655,2661,74>",(r.test)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (r) != "undefined") {_RecordType("<2655,2656,74>",(r)); Inst84++; } } catch(e) {}
    assertFalse(r.test("fuuubar"));
  }

try { if (Inst85 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<2682,2689,77>",(helper2)); Inst85++; } } catch(e) {}
  helper2(/f\u{1,2}bar/);
try { if (Inst86 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<2708,2715,78>",(helper2)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2720,2726,78>",(RegExp)); Inst87++; } } catch(e) {}
  helper2(new RegExp("f\\u{1,2}bar"));

try { if (Inst88 <= 1000 && typeof (helper3) != "undefined") {_RecordType("<2757,2764,80>",(helper3)); Inst88++; } } catch(e) {}
  function helper3(r) {
try { if (Inst89 <= 1000 && typeof (r) != "undefined") {_RecordType("<2765,2766,80>",(r)); Inst89++; } } catch(e) {}
try { if (Inst90 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2774,2784,81>",(assertTrue)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2785,2791,81>",(r.test)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (r) != "undefined") {_RecordType("<2785,2786,81>",(r)); Inst92++; } } catch(e) {}
    assertTrue(r.test("u"));
try { if (Inst93 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2803,2813,82>",(assertTrue)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2814,2820,82>",(r.test)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (r) != "undefined") {_RecordType("<2814,2815,82>",(r)); Inst95++; } } catch(e) {}
    assertTrue(r.test("{"));
try { if (Inst96 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2832,2842,83>",(assertTrue)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2843,2849,83>",(r.test)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (r) != "undefined") {_RecordType("<2843,2844,83>",(r)); Inst98++; } } catch(e) {}
    assertTrue(r.test("2"));
try { if (Inst99 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2861,2871,84>",(assertTrue)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2872,2878,84>",(r.test)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (r) != "undefined") {_RecordType("<2872,2873,84>",(r)); Inst101++; } } catch(e) {}
    assertTrue(r.test("}"));
try { if (Inst102 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2890,2901,85>",(assertFalse)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2902,2908,85>",(r.test)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (r) != "undefined") {_RecordType("<2902,2903,85>",(r)); Inst104++; } } catch(e) {}
    assertFalse(r.test("q"));
try { if (Inst105 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2920,2931,86>",(assertFalse)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2932,2938,86>",(r.test)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (r) != "undefined") {_RecordType("<2932,2933,86>",(r)); Inst107++; } } catch(e) {}
    assertFalse(r.test("("));
try { if (Inst108 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2950,2961,87>",(assertFalse)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<2962,2968,87>",(r.test)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (r) != "undefined") {_RecordType("<2962,2963,87>",(r)); Inst110++; } } catch(e) {}
    assertFalse(r.test(")"));
  }
try { if (Inst111 <= 1000 && typeof (helper3) != "undefined") {_RecordType("<2982,2989,89>",(helper3)); Inst111++; } } catch(e) {}
  helper3(/[\u{2}]/);
try { if (Inst112 <= 1000 && typeof (helper3) != "undefined") {_RecordType("<3004,3011,90>",(helper3)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3016,3022,90>",(RegExp)); Inst113++; } } catch(e) {}
  helper3(new RegExp("[\\u{2}]"));
})();


try { if (Inst114 <= 1000 && typeof (TestInvalidEscapes) != "undefined") {_RecordType("<3055,3073,94>",(TestInvalidEscapes)); Inst114++; } } catch(e) {}
(function TestInvalidEscapes() {
  // Without the u flag, invalid unicode escapes and other invalid escapes are
  // treated as identity escapes.
try { if (Inst115 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<3202,3209,97>",(helper1)); Inst115++; } } catch(e) {}
  function helper1(r) {
try { if (Inst116 <= 1000 && typeof (r) != "undefined") {_RecordType("<3210,3211,97>",(r)); Inst116++; } } catch(e) {}
try { if (Inst117 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3219,3229,98>",(assertTrue)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3230,3236,98>",(r.test)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (r) != "undefined") {_RecordType("<3230,3231,98>",(r)); Inst119++; } } catch(e) {}
    assertTrue(r.test("firstuxz89second"));
  }
try { if (Inst120 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<3265,3272,100>",(helper1)); Inst120++; } } catch(e) {}
  helper1(/first\u\x\z\8\9second/);
try { if (Inst121 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<3301,3308,101>",(helper1)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3313,3319,101>",(RegExp)); Inst122++; } } catch(e) {}
  helper1(new RegExp("first\\u\\x\\z\\8\\9second"));

try { if (Inst123 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<3364,3371,103>",(helper2)); Inst123++; } } catch(e) {}
  function helper2(r) {
try { if (Inst124 <= 1000 && typeof (r) != "undefined") {_RecordType("<3372,3373,103>",(r)); Inst124++; } } catch(e) {}
try { if (Inst125 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3381,3391,104>",(assertTrue)); Inst125++; } } catch(e) {}try { if (Inst126 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3392,3398,104>",(r.test)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (r) != "undefined") {_RecordType("<3392,3393,104>",(r)); Inst127++; } } catch(e) {}
    assertTrue(r.test("u"));
try { if (Inst128 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3410,3420,105>",(assertTrue)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3421,3427,105>",(r.test)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (r) != "undefined") {_RecordType("<3421,3422,105>",(r)); Inst130++; } } catch(e) {}
    assertTrue(r.test("x"));
try { if (Inst131 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3439,3449,106>",(assertTrue)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3450,3456,106>",(r.test)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (r) != "undefined") {_RecordType("<3450,3451,106>",(r)); Inst133++; } } catch(e) {}
    assertTrue(r.test("z"));
try { if (Inst134 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3468,3478,107>",(assertTrue)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3479,3485,107>",(r.test)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (r) != "undefined") {_RecordType("<3479,3480,107>",(r)); Inst136++; } } catch(e) {}
    assertTrue(r.test("8"));
try { if (Inst137 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3497,3507,108>",(assertTrue)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3508,3514,108>",(r.test)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (r) != "undefined") {_RecordType("<3508,3509,108>",(r)); Inst139++; } } catch(e) {}
    assertTrue(r.test("9"));
try { if (Inst140 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3526,3537,109>",(assertFalse)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3538,3544,109>",(r.test)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (r) != "undefined") {_RecordType("<3538,3539,109>",(r)); Inst142++; } } catch(e) {}
    assertFalse(r.test("q"));
try { if (Inst143 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3556,3567,110>",(assertFalse)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<3568,3574,110>",(r.test)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (r) != "undefined") {_RecordType("<3568,3569,110>",(r)); Inst145++; } } catch(e) {}
    assertFalse(r.test("7"));
  }
try { if (Inst146 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<3588,3595,112>",(helper2)); Inst146++; } } catch(e) {}
  helper2(/[\u\x\z\8\9]/);
try { if (Inst147 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<3615,3622,113>",(helper2)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<3627,3633,113>",(RegExp)); Inst148++; } } catch(e) {}
  helper2(new RegExp("[\\u\\x\\z\\8\\9]"));

  // However, with the u flag, these are treated as invalid escapes.
try { if (Inst149 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3729,3741,116>",(assertThrows)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3752,3763,116>",(SyntaxError)); Inst150++; } } catch(e) {}
  assertThrows("/\\u/u", SyntaxError);
try { if (Inst151 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3768,3780,117>",(assertThrows)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3793,3804,117>",(SyntaxError)); Inst152++; } } catch(e) {}
  assertThrows("/\\u12/u", SyntaxError);
try { if (Inst153 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3809,3821,118>",(assertThrows)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3835,3846,118>",(SyntaxError)); Inst154++; } } catch(e) {}
  assertThrows("/\\ufoo/u", SyntaxError);
try { if (Inst155 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3851,3863,119>",(assertThrows)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3874,3885,119>",(SyntaxError)); Inst156++; } } catch(e) {}
  assertThrows("/\\x/u", SyntaxError);
try { if (Inst157 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3890,3902,120>",(assertThrows)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3916,3927,120>",(SyntaxError)); Inst158++; } } catch(e) {}
  assertThrows("/\\xfoo/u", SyntaxError);
try { if (Inst159 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3932,3944,121>",(assertThrows)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3955,3966,121>",(SyntaxError)); Inst160++; } } catch(e) {}
  assertThrows("/\\z/u", SyntaxError);
try { if (Inst161 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<3971,3983,122>",(assertThrows)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<3994,4005,122>",(SyntaxError)); Inst162++; } } catch(e) {}
  assertThrows("/\\8/u", SyntaxError);
try { if (Inst163 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4010,4022,123>",(assertThrows)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4033,4044,123>",(SyntaxError)); Inst164++; } } catch(e) {}
  assertThrows("/\\9/u", SyntaxError);

try { if (Inst165 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4050,4062,125>",(assertThrows)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4091,4102,125>",(SyntaxError)); Inst166++; } } catch(e) {}
  assertThrows("new RegExp('\\\\u', 'u')", SyntaxError);
try { if (Inst167 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4107,4119,126>",(assertThrows)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4150,4161,126>",(SyntaxError)); Inst168++; } } catch(e) {}
  assertThrows("new RegExp('\\\\u12', 'u')", SyntaxError);
try { if (Inst169 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4166,4178,127>",(assertThrows)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4210,4221,127>",(SyntaxError)); Inst170++; } } catch(e) {}
  assertThrows("new RegExp('\\\\ufoo', 'u')", SyntaxError);
try { if (Inst171 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4226,4238,128>",(assertThrows)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4267,4278,128>",(SyntaxError)); Inst172++; } } catch(e) {}
  assertThrows("new RegExp('\\\\x', 'u')", SyntaxError);
try { if (Inst173 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4283,4295,129>",(assertThrows)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4327,4338,129>",(SyntaxError)); Inst174++; } } catch(e) {}
  assertThrows("new RegExp('\\\\xfoo', 'u')", SyntaxError);
try { if (Inst175 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4343,4355,130>",(assertThrows)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4384,4395,130>",(SyntaxError)); Inst176++; } } catch(e) {}
  assertThrows("new RegExp('\\\\z', 'u')", SyntaxError);
try { if (Inst177 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4400,4412,131>",(assertThrows)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4441,4452,131>",(SyntaxError)); Inst178++; } } catch(e) {}
  assertThrows("new RegExp('\\\\8', 'u')", SyntaxError);
try { if (Inst179 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4457,4469,132>",(assertThrows)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4498,4509,132>",(SyntaxError)); Inst180++; } } catch(e) {}
  assertThrows("new RegExp('\\\\9', 'u')", SyntaxError);
})();


try { if (Inst181 <= 1000 && typeof (TestTooBigHexEscape) != "undefined") {_RecordType("<4530,4549,136>",(TestTooBigHexEscape)); Inst181++; } } catch(e) {}
(function TestTooBigHexEscape() {
  // The hex number inside \u{} has a maximum value.
  /\u{10ffff}/u
try { if (Inst182 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<4629,4635,139>",(RegExp)); Inst182++; } } catch(e) {}
  new RegExp("\\u{10ffff}", "u")
try { if (Inst183 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4658,4670,140>",(assertThrows)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4689,4700,140>",(SyntaxError)); Inst184++; } } catch(e) {}
  assertThrows("/\\u{110000}/u", SyntaxError);
try { if (Inst185 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<4705,4717,141>",(assertThrows)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (SyntaxError) != "undefined") {_RecordType("<4754,4765,141>",(SyntaxError)); Inst186++; } } catch(e) {}
  assertThrows("new RegExp('\\\\u{110000}', 'u')", SyntaxError);

  // Without the u flag, they're of course fine ({x} is the count).
  /\u{110000}/
try { if (Inst187 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<4858,4864,145>",(RegExp)); Inst187++; } } catch(e) {}
  new RegExp("\\u{110000}")
})();


try { if (Inst188 <= 1000 && typeof (TestSyntaxEscapes) != "undefined") {_RecordType("<4898,4915,149>",(TestSyntaxEscapes)); Inst188++; } } catch(e) {}
(function TestSyntaxEscapes() {
  // Syntax escapes work the same with or without the u flag.
try { if (Inst189 <= 1000 && typeof (helper) != "undefined") {_RecordType("<4993,4999,151>",(helper)); Inst189++; } } catch(e) {}
  function helper(r) {
try { if (Inst190 <= 1000 && typeof (r) != "undefined") {_RecordType("<5000,5001,151>",(r)); Inst190++; } } catch(e) {}
try { if (Inst191 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5009,5019,152>",(assertTrue)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<5020,5026,152>",(r.test)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (r) != "undefined") {_RecordType("<5020,5021,152>",(r)); Inst193++; } } catch(e) {}
    assertTrue(r.test("foo[bar"));
try { if (Inst194 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5044,5055,153>",(assertFalse)); Inst194++; } } catch(e) {}try { if (Inst195 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<5056,5062,153>",(r.test)); Inst195++; } } catch(e) {}try { if (Inst196 <= 1000 && typeof (r) != "undefined") {_RecordType("<5056,5057,153>",(r)); Inst196++; } } catch(e) {}
    assertFalse(r.test("foo]bar"));
  }
try { if (Inst197 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5082,5088,155>",(helper)); Inst197++; } } catch(e) {}
  helper(/foo\[bar/);
try { if (Inst198 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5104,5110,156>",(helper)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5115,5121,156>",(RegExp)); Inst199++; } } catch(e) {}
  helper(new RegExp("foo\\[bar"));
try { if (Inst200 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5139,5145,157>",(helper)); Inst200++; } } catch(e) {}
  helper(/foo\[bar/u);
try { if (Inst201 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5162,5168,158>",(helper)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5173,5179,158>",(RegExp)); Inst202++; } } catch(e) {}
  helper(new RegExp("foo\\[bar", "u"));
})();


try { if (Inst203 <= 1000 && typeof (TestUnicodeSurrogates) != "undefined") {_RecordType("<5218,5239,162>",(TestUnicodeSurrogates)); Inst203++; } } catch(e) {}
(function TestUnicodeSurrogates() {
  // U+10E6D corresponds to the surrogate pair [U+D803, U+DE6D].
try { if (Inst204 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5320,5326,164>",(helper)); Inst204++; } } catch(e) {}
  function helper(r) {
try { if (Inst205 <= 1000 && typeof (r) != "undefined") {_RecordType("<5327,5328,164>",(r)); Inst205++; } } catch(e) {}
try { if (Inst206 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5336,5346,165>",(assertTrue)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (r.test) != "undefined") {_RecordType("<5347,5353,165>",(r.test)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (r) != "undefined") {_RecordType("<5347,5348,165>",(r)); Inst208++; } } catch(e) {}
    assertTrue(r.test("foo\u{10e6d}bar"));
  }
try { if (Inst209 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5381,5387,167>",(helper)); Inst209++; } } catch(e) {}
  helper(/foo\ud803\ude6dbar/u);
try { if (Inst210 <= 1000 && typeof (helper) != "undefined") {_RecordType("<5414,5420,168>",(helper)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5425,5431,168>",(RegExp)); Inst211++; } } catch(e) {}
  helper(new RegExp("foo\\ud803\\ude6dbar", "u"));
})();


try { if (Inst212 <= 1000 && typeof (AllFlags) != "undefined") {_RecordType("<5481,5489,172>",(AllFlags)); Inst212++; } } catch(e) {}
(function AllFlags() {
  // Test that we can pass all possible regexp flags and they work properly.
try { if (Inst213 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<5582,5589,174>",(helper1)); Inst213++; } } catch(e) {}
  function helper1(r) {
try { if (Inst214 <= 1000 && typeof (r) != "undefined") {_RecordType("<5590,5591,174>",(r)); Inst214++; } } catch(e) {}
try { if (Inst215 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5599,5609,175>",(assertTrue)); Inst215++; } } catch(e) {}try { if (Inst216 <= 1000 && typeof (r.global) != "undefined") {_RecordType("<5610,5618,175>",(r.global)); Inst216++; } } catch(e) {}try { if (Inst217 <= 1000 && typeof (r) != "undefined") {_RecordType("<5610,5611,175>",(r)); Inst217++; } } catch(e) {}
    assertTrue(r.global);
try { if (Inst218 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5625,5635,176>",(assertTrue)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (r.ignoreCase) != "undefined") {_RecordType("<5636,5648,176>",(r.ignoreCase)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (r) != "undefined") {_RecordType("<5636,5637,176>",(r)); Inst220++; } } catch(e) {}
    assertTrue(r.ignoreCase);
try { if (Inst221 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5655,5665,177>",(assertTrue)); Inst221++; } } catch(e) {}try { if (Inst222 <= 1000 && typeof (r.multiline) != "undefined") {_RecordType("<5666,5677,177>",(r.multiline)); Inst222++; } } catch(e) {}try { if (Inst223 <= 1000 && typeof (r) != "undefined") {_RecordType("<5666,5667,177>",(r)); Inst223++; } } catch(e) {}
    assertTrue(r.multiline);
try { if (Inst224 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5684,5694,178>",(assertTrue)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (r.sticky) != "undefined") {_RecordType("<5695,5703,178>",(r.sticky)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (r) != "undefined") {_RecordType("<5695,5696,178>",(r)); Inst226++; } } catch(e) {}
    assertTrue(r.sticky);
try { if (Inst227 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5710,5720,179>",(assertTrue)); Inst227++; } } catch(e) {}try { if (Inst228 <= 1000 && typeof (r.unicode) != "undefined") {_RecordType("<5721,5730,179>",(r.unicode)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (r) != "undefined") {_RecordType("<5721,5722,179>",(r)); Inst229++; } } catch(e) {}
    assertTrue(r.unicode);
  }

try { if (Inst230 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<5740,5747,182>",(helper1)); Inst230++; } } catch(e) {}
  helper1(/foo/gimyu);
try { if (Inst231 <= 1000 && typeof (helper1) != "undefined") {_RecordType("<5763,5770,183>",(helper1)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<5775,5781,183>",(RegExp)); Inst232++; } } catch(e) {}
  helper1(new RegExp("foo", "gimyu"));

try { if (Inst233 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<5812,5819,185>",(helper2)); Inst233++; } } catch(e) {}
  function helper2(r) {
try { if (Inst234 <= 1000 && typeof (r) != "undefined") {_RecordType("<5820,5821,185>",(r)); Inst234++; } } catch(e) {}
try { if (Inst235 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5829,5840,186>",(assertFalse)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (r.global) != "undefined") {_RecordType("<5841,5849,186>",(r.global)); Inst236++; } } catch(e) {}try { if (Inst237 <= 1000 && typeof (r) != "undefined") {_RecordType("<5841,5842,186>",(r)); Inst237++; } } catch(e) {}
    assertFalse(r.global);
try { if (Inst238 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5856,5867,187>",(assertFalse)); Inst238++; } } catch(e) {}try { if (Inst239 <= 1000 && typeof (r.ignoreCase) != "undefined") {_RecordType("<5868,5880,187>",(r.ignoreCase)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (r) != "undefined") {_RecordType("<5868,5869,187>",(r)); Inst240++; } } catch(e) {}
    assertFalse(r.ignoreCase);
try { if (Inst241 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5887,5898,188>",(assertFalse)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (r.multiline) != "undefined") {_RecordType("<5899,5910,188>",(r.multiline)); Inst242++; } } catch(e) {}try { if (Inst243 <= 1000 && typeof (r) != "undefined") {_RecordType("<5899,5900,188>",(r)); Inst243++; } } catch(e) {}
    assertFalse(r.multiline);
try { if (Inst244 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5917,5928,189>",(assertFalse)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (r.sticky) != "undefined") {_RecordType("<5929,5937,189>",(r.sticky)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (r) != "undefined") {_RecordType("<5929,5930,189>",(r)); Inst246++; } } catch(e) {}
    assertFalse(r.sticky);
try { if (Inst247 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5944,5955,190>",(assertFalse)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (r.unicode) != "undefined") {_RecordType("<5956,5965,190>",(r.unicode)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (r) != "undefined") {_RecordType("<5956,5957,190>",(r)); Inst249++; } } catch(e) {}
    assertFalse(r.unicode);
  }

try { if (Inst250 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<5975,5982,193>",(helper2)); Inst250++; } } catch(e) {}
  helper2(/foo/);
try { if (Inst251 <= 1000 && typeof (helper2) != "undefined") {_RecordType("<5993,6000,194>",(helper2)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6005,6011,194>",(RegExp)); Inst252++; } } catch(e) {}
  helper2(new RegExp("foo"));
})();


try { if (Inst253 <= 1000 && typeof (DuplicatedFlags) != "undefined") {_RecordType("<6039,6054,198>",(DuplicatedFlags)); Inst253++; } } catch(e) {}
(function DuplicatedFlags() {
  // Test that duplicating the u flag is not allowed.
try { if (Inst254 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<6115,6127,200>",(assertThrows)); Inst254++; } } catch(e) {}
  assertThrows("/foo/ugu");
try { if (Inst255 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<6143,6155,201>",(assertThrows)); Inst255++; } } catch(e) {}
  assertThrows("new RegExp('foo', 'ugu')");
})();


try { if (Inst256 <= 1000 && typeof (ToString) != "undefined") {_RecordType("<6203,6211,205>",(ToString)); Inst256++; } } catch(e) {}
(function ToString() {
  // Test that the u flag is included in the string representation of regexps.
try { if (Inst257 <= 1000 && typeof (helper) != "undefined") {_RecordType("<6306,6312,207>",(helper)); Inst257++; } } catch(e) {}
  function helper(r) {
try { if (Inst258 <= 1000 && typeof (r) != "undefined") {_RecordType("<6313,6314,207>",(r)); Inst258++; } } catch(e) {}
try { if (Inst259 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6322,6334,208>",(assertEquals)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (r.toString) != "undefined") {_RecordType("<6335,6345,208>",(r.toString)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (r) != "undefined") {_RecordType("<6335,6336,208>",(r)); Inst261++; } } catch(e) {}
    assertEquals(r.toString(), "/foo/u");
  }
try { if (Inst262 <= 1000 && typeof (helper) != "undefined") {_RecordType("<6366,6372,210>",(helper)); Inst262++; } } catch(e) {}
  helper(/foo/u);
try { if (Inst263 <= 1000 && typeof (helper) != "undefined") {_RecordType("<6384,6390,211>",(helper)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6395,6401,211>",(RegExp)); Inst264++; } } catch(e) {}
  helper(new RegExp("foo", "u"));
})();

// Non-BMP patterns.
// Single character atom.
try { if (Inst265 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6470,6480,216>",(assertTrue)); Inst265++; } } catch(e) {}try { if (Inst266 <= 1000 && typeof (new RegExp("\u{12345}", "u").test) != "undefined") {_RecordType("<6481,6514,216>",(new RegExp("\u{12345}", "u").test)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6485,6491,216>",(RegExp)); Inst267++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}", "u").test("\u{12345}"));
try { if (Inst268 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6530,6540,217>",(assertTrue)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (/\u{12345}/u.test) != "undefined") {_RecordType("<6541,6558,217>",(/\u{12345}/u.test)); Inst269++; } } catch(e) {}
assertTrue(/\u{12345}/u.test("\u{12345}"));
try { if (Inst270 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6574,6584,218>",(assertTrue)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (new RegExp("\u{12345}", "u").test) != "undefined") {_RecordType("<6585,6618,218>",(new RegExp("\u{12345}", "u").test)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6589,6595,218>",(RegExp)); Inst272++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}", "u").test("\ud808\udf45"));
try { if (Inst273 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6637,6647,219>",(assertTrue)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (/\u{12345}/u.test) != "undefined") {_RecordType("<6648,6665,219>",(/\u{12345}/u.test)); Inst274++; } } catch(e) {}
assertTrue(/\u{12345}/u.test("\ud808\udf45"));
try { if (Inst275 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6684,6695,220>",(assertFalse)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (new RegExp("\u{12345}", "u").test) != "undefined") {_RecordType("<6696,6729,220>",(new RegExp("\u{12345}", "u").test)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6700,6706,220>",(RegExp)); Inst277++; } } catch(e) {}
assertFalse(new RegExp("\u{12345}", "u").test("\udf45"));
try { if (Inst278 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6742,6753,221>",(assertFalse)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (/\u{12345}/u.test) != "undefined") {_RecordType("<6754,6771,221>",(/\u{12345}/u.test)); Inst279++; } } catch(e) {}
assertFalse(/\u{12345}/u.test("\udf45"));

// Multi-character atom.
try { if (Inst280 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6810,6820,224>",(assertTrue)); Inst280++; } } catch(e) {}try { if (Inst281 <= 1000 && typeof (new RegExp("\u{12345}\u{23456}", "u").test) != "undefined") {_RecordType("<6821,6863,224>",(new RegExp("\u{12345}\u{23456}", "u").test)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6825,6831,224>",(RegExp)); Inst282++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}\u{23456}", "u").test("a\u{12345}\u{23456}b"));
try { if (Inst283 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<6890,6900,225>",(assertTrue)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (/\u{12345}\u{23456}/u.test) != "undefined") {_RecordType("<6901,6927,225>",(/\u{12345}\u{23456}/u.test)); Inst284++; } } catch(e) {}
assertTrue(/\u{12345}\u{23456}/u.test("b\u{12345}\u{23456}c"));
try { if (Inst285 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<6954,6965,226>",(assertFalse)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (new RegExp("\u{12345}\u{23456}", "u").test) != "undefined") {_RecordType("<6966,7008,226>",(new RegExp("\u{12345}\u{23456}", "u").test)); Inst286++; } } catch(e) {}try { if (Inst287 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<6970,6976,226>",(RegExp)); Inst287++; } } catch(e) {}
assertFalse(new RegExp("\u{12345}\u{23456}", "u").test("a\udf45\u{23456}b"));
try { if (Inst288 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7032,7043,227>",(assertFalse)); Inst288++; } } catch(e) {}try { if (Inst289 <= 1000 && typeof (/\u{12345}\u{23456}/u.test) != "undefined") {_RecordType("<7044,7070,227>",(/\u{12345}\u{23456}/u.test)); Inst289++; } } catch(e) {}
assertFalse(/\u{12345}\u{23456}/u.test("b\udf45\u{23456}c"));

// Disjunction.
try { if (Inst290 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7111,7121,230>",(assertTrue)); Inst290++; } } catch(e) {}try { if (Inst291 <= 1000 && typeof (new RegExp("\u{12345}(?:\u{23456})", "u").test) != "undefined") {_RecordType("<7122,7168,230>",(new RegExp("\u{12345}(?:\u{23456})", "u").test)); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7126,7132,230>",(RegExp)); Inst292++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}(?:\u{23456})", "u").test(
    "a\u{12345}\u{23456}b"));
try { if (Inst293 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7200,7210,232>",(assertTrue)); Inst293++; } } catch(e) {}try { if (Inst294 <= 1000 && typeof (/\u{12345}(?:\u{23456})/u.test) != "undefined") {_RecordType("<7211,7241,232>",(/\u{12345}(?:\u{23456})/u.test)); Inst294++; } } catch(e) {}
assertTrue(/\u{12345}(?:\u{23456})/u.test("b\u{12345}\u{23456}c"));
try { if (Inst295 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7268,7279,233>",(assertFalse)); Inst295++; } } catch(e) {}try { if (Inst296 <= 1000 && typeof (new RegExp("\u{12345}(?:\u{23456})", "u").test) != "undefined") {_RecordType("<7280,7326,233>",(new RegExp("\u{12345}(?:\u{23456})", "u").test)); Inst296++; } } catch(e) {}try { if (Inst297 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7284,7290,233>",(RegExp)); Inst297++; } } catch(e) {}
assertFalse(new RegExp("\u{12345}(?:\u{23456})", "u").test(
    "a\udf45\u{23456}b"));
try { if (Inst298 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7355,7366,235>",(assertFalse)); Inst298++; } } catch(e) {}try { if (Inst299 <= 1000 && typeof (/\u{12345}(?:\u{23456})/u.test) != "undefined") {_RecordType("<7367,7397,235>",(/\u{12345}(?:\u{23456})/u.test)); Inst299++; } } catch(e) {}
assertFalse(/\u{12345}(?:\u{23456})/u.test("b\udf45\u{23456}c"));

// Alternative.
try { if (Inst300 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7438,7448,238>",(assertTrue)); Inst300++; } } catch(e) {}try { if (Inst301 <= 1000 && typeof (new RegExp("\u{12345}|\u{23456}", "u").test) != "undefined") {_RecordType("<7449,7492,238>",(new RegExp("\u{12345}|\u{23456}", "u").test)); Inst301++; } } catch(e) {}try { if (Inst302 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7453,7459,238>",(RegExp)); Inst302++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}|\u{23456}", "u").test("a\u{12345}b"));
try { if (Inst303 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7510,7520,239>",(assertTrue)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (/\u{12345}|\u{23456}/u.test) != "undefined") {_RecordType("<7521,7548,239>",(/\u{12345}|\u{23456}/u.test)); Inst304++; } } catch(e) {}
assertTrue(/\u{12345}|\u{23456}/u.test("b\u{23456}c"));
try { if (Inst305 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7566,7577,240>",(assertFalse)); Inst305++; } } catch(e) {}try { if (Inst306 <= 1000 && typeof (new RegExp("\u{12345}|\u{23456}", "u").test) != "undefined") {_RecordType("<7578,7621,240>",(new RegExp("\u{12345}|\u{23456}", "u").test)); Inst306++; } } catch(e) {}try { if (Inst307 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7582,7588,240>",(RegExp)); Inst307++; } } catch(e) {}
assertFalse(new RegExp("\u{12345}|\u{23456}", "u").test("a\udf45\ud84db"));
try { if (Inst308 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7642,7653,241>",(assertFalse)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (/\u{12345}|\u{23456}/u.test) != "undefined") {_RecordType("<7654,7681,241>",(/\u{12345}|\u{23456}/u.test)); Inst309++; } } catch(e) {}
assertFalse(/\u{12345}|\u{23456}/u.test("b\udf45\ud808c"));

// Capture.
try { if (Inst310 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7715,7725,244>",(assertTrue)); Inst310++; } } catch(e) {}try { if (Inst311 <= 1000 && typeof (new RegExp("(\u{12345}|\u{23456}).\\1", "u").test) != "undefined") {_RecordType("<7726,7775,244>",(new RegExp("(\u{12345}|\u{23456}).\\1", "u").test)); Inst311++; } } catch(e) {}try { if (Inst312 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7730,7736,244>",(RegExp)); Inst312++; } } catch(e) {}
assertTrue(new RegExp("(\u{12345}|\u{23456}).\\1", "u").test(
    "\u{12345}b\u{12345}"));
try { if (Inst313 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<7806,7816,246>",(assertTrue)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (/(\u{12345}|\u{23456}).\1/u.test) != "undefined") {_RecordType("<7817,7849,246>",(/(\u{12345}|\u{23456}).\1/u.test)); Inst314++; } } catch(e) {}
assertTrue(/(\u{12345}|\u{23456}).\1/u.test("\u{12345}b\u{12345}"));
try { if (Inst315 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7875,7886,247>",(assertFalse)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (new RegExp("(\u{12345}|\u{23456}).\\1", "u").test) != "undefined") {_RecordType("<7887,7936,247>",(new RegExp("(\u{12345}|\u{23456}).\\1", "u").test)); Inst316++; } } catch(e) {}try { if (Inst317 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<7891,7897,247>",(RegExp)); Inst317++; } } catch(e) {}
assertFalse(new RegExp("(\u{12345}|\u{23456}).\\1", "u").test(
    "\u{12345}b\u{23456}"));
try { if (Inst318 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<7967,7978,249>",(assertFalse)); Inst318++; } } catch(e) {}try { if (Inst319 <= 1000 && typeof (/(\u{12345}|\u{23456}).\1/u.test) != "undefined") {_RecordType("<7979,8011,249>",(/(\u{12345}|\u{23456}).\1/u.test)); Inst319++; } } catch(e) {}
assertFalse(/(\u{12345}|\u{23456}).\1/u.test("\u{12345}b\u{23456}"));

// Quantifier.
try { if (Inst320 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<8053,8063,252>",(assertTrue)); Inst320++; } } catch(e) {}try { if (Inst321 <= 1000 && typeof (new RegExp("\u{12345}{3}", "u").test) != "undefined") {_RecordType("<8064,8100,252>",(new RegExp("\u{12345}{3}", "u").test)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8068,8074,252>",(RegExp)); Inst322++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}{3}", "u").test("\u{12345}\u{12345}\u{12345}"));
try { if (Inst323 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<8134,8144,253>",(assertTrue)); Inst323++; } } catch(e) {}try { if (Inst324 <= 1000 && typeof (/\u{12345}{3}/u.test) != "undefined") {_RecordType("<8145,8165,253>",(/\u{12345}{3}/u.test)); Inst324++; } } catch(e) {}
assertTrue(/\u{12345}{3}/u.test("\u{12345}\u{12345}\u{12345}"));
try { if (Inst325 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<8199,8209,254>",(assertTrue)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (new RegExp("\u{12345}{3}").test) != "undefined") {_RecordType("<8210,8241,254>",(new RegExp("\u{12345}{3}").test)); Inst326++; } } catch(e) {}try { if (Inst327 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8214,8220,254>",(RegExp)); Inst327++; } } catch(e) {}
assertTrue(new RegExp("\u{12345}{3}").test("\u{12345}\udf45\udf45"));
try { if (Inst328 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<8269,8280,255>",(assertFalse)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (/\ud808\udf45{3}/u.test) != "undefined") {_RecordType("<8281,8304,255>",(/\ud808\udf45{3}/u.test)); Inst329++; } } catch(e) {}
assertFalse(/\ud808\udf45{3}/u.test("\u{12345}\udf45\udf45"));
try { if (Inst330 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<8332,8342,256>",(assertTrue)); Inst330++; } } catch(e) {}try { if (Inst331 <= 1000 && typeof (/\ud808\udf45{3}/u.test) != "undefined") {_RecordType("<8343,8366,256>",(/\ud808\udf45{3}/u.test)); Inst331++; } } catch(e) {}
assertTrue(/\ud808\udf45{3}/u.test("\u{12345}\u{12345}\u{12345}"));
try { if (Inst332 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<8400,8411,257>",(assertFalse)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (new RegExp("\u{12345}{3}", "u").test) != "undefined") {_RecordType("<8412,8448,257>",(new RegExp("\u{12345}{3}", "u").test)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8416,8422,257>",(RegExp)); Inst334++; } } catch(e) {}
assertFalse(new RegExp("\u{12345}{3}", "u").test("\u{12345}\udf45\udf45"));
try { if (Inst335 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<8476,8487,258>",(assertFalse)); Inst335++; } } catch(e) {}try { if (Inst336 <= 1000 && typeof (/\u{12345}{3}/u.test) != "undefined") {_RecordType("<8488,8508,258>",(/\u{12345}{3}/u.test)); Inst336++; } } catch(e) {}
assertFalse(/\u{12345}{3}/u.test("\u{12345}\udf45\udf45"));

// Literal surrogates.
try { if (Inst337 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8560,8572,261>",(assertEquals)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (new RegExp("\ud800\udc00+", "u").exec) != "undefined") {_RecordType("<8610,8647,262>",(new RegExp("\ud800\udc00+", "u").exec)); Inst338++; } } catch(e) {}try { if (Inst339 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8614,8620,262>",(RegExp)); Inst339++; } } catch(e) {}
assertEquals(["\u{10000}\u{10000}"],
             new RegExp("\ud800\udc00+", "u").exec("\u{10000}\u{10000}"));
try { if (Inst340 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8672,8684,263>",(assertEquals)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (new RegExp("\\ud800\\udc00+", "u").exec) != "undefined") {_RecordType("<8722,8761,264>",(new RegExp("\\ud800\\udc00+", "u").exec)); Inst341++; } } catch(e) {}try { if (Inst342 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8726,8732,264>",(RegExp)); Inst342++; } } catch(e) {}
assertEquals(["\u{10000}\u{10000}"],
             new RegExp("\\ud800\\udc00+", "u").exec("\u{10000}\u{10000}"));

try { if (Inst343 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8787,8799,266>",(assertEquals)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (new RegExp("[\\ud800\\udc03-\\ud900\\udc01\]+", "u").exec) != "undefined") {_RecordType("<8837,8894,267>",(new RegExp("[\\ud800\\udc03-\\ud900\\udc01\]+", "u").exec)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8841,8847,267>",(RegExp)); Inst345++; } } catch(e) {}
assertEquals(["\u{10003}\u{50001}"],
             new RegExp("[\\ud800\\udc03-\\ud900\\udc01\]+", "u").exec(
                 "\u{10003}\u{50001}"));
try { if (Inst346 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<8937,8949,269>",(assertEquals)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (new RegExp("[\ud800\udc03-\u{50001}\]+", "u").exec) != "undefined") {_RecordType("<8987,9037,270>",(new RegExp("[\ud800\udc03-\u{50001}\]+", "u").exec)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<8991,8997,270>",(RegExp)); Inst348++; } } catch(e) {}
assertEquals(["\u{10003}\u{50001}"],
             new RegExp("[\ud800\udc03-\u{50001}\]+", "u").exec(
                 "\u{10003}\u{50001}"));

// Unicode escape sequences to represent a non-BMP character cannot have
// mixed notation, and must follow the rules for RegExpUnicodeEscapeSequence.
try { if (Inst349 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<9232,9244,275>",(assertThrows)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9255,9261,275>",(RegExp)); Inst350++; } } catch(e) {}
assertThrows(() => new RegExp("[\\ud800\udc03-\ud900\\udc01\]+", "u"));
try { if (Inst351 <= 1000 && typeof (assertThrows) != "undefined") {_RecordType("<9304,9316,276>",(assertThrows)); Inst351++; } } catch(e) {}try { if (Inst352 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9327,9333,276>",(RegExp)); Inst352++; } } catch(e) {}
assertThrows(() => new RegExp("[\\ud800\udc03-\ud900\\udc01\]+", "u"));
try { if (Inst353 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9376,9386,277>",(assertNull)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (new RegExp("\\ud800\udc00+", "u").exec) != "undefined") {_RecordType("<9387,9425,277>",(new RegExp("\\ud800\udc00+", "u").exec)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9391,9397,277>",(RegExp)); Inst355++; } } catch(e) {}
assertNull(new RegExp("\\ud800\udc00+", "u").exec("\u{10000}\u{10000}"));
try { if (Inst356 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9450,9460,278>",(assertNull)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (new RegExp("\ud800\\udc00+", "u").exec) != "undefined") {_RecordType("<9461,9499,278>",(new RegExp("\ud800\\udc00+", "u").exec)); Inst357++; } } catch(e) {}try { if (Inst358 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9465,9471,278>",(RegExp)); Inst358++; } } catch(e) {}
assertNull(new RegExp("\ud800\\udc00+", "u").exec("\u{10000}\u{10000}"));

try { if (Inst359 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9525,9535,280>",(assertNull)); Inst359++; } } catch(e) {}try { if (Inst360 <= 1000 && typeof (new RegExp("[\\ud800\udc00]", "u").exec) != "undefined") {_RecordType("<9536,9575,280>",(new RegExp("[\\ud800\udc00]", "u").exec)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9540,9546,280>",(RegExp)); Inst361++; } } catch(e) {}
assertNull(new RegExp("[\\ud800\udc00]", "u").exec("\u{10000}"));
try { if (Inst362 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9591,9601,281>",(assertNull)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (new RegExp("[\\{ud800}\udc00]", "u").exec) != "undefined") {_RecordType("<9602,9643,281>",(new RegExp("[\\{ud800}\udc00]", "u").exec)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9606,9612,281>",(RegExp)); Inst364++; } } catch(e) {}
assertNull(new RegExp("[\\{ud800}\udc00]", "u").exec("\u{10000}"));
try { if (Inst365 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9659,9669,282>",(assertNull)); Inst365++; } } catch(e) {}try { if (Inst366 <= 1000 && typeof (new RegExp("[\ud800\\udc00]", "u").exec) != "undefined") {_RecordType("<9670,9709,282>",(new RegExp("[\ud800\\udc00]", "u").exec)); Inst366++; } } catch(e) {}try { if (Inst367 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9674,9680,282>",(RegExp)); Inst367++; } } catch(e) {}
assertNull(new RegExp("[\ud800\\udc00]", "u").exec("\u{10000}"));
try { if (Inst368 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9725,9735,283>",(assertNull)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (new RegExp("[\ud800\\{udc00}]", "u").exec) != "undefined") {_RecordType("<9736,9777,283>",(new RegExp("[\ud800\\{udc00}]", "u").exec)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<9740,9746,283>",(RegExp)); Inst370++; } } catch(e) {}
assertNull(new RegExp("[\ud800\\{udc00}]", "u").exec("\u{10000}"));

try { if (Inst371 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9794,9804,285>",(assertNull)); Inst371++; } } catch(e) {}try { if (Inst372 <= 1000 && typeof (/\u{d800}\u{dc00}+/u.exec) != "undefined") {_RecordType("<9805,9830,285>",(/\u{d800}\u{dc00}+/u.exec)); Inst372++; } } catch(e) {}
assertNull(/\u{d800}\u{dc00}+/u.exec("\ud800\udc00\udc00"));
try { if (Inst373 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9855,9865,286>",(assertNull)); Inst373++; } } catch(e) {}try { if (Inst374 <= 1000 && typeof (/\ud800\u{dc00}+/u.exec) != "undefined") {_RecordType("<9866,9889,286>",(/\ud800\u{dc00}+/u.exec)); Inst374++; } } catch(e) {}
assertNull(/\ud800\u{dc00}+/u.exec("\ud800\udc00\udc00"));
try { if (Inst375 <= 1000 && typeof (assertNull) != "undefined") {_RecordType("<9914,9924,287>",(assertNull)); Inst375++; } } catch(e) {}try { if (Inst376 <= 1000 && typeof (/\u{d800}\udc00+/u.exec) != "undefined") {_RecordType("<9925,9948,287>",(/\u{d800}\udc00+/u.exec)); Inst376++; } } catch(e) {}
assertNull(/\u{d800}\udc00+/u.exec("\ud800\udc00\udc00"));

