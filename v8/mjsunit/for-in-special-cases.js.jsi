var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-gc

try { if (Inst0 <= 1000 && typeof (for_in_null) != "undefined") {_RecordType("<1630,1641,30>",(for_in_null)); Inst0++; } } catch(e) {}
function for_in_null() {
try { if (Inst2 <= 1000 && typeof (e) != "undefined") {_RecordType("<1716,1717,35>",(e)); Inst2++; } } catch(e) {}
  try {
    for (var x in null) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1667,1668,32>",(x)); Inst1++; } } catch(e) {}
      return false;
    }
  } catch(e) {
    return false;
  }
  return true;
}

try { if (Inst3 <= 1000 && typeof (for_in_undefined) != "undefined") {_RecordType("<1770,1786,41>",(for_in_undefined)); Inst3++; } } catch(e) {}
function for_in_undefined() {
try { if (Inst6 <= 1000 && typeof (e) != "undefined") {_RecordType("<1866,1867,46>",(e)); Inst6++; } } catch(e) {}
  try {
    for (var x in undefined) {
try { if (Inst4 <= 1000 && typeof (x) != "undefined") {_RecordType("<1812,1813,43>",(x)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<1817,1826,43>",(undefined)); Inst5++; } } catch(e) {}
      return false;
    }
  } catch(e) {
    return false;
  }
  return true;
}

for (var i = 0; i < 10; ++i) {
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<1920,1921,52>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<1927,1928,52>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<1937,1938,52>",(i)); Inst9++; } } catch(e) {}
try { if (Inst10 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1944,1954,53>",(assertTrue)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (for_in_null) != "undefined") {_RecordType("<1955,1966,53>",(for_in_null)); Inst11++; } } catch(e) {}
  assertTrue(for_in_null());
try { if (Inst12 <= 1000 && typeof (gc) != "undefined") {_RecordType("<1973,1975,54>",(gc)); Inst12++; } } catch(e) {}
  gc();
}

for (var j = 0; j < 10; ++j) {
try { if (Inst13 <= 1000 && typeof (j) != "undefined") {_RecordType("<1991,1992,57>",(j)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (j) != "undefined") {_RecordType("<1998,1999,57>",(j)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (j) != "undefined") {_RecordType("<2008,2009,57>",(j)); Inst15++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2015,2025,58>",(assertTrue)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (for_in_undefined) != "undefined") {_RecordType("<2026,2042,58>",(for_in_undefined)); Inst17++; } } catch(e) {}
  assertTrue(for_in_undefined());
try { if (Inst18 <= 1000 && typeof (gc) != "undefined") {_RecordType("<2049,2051,59>",(gc)); Inst18++; } } catch(e) {}
  gc();
}

try { if (Inst19 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2058,2070,62>",(assertEquals)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<2075,2076,62>",(i)); Inst20++; } } catch(e) {}
assertEquals(10, i);
try { if (Inst21 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2079,2091,63>",(assertEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (j) != "undefined") {_RecordType("<2096,2097,63>",(j)); Inst22++; } } catch(e) {}
assertEquals(10, j);


try { if (Inst23 <= 1000 && typeof (Accumulate) != "undefined") {_RecordType("<2111,2121,66>",(Accumulate)); Inst23++; } } catch(e) {}
function Accumulate(x) {
try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<2122,2123,66>",(x)); Inst24++; } } catch(e) {}
  var accumulator = "";
try { if (Inst25 <= 1000 && typeof (accumulator) != "undefined") {_RecordType("<2133,2144,67>",(accumulator)); Inst25++; } } catch(e) {}
  for (var i in x) {
try { if (Inst26 <= 1000 && typeof (i) != "undefined") {_RecordType("<2162,2163,68>",(i)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (x) != "undefined") {_RecordType("<2167,2168,68>",(x)); Inst27++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (i) != "undefined") {_RecordType("<2191,2192,69>",(i)); Inst29++; } } catch(e) {}
    accumulator += i;
try { if (Inst28 <= 1000 && typeof (accumulator) != "undefined") {_RecordType("<2176,2187,69>",(accumulator)); Inst28++; } } catch(e) {}
  }
try { if (Inst30 <= 1000 && typeof (accumulator) != "undefined") {_RecordType("<2207,2218,71>",(accumulator)); Inst30++; } } catch(e) {}
  return accumulator;
}

for (var i = 0; i < 3; ++i) {
try { if (Inst31 <= 1000 && typeof (i) != "undefined") {_RecordType("<2232,2233,74>",(i)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (i) != "undefined") {_RecordType("<2239,2240,74>",(i)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2248,2249,74>",(i)); Inst33++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (Accumulate) != "undefined") {_RecordType("<2270,2280,75>",(Accumulate)); Inst35++; } } catch(e) {}
  var elements = Accumulate("abcd");
try { if (Inst34 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2259,2267,75>",(elements)); Inst34++; } } catch(e) {}
  // We do not assume that for-in enumerates elements in order.
try { if (Inst36 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2356,2366,77>",(assertTrue)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<2373,2389,77>",(elements.indexOf)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2373,2381,77>",(elements)); Inst38++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("0"));
try { if (Inst39 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2399,2409,78>",(assertTrue)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<2416,2432,78>",(elements.indexOf)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2416,2424,78>",(elements)); Inst41++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("1"));
try { if (Inst42 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2442,2452,79>",(assertTrue)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<2459,2475,79>",(elements.indexOf)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2459,2467,79>",(elements)); Inst44++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("2"));
try { if (Inst45 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2485,2495,80>",(assertTrue)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<2502,2518,80>",(elements.indexOf)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2502,2510,80>",(elements)); Inst47++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("3"));
try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2528,2540,81>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (elements.length) != "undefined") {_RecordType("<2544,2559,81>",(elements.length)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2544,2552,81>",(elements)); Inst50++; } } catch(e) {}
  assertEquals(4, elements.length);
}

try { if (Inst51 <= 1000 && typeof (for_in_string_prototype) != "undefined") {_RecordType("<2574,2597,84>",(for_in_string_prototype)); Inst51++; } } catch(e) {}
function for_in_string_prototype() {

try { if (Inst53 <= 1000 && typeof (String) != "undefined") {_RecordType("<2617,2623,86>",(String)); Inst53++; } } catch(e) {}
  var x = new String("abc");
try { if (Inst52 <= 1000 && typeof (x) != "undefined") {_RecordType("<2609,2610,86>",(x)); Inst52++; } } catch(e) {}
  x.foo = 19;
try { if (Inst54 <= 1000 && typeof (x.foo) != "undefined") {_RecordType("<2634,2639,87>",(x.foo)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<2634,2635,87>",(x)); Inst55++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (B) != "undefined") {_RecordType("<2657,2658,88>",(B)); Inst56++; } } catch(e) {}
  function B() {
    this.bar = 5;
try { if (Inst57 <= 1000 && typeof (this.bar) != "undefined") {_RecordType("<2667,2675,89>",(this.bar)); Inst57++; } } catch(e) {}
    this[7] = 4;
try { if (Inst58 <= 1000 && typeof (this[7]) != "undefined") {_RecordType("<2685,2692,90>",(this[7])); Inst58++; } } catch(e) {}
  }
try { if (Inst61 <= 1000 && typeof (x) != "undefined") {_RecordType("<2718,2719,92>",(x)); Inst61++; } } catch(e) {}
  B.prototype = x;
try { if (Inst59 <= 1000 && typeof (B.prototype) != "undefined") {_RecordType("<2704,2715,92>",(B.prototype)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (B) != "undefined") {_RecordType("<2704,2705,92>",(B)); Inst60++; } } catch(e) {}

try { if (Inst63 <= 1000 && typeof (B) != "undefined") {_RecordType("<2736,2737,94>",(B)); Inst63++; } } catch(e) {}
  var y = new B();
try { if (Inst62 <= 1000 && typeof (y) != "undefined") {_RecordType("<2728,2729,94>",(y)); Inst62++; } } catch(e) {}
  y.gub = 13;
try { if (Inst64 <= 1000 && typeof (y.gub) != "undefined") {_RecordType("<2743,2748,95>",(y.gub)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (y) != "undefined") {_RecordType("<2743,2744,95>",(y)); Inst65++; } } catch(e) {}

try { if (Inst67 <= 1000 && typeof (Accumulate) != "undefined") {_RecordType("<2773,2783,97>",(Accumulate)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (y) != "undefined") {_RecordType("<2784,2785,97>",(y)); Inst68++; } } catch(e) {}
  var elements = Accumulate(y);
try { if (Inst66 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2762,2770,97>",(elements)); Inst66++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (Accumulate) != "undefined") {_RecordType("<2806,2816,98>",(Accumulate)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (y) != "undefined") {_RecordType("<2817,2818,98>",(y)); Inst71++; } } catch(e) {}
  var elements1 = Accumulate(y);
try { if (Inst69 <= 1000 && typeof (elements1) != "undefined") {_RecordType("<2794,2803,98>",(elements1)); Inst69++; } } catch(e) {}
  // If for-in returns elements in a different order on multiple calls, this
  // assert will fail.  If that happens, consider if that behavior is OK.
try { if (Inst72 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2974,2986,101>",(assertEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (elements) != "undefined") {_RecordType("<2987,2995,101>",(elements)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (elements1) != "undefined") {_RecordType("<2997,3006,101>",(elements1)); Inst74++; } } catch(e) {}
  assertEquals(elements, elements1, "For-in elements not the same both times.");
  // We do not assume that for-in enumerates elements in order.
try { if (Inst75 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3119,3129,103>",(assertTrue)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3136,3152,103>",(elements.indexOf)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3136,3144,103>",(elements)); Inst77++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("0"));
try { if (Inst78 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3162,3172,104>",(assertTrue)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3179,3195,104>",(elements.indexOf)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3179,3187,104>",(elements)); Inst80++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("1"));
try { if (Inst81 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3205,3215,105>",(assertTrue)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3222,3238,105>",(elements.indexOf)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3222,3230,105>",(elements)); Inst83++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("2"));
try { if (Inst84 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3248,3258,106>",(assertTrue)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3265,3281,106>",(elements.indexOf)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3265,3273,106>",(elements)); Inst86++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("7"));
try { if (Inst87 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3291,3301,107>",(assertTrue)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3308,3324,107>",(elements.indexOf)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3308,3316,107>",(elements)); Inst89++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("foo"));
try { if (Inst90 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3336,3346,108>",(assertTrue)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3353,3369,108>",(elements.indexOf)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3353,3361,108>",(elements)); Inst92++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("bar"));
try { if (Inst93 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3381,3391,109>",(assertTrue)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3398,3414,109>",(elements.indexOf)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3398,3406,109>",(elements)); Inst95++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("gub"));
try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3426,3438,110>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (elements.length) != "undefined") {_RecordType("<3443,3458,110>",(elements.length)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3443,3451,110>",(elements)); Inst98++; } } catch(e) {}
  assertEquals(13, elements.length);

try { if (Inst100 <= 1000 && typeof (Accumulate) != "undefined") {_RecordType("<3475,3485,112>",(Accumulate)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (x) != "undefined") {_RecordType("<3486,3487,112>",(x)); Inst101++; } } catch(e) {}
  elements = Accumulate(x);
try { if (Inst99 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3464,3472,112>",(elements)); Inst99++; } } catch(e) {}
try { if (Inst102 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3492,3502,113>",(assertTrue)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3509,3525,113>",(elements.indexOf)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3509,3517,113>",(elements)); Inst104++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("0"));
try { if (Inst105 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3535,3545,114>",(assertTrue)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3552,3568,114>",(elements.indexOf)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3552,3560,114>",(elements)); Inst107++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("1"));
try { if (Inst108 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3578,3588,115>",(assertTrue)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3595,3611,115>",(elements.indexOf)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3595,3603,115>",(elements)); Inst110++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("2"));
try { if (Inst111 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3621,3631,116>",(assertTrue)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (elements.indexOf) != "undefined") {_RecordType("<3638,3654,116>",(elements.indexOf)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3638,3646,116>",(elements)); Inst113++; } } catch(e) {}
  assertTrue(-1 != elements.indexOf("foo"));
try { if (Inst114 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3666,3678,117>",(assertEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (elements.length) != "undefined") {_RecordType("<3682,3697,117>",(elements.length)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (elements) != "undefined") {_RecordType("<3682,3690,117>",(elements)); Inst116++; } } catch(e) {}
  assertEquals(6, elements.length);
}

try { if (Inst117 <= 1000 && typeof (for_in_string_prototype) != "undefined") {_RecordType("<3703,3726,120>",(for_in_string_prototype)); Inst117++; } } catch(e) {}
for_in_string_prototype();
try { if (Inst118 <= 1000 && typeof (for_in_string_prototype) != "undefined") {_RecordType("<3730,3753,121>",(for_in_string_prototype)); Inst118++; } } catch(e) {}
for_in_string_prototype();

