var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

try { if (Inst0 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1607,1609,28>",(f0)); Inst0++; } } catch(e) {}
function f0() {
  return this;
}

try { if (Inst1 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1632,1642,32>",(assertTrue)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1652,1659,32>",(f0.call)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1652,1654,32>",(f0)); Inst3++; } } catch(e) {}
assertTrue(this === f0.call(), "1");

try { if (Inst4 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1670,1680,34>",(assertTrue)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1690,1697,34>",(f0.call)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1690,1692,34>",(f0)); Inst6++; } } catch(e) {}
assertTrue(this === f0.call(this), "w");
try { if (Inst7 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1711,1721,35>",(assertTrue)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1731,1738,35>",(f0.call)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1731,1733,35>",(f0)); Inst9++; } } catch(e) {}
assertTrue(this === f0.call(this, 1), "w");
try { if (Inst10 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1755,1765,36>",(assertTrue)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1775,1782,36>",(f0.call)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1775,1777,36>",(f0)); Inst12++; } } catch(e) {}
assertTrue(this === f0.call(this, 1, 2), "w");

try { if (Inst13 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1803,1813,38>",(assertTrue)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1823,1830,38>",(f0.call)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1823,1825,38>",(f0)); Inst15++; } } catch(e) {}
assertTrue(this === f0.call(null), "3a");
try { if (Inst16 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1845,1855,39>",(assertTrue)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1865,1872,39>",(f0.call)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1865,1867,39>",(f0)); Inst18++; } } catch(e) {}
assertTrue(this === f0.call(null, 1), "3b");
try { if (Inst19 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1890,1900,40>",(assertTrue)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1910,1917,40>",(f0.call)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1910,1912,40>",(f0)); Inst21++; } } catch(e) {}
assertTrue(this === f0.call(null, 1, 2), "3c");

try { if (Inst22 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1939,1949,42>",(assertTrue)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<1959,1966,42>",(f0.call)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (f0) != "undefined") {_RecordType("<1959,1961,42>",(f0)); Inst24++; } } catch(e) {}
assertTrue(this === f0.call(void 0), "4a");
try { if (Inst25 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1983,1993,43>",(assertTrue)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<2003,2010,43>",(f0.call)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2003,2005,43>",(f0)); Inst27++; } } catch(e) {}
assertTrue(this === f0.call(void 0, 1), "4b");
try { if (Inst28 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2030,2040,44>",(assertTrue)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<2050,2057,44>",(f0.call)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2050,2052,44>",(f0)); Inst30++; } } catch(e) {}
assertTrue(this === f0.call(void 0, 1, 2), "4c");

var x = {};
try { if (Inst31 <= 1000 && typeof (x) != "undefined") {_RecordType("<2085,2086,46>",(x)); Inst31++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2093,2103,47>",(assertTrue)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (x) != "undefined") {_RecordType("<2104,2105,47>",(x)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<2110,2117,47>",(f0.call)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2110,2112,47>",(f0)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<2118,2119,47>",(x)); Inst36++; } } catch(e) {}
assertTrue(x === f0.call(x));
try { if (Inst37 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2123,2133,48>",(assertTrue)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (x) != "undefined") {_RecordType("<2134,2135,48>",(x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<2140,2147,48>",(f0.call)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2140,2142,48>",(f0)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2148,2149,48>",(x)); Inst41++; } } catch(e) {}
assertTrue(x === f0.call(x, 1));
try { if (Inst42 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2156,2166,49>",(assertTrue)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (x) != "undefined") {_RecordType("<2167,2168,49>",(x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (f0.call) != "undefined") {_RecordType("<2173,2180,49>",(f0.call)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2173,2175,49>",(f0)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<2181,2182,49>",(x)); Inst46++; } } catch(e) {}
assertTrue(x === f0.call(x, 1, 2));


try { if (Inst47 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2203,2205,52>",(f1)); Inst47++; } } catch(e) {}
function f1(a) {
try { if (Inst48 <= 1000 && typeof (a) != "undefined") {_RecordType("<2206,2207,52>",(a)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (a) != "undefined") {_RecordType("<2217,2218,53>",(a)); Inst50++; } } catch(e) {}
  a = a || 'i';
try { if (Inst49 <= 1000 && typeof (a) != "undefined") {_RecordType("<2213,2214,53>",(a)); Inst49++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (this[a]) != "undefined") {_RecordType("<2236,2243,54>",(this[a])); Inst51++; } } catch(e) {}
  return this[a];
}

try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2248,2260,57>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (f1.call) != "undefined") {_RecordType("<2264,2271,57>",(f1.call)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2264,2266,57>",(f1)); Inst54++; } } catch(e) {}
assertEquals(1, f1.call({i:1}));
try { if (Inst55 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2281,2293,58>",(assertEquals)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (f1.call) != "undefined") {_RecordType("<2298,2305,58>",(f1.call)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2298,2300,58>",(f1)); Inst57++; } } catch(e) {}
assertEquals(42, f1.call({i:42}, 'i'));
try { if (Inst58 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2321,2333,59>",(assertEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (f1.call) != "undefined") {_RecordType("<2338,2345,59>",(f1.call)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2338,2340,59>",(f1)); Inst60++; } } catch(e) {}
assertEquals(87, f1.call({j:87}, 'j', 1));
try { if (Inst61 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2364,2376,60>",(assertEquals)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (f1.call) != "undefined") {_RecordType("<2381,2388,60>",(f1.call)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2381,2383,60>",(f1)); Inst63++; } } catch(e) {}
assertEquals(99, f1.call({k:99}, 'k', 1, 2));


try { if (Inst64 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2421,2423,63>",(f2)); Inst64++; } } catch(e) {}
function f2(a, b) {
try { if (Inst65 <= 1000 && typeof (a) != "undefined") {_RecordType("<2424,2425,63>",(a)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (b) != "undefined") {_RecordType("<2427,2428,63>",(b)); Inst66++; } } catch(e) {}
try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<2438,2439,64>",(a)); Inst68++; } } catch(e) {}
  a = a || 'n';
try { if (Inst67 <= 1000 && typeof (a) != "undefined") {_RecordType("<2434,2435,64>",(a)); Inst67++; } } catch(e) {}
try { if (Inst70 <= 1000 && typeof (b) != "undefined") {_RecordType("<2454,2455,65>",(b)); Inst70++; } } catch(e) {}
  b = b || 2;
try { if (Inst69 <= 1000 && typeof (b) != "undefined") {_RecordType("<2450,2451,65>",(b)); Inst69++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (this[a]) != "undefined") {_RecordType("<2471,2478,66>",(this[a])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (b) != "undefined") {_RecordType("<2481,2482,66>",(b)); Inst72++; } } catch(e) {}
  return this[a] + b;
}

var x = {n: 1};
try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<2491,2492,69>",(x)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2503,2515,70>",(assertEquals)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (f2.call) != "undefined") {_RecordType("<2519,2526,70>",(f2.call)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2519,2521,70>",(f2)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (x) != "undefined") {_RecordType("<2527,2528,70>",(x)); Inst77++; } } catch(e) {}
assertEquals(3, f2.call(x));
try { if (Inst78 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2532,2544,71>",(assertEquals)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (f2.call) != "undefined") {_RecordType("<2549,2556,71>",(f2.call)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2549,2551,71>",(f2)); Inst80++; } } catch(e) {}
assertEquals(14, f2.call({i:12}, 'i'));
try { if (Inst81 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2572,2584,72>",(assertEquals)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (f2.call) != "undefined") {_RecordType("<2589,2596,72>",(f2.call)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2589,2591,72>",(f2)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (x) != "undefined") {_RecordType("<2597,2598,72>",(x)); Inst84++; } } catch(e) {}
assertEquals(42, f2.call(x, 'n', 41));
try { if (Inst85 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2611,2623,73>",(assertEquals)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (f2.call) != "undefined") {_RecordType("<2628,2635,73>",(f2.call)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2628,2630,73>",(f2)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (x) != "undefined") {_RecordType("<2636,2637,73>",(x)); Inst88++; } } catch(e) {}
assertEquals(87, f2.call(x, 'n', 86, 1));
try { if (Inst89 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2653,2665,74>",(assertEquals)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (f2.call) != "undefined") {_RecordType("<2670,2677,74>",(f2.call)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (f2) != "undefined") {_RecordType("<2670,2672,74>",(f2)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (x) != "undefined") {_RecordType("<2678,2679,74>",(x)); Inst92++; } } catch(e) {}
assertEquals(99, f2.call(x, 'n', 98, 1, 2));


try { if (Inst93 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2709,2711,77>",(fn)); Inst93++; } } catch(e) {}
function fn() {
try { if (Inst94 <= 1000 && typeof (arguments.length) != "undefined") {_RecordType("<2725,2741,78>",(arguments.length)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2725,2734,78>",(arguments)); Inst95++; } } catch(e) {}
  return arguments.length;
}

try { if (Inst96 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2746,2758,81>",(assertEquals)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2762,2769,81>",(fn.call)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2762,2764,81>",(fn)); Inst98++; } } catch(e) {}
assertEquals(0, fn.call());
try { if (Inst99 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2774,2786,82>",(assertEquals)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2790,2797,82>",(fn.call)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2790,2792,82>",(fn)); Inst101++; } } catch(e) {}
assertEquals(0, fn.call(this));
try { if (Inst102 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2806,2818,83>",(assertEquals)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2822,2829,83>",(fn.call)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2822,2824,83>",(fn)); Inst104++; } } catch(e) {}
assertEquals(0, fn.call(null));
try { if (Inst105 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2838,2850,84>",(assertEquals)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2854,2861,84>",(fn.call)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2854,2856,84>",(fn)); Inst107++; } } catch(e) {}
assertEquals(0, fn.call(void 0));
try { if (Inst108 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2872,2884,85>",(assertEquals)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2888,2895,85>",(fn.call)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2888,2890,85>",(fn)); Inst110++; } } catch(e) {}
assertEquals(1, fn.call(this, 1));
try { if (Inst111 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2907,2919,86>",(assertEquals)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2923,2930,86>",(fn.call)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2923,2925,86>",(fn)); Inst113++; } } catch(e) {}
assertEquals(2, fn.call(this, 1, 2));
try { if (Inst114 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2945,2957,87>",(assertEquals)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (fn.call) != "undefined") {_RecordType("<2961,2968,87>",(fn.call)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (fn) != "undefined") {_RecordType("<2961,2963,87>",(fn)); Inst116++; } } catch(e) {}
assertEquals(3, fn.call(this, 1, 2, 3));

