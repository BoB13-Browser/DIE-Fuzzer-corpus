var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

try { if (Inst0 <= 1000 && typeof (OrBB) != "undefined") {_RecordType("<1607,1611,28>",(OrBB)); Inst0++; } } catch(e) {}
function OrBB(x,y) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1612,1613,28>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (y) != "undefined") {_RecordType("<1614,1615,28>",(y)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<1629,1630,29>",(x)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (y) != "undefined") {_RecordType("<1641,1642,29>",(y)); Inst4++; } } catch(e) {}
  return (x == 0) || (y == 0);
}

try { if (Inst5 <= 1000 && typeof (OrBN) != "undefined") {_RecordType("<1662,1666,32>",(OrBN)); Inst5++; } } catch(e) {}
function OrBN(x,y) {
try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<1667,1668,32>",(x)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (y) != "undefined") {_RecordType("<1669,1670,32>",(y)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (x) != "undefined") {_RecordType("<1684,1685,33>",(x)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (y) != "undefined") {_RecordType("<1695,1696,33>",(y)); Inst9++; } } catch(e) {}
  return (x == 0) || y;
}

try { if (Inst10 <= 1000 && typeof (OrNB) != "undefined") {_RecordType("<1710,1714,36>",(OrNB)); Inst10++; } } catch(e) {}
function OrNB(x,y) {
try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1715,1716,36>",(x)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (y) != "undefined") {_RecordType("<1717,1718,36>",(y)); Inst12++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<1731,1732,37>",(x)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<1737,1738,37>",(y)); Inst14++; } } catch(e) {}
  return x || (y == 0);
}

try { if (Inst15 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<1758,1762,40>",(OrNN)); Inst15++; } } catch(e) {}
function OrNN(x,y) {
try { if (Inst16 <= 1000 && typeof (x) != "undefined") {_RecordType("<1763,1764,40>",(x)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<1765,1766,40>",(y)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<1779,1780,41>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (y) != "undefined") {_RecordType("<1784,1785,41>",(y)); Inst19++; } } catch(e) {}
  return x || y;
}

try { if (Inst20 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1790,1800,44>",(assertTrue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (OrBB) != "undefined") {_RecordType("<1801,1805,44>",(OrBB)); Inst21++; } } catch(e) {}
assertTrue(OrBB(0, 0));
try { if (Inst22 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1814,1824,45>",(assertTrue)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (OrBB) != "undefined") {_RecordType("<1825,1829,45>",(OrBB)); Inst23++; } } catch(e) {}
assertTrue(OrBB(1, 0));
try { if (Inst24 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1838,1848,46>",(assertTrue)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (OrBB) != "undefined") {_RecordType("<1849,1853,46>",(OrBB)); Inst25++; } } catch(e) {}
assertTrue(OrBB(0, 1));
try { if (Inst26 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<1862,1873,47>",(assertFalse)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (OrBB) != "undefined") {_RecordType("<1874,1878,47>",(OrBB)); Inst27++; } } catch(e) {}
assertFalse(OrBB(1, 1));

try { if (Inst28 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1888,1898,49>",(assertTrue)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (OrBN) != "undefined") {_RecordType("<1899,1903,49>",(OrBN)); Inst29++; } } catch(e) {}
assertTrue(OrBN(0, 0));
try { if (Inst30 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1912,1924,50>",(assertEquals)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (OrBN) != "undefined") {_RecordType("<1928,1932,50>",(OrBN)); Inst31++; } } catch(e) {}
assertEquals(0, OrBN(1, 0));
try { if (Inst32 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<1941,1951,51>",(assertTrue)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (OrBN) != "undefined") {_RecordType("<1952,1956,51>",(OrBN)); Inst33++; } } catch(e) {}
assertTrue(OrBN(0, 1));
try { if (Inst34 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1965,1977,52>",(assertEquals)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (OrBN) != "undefined") {_RecordType("<1981,1985,52>",(OrBN)); Inst35++; } } catch(e) {}
assertEquals(1, OrBN(1, 1));
try { if (Inst36 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1994,2006,53>",(assertEquals)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (OrBN) != "undefined") {_RecordType("<2010,2014,53>",(OrBN)); Inst37++; } } catch(e) {}
assertEquals(2, OrBN(1, 2));

try { if (Inst38 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2024,2034,55>",(assertTrue)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (OrNB) != "undefined") {_RecordType("<2035,2039,55>",(OrNB)); Inst39++; } } catch(e) {}
assertTrue(OrNB(0, 0));
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2048,2060,56>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (OrNB) != "undefined") {_RecordType("<2064,2068,56>",(OrNB)); Inst41++; } } catch(e) {}
assertEquals(1, OrNB(1, 0));
try { if (Inst42 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2077,2088,57>",(assertFalse)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (OrNB) != "undefined") {_RecordType("<2089,2093,57>",(OrNB)); Inst43++; } } catch(e) {}
assertFalse(OrNB(0, 1));
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2102,2114,58>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (OrNB) != "undefined") {_RecordType("<2118,2122,58>",(OrNB)); Inst45++; } } catch(e) {}
assertEquals(1, OrNB(1, 1));
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2131,2143,59>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (OrNB) != "undefined") {_RecordType("<2147,2151,59>",(OrNB)); Inst47++; } } catch(e) {}
assertEquals(2, OrNB(2, 1));

try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2161,2173,61>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<2177,2181,61>",(OrNN)); Inst49++; } } catch(e) {}
assertEquals(0, OrNN(0, 0));
try { if (Inst50 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2190,2202,62>",(assertEquals)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<2206,2210,62>",(OrNN)); Inst51++; } } catch(e) {}
assertEquals(1, OrNN(1, 0));
try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2219,2231,63>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<2235,2239,63>",(OrNN)); Inst53++; } } catch(e) {}
assertEquals(2, OrNN(2, 0));
try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2248,2260,64>",(assertEquals)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<2264,2268,64>",(OrNN)); Inst55++; } } catch(e) {}
assertEquals(1, OrNN(0, 1));
try { if (Inst56 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2277,2289,65>",(assertEquals)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<2293,2297,65>",(OrNN)); Inst57++; } } catch(e) {}
assertEquals(2, OrNN(0, 2));
try { if (Inst58 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2306,2318,66>",(assertEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (OrNN) != "undefined") {_RecordType("<2322,2326,66>",(OrNN)); Inst59++; } } catch(e) {}
assertEquals(1, OrNN(1, 2));

