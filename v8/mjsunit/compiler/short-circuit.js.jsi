var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Test some expression contexts involving short-circuit boolean
// operations that did not otherwise have test coverage.


var x = 42;
try { if (Inst0 <= 1000 && typeof (x) != "undefined") {_RecordType("<1726,1727,32>",(x)); Inst0++; } } catch(e) {}

// Literals in value/test context.
try { if (Inst1 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1770,1782,35>",(assertEquals)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (x) != "undefined") {_RecordType("<1783,1784,35>",(x)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (x) != "undefined") {_RecordType("<1812,1813,35>",(x)); Inst3++; } } catch(e) {}
assertEquals(x, function () { return 0 || x }());
try { if (Inst4 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1820,1832,36>",(assertEquals)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (x) != "undefined") {_RecordType("<1862,1863,36>",(x)); Inst5++; } } catch(e) {}
assertEquals(1, function () { return 1 || x }());

// Literals in test/value context.
try { if (Inst6 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1906,1918,39>",(assertEquals)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (x) != "undefined") {_RecordType("<1948,1949,39>",(x)); Inst7++; } } catch(e) {}
assertEquals(0, function () { return 0 && x }());
try { if (Inst8 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1956,1968,40>",(assertEquals)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (x) != "undefined") {_RecordType("<1969,1970,40>",(x)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (x) != "undefined") {_RecordType("<1998,1999,40>",(x)); Inst10++; } } catch(e) {}
assertEquals(x, function () { return 1 && x }());

// A value on top of the stack in value/test context.
try { if (Inst11 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2061,2073,43>",(assertEquals)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (x) != "undefined") {_RecordType("<2074,2075,43>",(x)); Inst12++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (y) != "undefined") {_RecordType("<2098,2099,43>",(y)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<2105,2106,43>",(x)); Inst15++; } } catch(e) {}
assertEquals(x, function(y) { return y++ || x }(0));
try { if (Inst13 <= 1000 && typeof (y) != "undefined") {_RecordType("<2086,2087,43>",(y)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2114,2126,44>",(assertEquals)); Inst16++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (y) != "undefined") {_RecordType("<2151,2152,44>",(y)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<2158,2159,44>",(x)); Inst19++; } } catch(e) {}
assertEquals(1, function(y) { return y++ || x }(1));
try { if (Inst17 <= 1000 && typeof (y) != "undefined") {_RecordType("<2139,2140,44>",(y)); Inst17++; } } catch(e) {}

// A value on top of the stack in a test/value context.
try { if (Inst20 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2224,2236,47>",(assertEquals)); Inst20++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (y) != "undefined") {_RecordType("<2261,2262,47>",(y)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (x) != "undefined") {_RecordType("<2268,2269,47>",(x)); Inst23++; } } catch(e) {}
assertEquals(0, function(y) { return y++ && x }(0));
try { if (Inst21 <= 1000 && typeof (y) != "undefined") {_RecordType("<2249,2250,47>",(y)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2277,2289,48>",(assertEquals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (x) != "undefined") {_RecordType("<2290,2291,48>",(x)); Inst25++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (y) != "undefined") {_RecordType("<2314,2315,48>",(y)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (x) != "undefined") {_RecordType("<2321,2322,48>",(x)); Inst28++; } } catch(e) {}
assertEquals(x, function(y) { return y++ && x }(1));
try { if (Inst26 <= 1000 && typeof (y) != "undefined") {_RecordType("<2302,2303,48>",(y)); Inst26++; } } catch(e) {}

// An object literal in value context.
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2370,2382,51>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (function () { return {x: 0}}().x) != "undefined") {_RecordType("<2386,2418,51>",(function () { return {x: 0}}().x)); Inst30++; } } catch(e) {}
assertEquals(0, function () { return {x: 0}}().x);

// An object literal in value/test context.
try { if (Inst31 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2466,2478,54>",(assertEquals)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (function () { return {x: 0} || this }().x) != "undefined") {_RecordType("<2482,2523,54>",(function () { return {x: 0} || this }().x)); Inst32++; } } catch(e) {}
assertEquals(0, function () { return {x: 0} || this }().x);

// An object literal in test/value context.
try { if (Inst33 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2571,2583,57>",(assertEquals)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (x) != "undefined") {_RecordType("<2584,2585,57>",(x)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (function () { return {x: 0} && this }().x) != "undefined") {_RecordType("<2587,2628,57>",(function () { return {x: 0} && this }().x)); Inst35++; } } catch(e) {}
assertEquals(x, function () { return {x: 0} && this }().x);

// An array literal in value/test context.
try { if (Inst36 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2675,2687,60>",(assertEquals)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (function () { return [0,1] || new Array(x,1) }()[0]) != "undefined") {_RecordType("<2691,2742,60>",(function () { return [0,1] || new Array(x,1) }()[0])); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2725,2730,60>",(Array)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (x) != "undefined") {_RecordType("<2731,2732,60>",(x)); Inst39++; } } catch(e) {}
assertEquals(0, function () { return [0,1] || new Array(x,1) }()[0]);

// An array literal in test/value context.
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2789,2801,63>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (x) != "undefined") {_RecordType("<2802,2803,63>",(x)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (function () { return [0,1] && new Array(x,1) }()[0]) != "undefined") {_RecordType("<2805,2856,63>",(function () { return [0,1] && new Array(x,1) }()[0])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2839,2844,63>",(Array)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (x) != "undefined") {_RecordType("<2845,2846,63>",(x)); Inst44++; } } catch(e) {}
assertEquals(x, function () { return [0,1] && new Array(x,1) }()[0]);

// Slot assignment in value/test context.
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2902,2914,66>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (x) != "undefined") {_RecordType("<2915,2916,66>",(x)); Inst46++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (x) != "undefined") {_RecordType("<2951,2952,66>",(x)); Inst49++; } } catch(e) {}
assertEquals(x, function (y) { return (y = 0) || x }("?"));
try { if (Inst47 <= 1000 && typeof (y) != "undefined") {_RecordType("<2928,2929,66>",(y)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (y) != "undefined") {_RecordType("<2941,2942,66>",(y)); Inst48++; } } catch(e) {}
try { if (Inst50 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2962,2974,67>",(assertEquals)); Inst50++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (x) != "undefined") {_RecordType("<3011,3012,67>",(x)); Inst53++; } } catch(e) {}
assertEquals(1, function (y) { return (y = 1) || x }("?"));
try { if (Inst51 <= 1000 && typeof (y) != "undefined") {_RecordType("<2988,2989,67>",(y)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (y) != "undefined") {_RecordType("<3001,3002,67>",(y)); Inst52++; } } catch(e) {}

// Slot assignment in test/value context.
try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3065,3077,70>",(assertEquals)); Inst54++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (x) != "undefined") {_RecordType("<3114,3115,70>",(x)); Inst57++; } } catch(e) {}
assertEquals(0, function (y) { return (y = 0) && x }("?"));
try { if (Inst55 <= 1000 && typeof (y) != "undefined") {_RecordType("<3091,3092,70>",(y)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (y) != "undefined") {_RecordType("<3104,3105,70>",(y)); Inst56++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3125,3137,71>",(assertEquals)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (x) != "undefined") {_RecordType("<3138,3139,71>",(x)); Inst59++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (x) != "undefined") {_RecordType("<3174,3175,71>",(x)); Inst62++; } } catch(e) {}
assertEquals(x, function (y) { return (y = 1) && x }("?"));
try { if (Inst60 <= 1000 && typeof (y) != "undefined") {_RecordType("<3151,3152,71>",(y)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (y) != "undefined") {_RecordType("<3164,3165,71>",(y)); Inst61++; } } catch(e) {}

// void in value context.
try { if (Inst63 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3212,3224,74>",(assertEquals)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (x) != "undefined") {_RecordType("<3259,3260,74>",(x)); Inst64++; } } catch(e) {}
assertEquals(void 0, function () { return void x }());

// void in value/test context.
try { if (Inst65 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3299,3311,77>",(assertEquals)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (x) != "undefined") {_RecordType("<3312,3313,77>",(x)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (x) != "undefined") {_RecordType("<3342,3343,77>",(x)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (x) != "undefined") {_RecordType("<3348,3349,77>",(x)); Inst68++; } } catch(e) {}
assertEquals(x, function () { return (void x) || x }());

// void in test/value context.
try { if (Inst69 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3388,3400,80>",(assertEquals)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (x) != "undefined") {_RecordType("<3436,3437,80>",(x)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (x) != "undefined") {_RecordType("<3442,3443,80>",(x)); Inst71++; } } catch(e) {}
assertEquals(void 0, function () { return (void x) && x }());

// Unary not in value context.
try { if (Inst72 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3482,3494,83>",(assertEquals)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (x) != "undefined") {_RecordType("<3524,3525,83>",(x)); Inst73++; } } catch(e) {}
assertEquals(false, function () { return !x }());

// Unary not in value/test context.
try { if (Inst74 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3569,3581,86>",(assertEquals)); Inst74++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (y) != "undefined") {_RecordType("<3611,3612,86>",(y)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (x) != "undefined") {_RecordType("<3616,3617,86>",(x)); Inst77++; } } catch(e) {}
assertEquals(true, function (y) { return !y || x }(0));
try { if (Inst75 <= 1000 && typeof (y) != "undefined") {_RecordType("<3598,3599,86>",(y)); Inst75++; } } catch(e) {}
try { if (Inst78 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3625,3637,87>",(assertEquals)); Inst78++; } } catch(e) {}try { if (Inst79 <= 1000 && typeof (x) != "undefined") {_RecordType("<3638,3639,87>",(x)); Inst79++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (y) != "undefined") {_RecordType("<3664,3665,87>",(y)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (x) != "undefined") {_RecordType("<3669,3670,87>",(x)); Inst82++; } } catch(e) {}
assertEquals(x, function (y) { return !y || x }(1));
try { if (Inst80 <= 1000 && typeof (y) != "undefined") {_RecordType("<3651,3652,87>",(y)); Inst80++; } } catch(e) {}

// Unary not in test/value context.
try { if (Inst83 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3715,3727,90>",(assertEquals)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (x) != "undefined") {_RecordType("<3728,3729,90>",(x)); Inst84++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (y) != "undefined") {_RecordType("<3754,3755,90>",(y)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (x) != "undefined") {_RecordType("<3759,3760,90>",(x)); Inst87++; } } catch(e) {}
assertEquals(x, function (y) { return !y && x }(0));
try { if (Inst85 <= 1000 && typeof (y) != "undefined") {_RecordType("<3741,3742,90>",(y)); Inst85++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3768,3780,91>",(assertEquals)); Inst88++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (y) != "undefined") {_RecordType("<3811,3812,91>",(y)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (x) != "undefined") {_RecordType("<3816,3817,91>",(x)); Inst91++; } } catch(e) {}
assertEquals(false, function (y) { return !y && x }(1));
try { if (Inst89 <= 1000 && typeof (y) != "undefined") {_RecordType("<3798,3799,91>",(y)); Inst89++; } } catch(e) {}

// Comparison in value context.
try { if (Inst92 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3858,3870,94>",(assertEquals)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (x) != "undefined") {_RecordType("<3899,3900,94>",(x)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (x) != "undefined") {_RecordType("<3903,3904,94>",(x)); Inst94++; } } catch(e) {}
assertEquals(false, function () { return x < x; }());

// Comparison in value/test context.
try { if (Inst95 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3950,3962,97>",(assertEquals)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (x) != "undefined") {_RecordType("<3963,3964,97>",(x)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (x) != "undefined") {_RecordType("<3987,3988,97>",(x)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (x) != "undefined") {_RecordType("<3991,3992,97>",(x)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (x) != "undefined") {_RecordType("<3996,3997,97>",(x)); Inst99++; } } catch(e) {}
assertEquals(x, function () { return x < x || x; }());
try { if (Inst100 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4005,4017,98>",(assertEquals)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (x) != "undefined") {_RecordType("<4045,4046,98>",(x)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (x) != "undefined") {_RecordType("<4050,4051,98>",(x)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (x) != "undefined") {_RecordType("<4055,4056,98>",(x)); Inst103++; } } catch(e) {}
assertEquals(true, function () { return x <= x || x; }());

// Comparison in test/value context.
try { if (Inst104 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4102,4114,101>",(assertEquals)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (x) != "undefined") {_RecordType("<4143,4144,101>",(x)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (x) != "undefined") {_RecordType("<4147,4148,101>",(x)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (x) != "undefined") {_RecordType("<4152,4153,101>",(x)); Inst107++; } } catch(e) {}
assertEquals(false, function () { return x < x && x; }());
try { if (Inst108 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4161,4173,102>",(assertEquals)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (x) != "undefined") {_RecordType("<4174,4175,102>",(x)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (x) != "undefined") {_RecordType("<4198,4199,102>",(x)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (x) != "undefined") {_RecordType("<4203,4204,102>",(x)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (x) != "undefined") {_RecordType("<4208,4209,102>",(x)); Inst112++; } } catch(e) {}
assertEquals(x, function () { return x <= x && x; }());

