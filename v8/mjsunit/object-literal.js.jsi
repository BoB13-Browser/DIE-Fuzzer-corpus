var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2009 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Flags: --harmony-function-name

var obj = {
    a: 7,
    b: { x: 12, y: 24 },
    c: 'Zebra'
}
try { if (Inst0 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1639,1642,30>",(obj)); Inst0++; } } catch(e) {}

try { if (Inst1 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1700,1712,36>",(assertEquals)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (obj.a) != "undefined") {_RecordType("<1716,1721,36>",(obj.a)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1716,1719,36>",(obj)); Inst3++; } } catch(e) {}
assertEquals(7, obj.a);
try { if (Inst4 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1724,1736,37>",(assertEquals)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (obj.b.x) != "undefined") {_RecordType("<1741,1748,37>",(obj.b.x)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (obj.b) != "undefined") {_RecordType("<1741,1746,37>",(obj.b)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1741,1744,37>",(obj)); Inst7++; } } catch(e) {}
assertEquals(12, obj.b.x);
try { if (Inst8 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1751,1763,38>",(assertEquals)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (obj.b.y) != "undefined") {_RecordType("<1768,1775,38>",(obj.b.y)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (obj.b) != "undefined") {_RecordType("<1768,1773,38>",(obj.b)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1768,1771,38>",(obj)); Inst11++; } } catch(e) {}
assertEquals(24, obj.b.y);
try { if (Inst12 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1778,1790,39>",(assertEquals)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (obj.c) != "undefined") {_RecordType("<1800,1805,39>",(obj.c)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (obj) != "undefined") {_RecordType("<1800,1803,39>",(obj)); Inst14++; } } catch(e) {}
assertEquals('Zebra', obj.c);

var z = 24;
try { if (Inst15 <= 1000 && typeof (z) != "undefined") {_RecordType("<1813,1814,41>",(z)); Inst15++; } } catch(e) {}

try { if (Inst17 <= 1000 && typeof (z) != "undefined") {_RecordType("<1864,1865,45>",(z)); Inst17++; } } catch(e) {}
var obj2 = {
    a: 7,
    b: { x: 12, y: z },
    c: 'Zebra'
}
try { if (Inst16 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1826,1830,43>",(obj2)); Inst16++; } } catch(e) {}

try { if (Inst18 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1887,1899,49>",(assertEquals)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (obj2.a) != "undefined") {_RecordType("<1903,1909,49>",(obj2.a)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1903,1907,49>",(obj2)); Inst20++; } } catch(e) {}
assertEquals(7, obj2.a);
try { if (Inst21 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1912,1924,50>",(assertEquals)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (obj2.b.x) != "undefined") {_RecordType("<1929,1937,50>",(obj2.b.x)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (obj2.b) != "undefined") {_RecordType("<1929,1935,50>",(obj2.b)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1929,1933,50>",(obj2)); Inst24++; } } catch(e) {}
assertEquals(12, obj2.b.x);
try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1940,1952,51>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (obj2.b.y) != "undefined") {_RecordType("<1957,1965,51>",(obj2.b.y)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (obj2.b) != "undefined") {_RecordType("<1957,1963,51>",(obj2.b)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1957,1961,51>",(obj2)); Inst28++; } } catch(e) {}
assertEquals(24, obj2.b.y);
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1968,1980,52>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (obj2.c) != "undefined") {_RecordType("<1990,1996,52>",(obj2.c)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (obj2) != "undefined") {_RecordType("<1990,1994,52>",(obj2)); Inst31++; } } catch(e) {}
assertEquals('Zebra', obj2.c);

var arr = [];
try { if (Inst32 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2004,2007,54>",(arr)); Inst32++; } } catch(e) {}
for (var i = 0; i < 2; i++) {
try { if (Inst33 <= 1000 && typeof (i) != "undefined") {_RecordType("<2023,2024,55>",(i)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (i) != "undefined") {_RecordType("<2030,2031,55>",(i)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (i) != "undefined") {_RecordType("<2037,2038,55>",(i)); Inst35++; } } catch(e) {}
  arr[i] = {
      a: 7,
      b: { x: 12, y: 24 },
      c: 'Zebra'
  }
try { if (Inst36 <= 1000 && typeof (arr[i]) != "undefined") {_RecordType("<2046,2052,56>",(arr[i])); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2046,2049,56>",(arr)); Inst37++; } } catch(e) {}
}

arr[0].b.x = 2;
try { if (Inst38 <= 1000 && typeof (arr[0].b.x) != "undefined") {_RecordType("<2120,2130,63>",(arr[0].b.x)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (arr[0].b) != "undefined") {_RecordType("<2120,2128,63>",(arr[0].b)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<2120,2126,63>",(arr[0])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2120,2123,63>",(arr)); Inst41++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2136,2148,64>",(assertEquals)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (arr[0].b.x) != "undefined") {_RecordType("<2152,2162,64>",(arr[0].b.x)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (arr[0].b) != "undefined") {_RecordType("<2152,2160,64>",(arr[0].b)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (arr[0]) != "undefined") {_RecordType("<2152,2158,64>",(arr[0])); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2152,2155,64>",(arr)); Inst46++; } } catch(e) {}
assertEquals(2, arr[0].b.x);
try { if (Inst47 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2165,2177,65>",(assertEquals)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (arr[1].b.x) != "undefined") {_RecordType("<2182,2192,65>",(arr[1].b.x)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (arr[1].b) != "undefined") {_RecordType("<2182,2190,65>",(arr[1].b)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (arr[1]) != "undefined") {_RecordType("<2182,2188,65>",(arr[1])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (arr) != "undefined") {_RecordType("<2182,2185,65>",(arr)); Inst51++; } } catch(e) {}
assertEquals(12, arr[1].b.x);


try { if (Inst52 <= 1000 && typeof (makeSparseArray) != "undefined") {_RecordType("<2206,2221,68>",(makeSparseArray)); Inst52++; } } catch(e) {}
function makeSparseArray() {
  return {
    '0': { x: 12, y: 24 },
    '1000000': { x: 0, y: 0 }
  };
}

try { if (Inst54 <= 1000 && typeof (makeSparseArray) != "undefined") {_RecordType("<2312,2327,75>",(makeSparseArray)); Inst54++; } } catch(e) {}
var sa1 = makeSparseArray();
try { if (Inst53 <= 1000 && typeof (sa1) != "undefined") {_RecordType("<2306,2309,75>",(sa1)); Inst53++; } } catch(e) {}
sa1[0].x = 0;
try { if (Inst55 <= 1000 && typeof (sa1[0].x) != "undefined") {_RecordType("<2331,2339,76>",(sa1[0].x)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (sa1[0]) != "undefined") {_RecordType("<2331,2337,76>",(sa1[0])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (sa1) != "undefined") {_RecordType("<2331,2334,76>",(sa1)); Inst57++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (makeSparseArray) != "undefined") {_RecordType("<2355,2370,77>",(makeSparseArray)); Inst59++; } } catch(e) {}
var sa2 = makeSparseArray();
try { if (Inst58 <= 1000 && typeof (sa2) != "undefined") {_RecordType("<2349,2352,77>",(sa2)); Inst58++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2374,2386,78>",(assertEquals)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (sa2[0].x) != "undefined") {_RecordType("<2391,2399,78>",(sa2[0].x)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (sa2[0]) != "undefined") {_RecordType("<2391,2397,78>",(sa2[0])); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (sa2) != "undefined") {_RecordType("<2391,2394,78>",(sa2)); Inst63++; } } catch(e) {}
assertEquals(12, sa2[0].x);

// Test that non-constant literals work.
try { if (Inst65 <= 1000 && typeof (Object) != "undefined") {_RecordType("<2456,2462,81>",(Object)); Inst65++; } } catch(e) {}
var n = new Object();
try { if (Inst64 <= 1000 && typeof (n) != "undefined") {_RecordType("<2448,2449,81>",(n)); Inst64++; } } catch(e) {}

try { if (Inst66 <= 1000 && typeof (makeNonConstantArray) != "undefined") {_RecordType("<2476,2496,83>",(makeNonConstantArray)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (n) != "undefined") {_RecordType("<2512,2513,83>",(n)); Inst67++; } } catch(e) {}
function makeNonConstantArray() { return [ [ n ] ]; }

try { if (Inst69 <= 1000 && typeof (makeNonConstantArray) != "undefined") {_RecordType("<2530,2550,85>",(makeNonConstantArray)); Inst69++; } } catch(e) {}
var a = makeNonConstantArray();
try { if (Inst68 <= 1000 && typeof (a) != "undefined") {_RecordType("<2526,2527,85>",(a)); Inst68++; } } catch(e) {}
a[0][0].foo = "bar";
try { if (Inst70 <= 1000 && typeof (a[0][0].foo) != "undefined") {_RecordType("<2554,2565,86>",(a[0][0].foo)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (a[0][0]) != "undefined") {_RecordType("<2554,2561,86>",(a[0][0])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2554,2558,86>",(a[0])); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (a) != "undefined") {_RecordType("<2554,2555,86>",(a)); Inst73++; } } catch(e) {}
try { if (Inst74 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2575,2587,87>",(assertEquals)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (n.foo) != "undefined") {_RecordType("<2595,2600,87>",(n.foo)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (n) != "undefined") {_RecordType("<2595,2596,87>",(n)); Inst76++; } } catch(e) {}
assertEquals("bar", n.foo);

try { if (Inst77 <= 1000 && typeof (makeNonConstantObject) != "undefined") {_RecordType("<2613,2634,89>",(makeNonConstantObject)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (n) != "undefined") {_RecordType("<2656,2657,89>",(n)); Inst78++; } } catch(e) {}
function makeNonConstantObject() { return { a: { b: n } }; }

try { if (Inst80 <= 1000 && typeof (makeNonConstantObject) != "undefined") {_RecordType("<2670,2691,91>",(makeNonConstantObject)); Inst80++; } } catch(e) {}
a = makeNonConstantObject();
try { if (Inst79 <= 1000 && typeof (a) != "undefined") {_RecordType("<2666,2667,91>",(a)); Inst79++; } } catch(e) {}
a.a.b.bar = "foo";
try { if (Inst81 <= 1000 && typeof (a.a.b.bar) != "undefined") {_RecordType("<2695,2704,92>",(a.a.b.bar)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (a.a.b) != "undefined") {_RecordType("<2695,2700,92>",(a.a.b)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (a.a) != "undefined") {_RecordType("<2695,2698,92>",(a.a)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (a) != "undefined") {_RecordType("<2695,2696,92>",(a)); Inst84++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2714,2726,93>",(assertEquals)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (n.bar) != "undefined") {_RecordType("<2734,2739,93>",(n.bar)); Inst86++; } } catch(e) {}try { if (Inst87 <= 1000 && typeof (n) != "undefined") {_RecordType("<2734,2735,93>",(n)); Inst87++; } } catch(e) {}
assertEquals("foo", n.bar);

// Test that exceptions for regexps still hold.
try { if (Inst88 <= 1000 && typeof (makeRegexpInArray) != "undefined") {_RecordType("<2800,2817,96>",(makeRegexpInArray)); Inst88++; } } catch(e) {}
function makeRegexpInArray() { return [ [ /a*/, {} ] ]; }

try { if (Inst90 <= 1000 && typeof (makeRegexpInArray) != "undefined") {_RecordType("<2854,2871,98>",(makeRegexpInArray)); Inst90++; } } catch(e) {}
a = makeRegexpInArray();
try { if (Inst89 <= 1000 && typeof (a) != "undefined") {_RecordType("<2850,2851,98>",(a)); Inst89++; } } catch(e) {}
try { if (Inst92 <= 1000 && typeof (makeRegexpInArray) != "undefined") {_RecordType("<2883,2900,99>",(makeRegexpInArray)); Inst92++; } } catch(e) {}
var b = makeRegexpInArray();
try { if (Inst91 <= 1000 && typeof (b) != "undefined") {_RecordType("<2879,2880,99>",(b)); Inst91++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2904,2915,100>",(assertFalse)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (a[0][0]) != "undefined") {_RecordType("<2916,2923,100>",(a[0][0])); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2916,2920,100>",(a[0])); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (a) != "undefined") {_RecordType("<2916,2917,100>",(a)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (b[0][0]) != "undefined") {_RecordType("<2928,2935,100>",(b[0][0])); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<2928,2932,100>",(b[0])); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (b) != "undefined") {_RecordType("<2928,2929,100>",(b)); Inst99++; } } catch(e) {}
assertFalse(a[0][0] === b[0][0]);
try { if (Inst100 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2938,2949,101>",(assertFalse)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (a[0][1]) != "undefined") {_RecordType("<2950,2957,101>",(a[0][1])); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2950,2954,101>",(a[0])); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (a) != "undefined") {_RecordType("<2950,2951,101>",(a)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (b[0][1]) != "undefined") {_RecordType("<2962,2969,101>",(b[0][1])); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (b[0]) != "undefined") {_RecordType("<2962,2966,101>",(b[0])); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (b) != "undefined") {_RecordType("<2962,2963,101>",(b)); Inst106++; } } catch(e) {}
assertFalse(a[0][1] === b[0][1]);

try { if (Inst107 <= 1000 && typeof (makeRegexpInObject) != "undefined") {_RecordType("<2982,3000,103>",(makeRegexpInObject)); Inst107++; } } catch(e) {}
function makeRegexpInObject() { return { a: { b: /b*/, c: {} } }; }
try { if (Inst109 <= 1000 && typeof (makeRegexpInObject) != "undefined") {_RecordType("<3045,3063,104>",(makeRegexpInObject)); Inst109++; } } catch(e) {}
a = makeRegexpInObject();
try { if (Inst108 <= 1000 && typeof (a) != "undefined") {_RecordType("<3041,3042,104>",(a)); Inst108++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (makeRegexpInObject) != "undefined") {_RecordType("<3071,3089,105>",(makeRegexpInObject)); Inst111++; } } catch(e) {}
b = makeRegexpInObject();
try { if (Inst110 <= 1000 && typeof (b) != "undefined") {_RecordType("<3067,3068,105>",(b)); Inst110++; } } catch(e) {}
try { if (Inst112 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3093,3104,106>",(assertFalse)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (a.a.b) != "undefined") {_RecordType("<3105,3110,106>",(a.a.b)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (a.a) != "undefined") {_RecordType("<3105,3108,106>",(a.a)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (a) != "undefined") {_RecordType("<3105,3106,106>",(a)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (b.a.b) != "undefined") {_RecordType("<3115,3120,106>",(b.a.b)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (b.a) != "undefined") {_RecordType("<3115,3118,106>",(b.a)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (b) != "undefined") {_RecordType("<3115,3116,106>",(b)); Inst118++; } } catch(e) {}
assertFalse(a.a.b === b.a.b);
try { if (Inst119 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3123,3134,107>",(assertFalse)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (a.a.c) != "undefined") {_RecordType("<3135,3140,107>",(a.a.c)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (a.a) != "undefined") {_RecordType("<3135,3138,107>",(a.a)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (a) != "undefined") {_RecordType("<3135,3136,107>",(a)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (b.a.c) != "undefined") {_RecordType("<3145,3150,107>",(b.a.c)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (b.a) != "undefined") {_RecordType("<3145,3148,107>",(b.a)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (b) != "undefined") {_RecordType("<3145,3146,107>",(b)); Inst125++; } } catch(e) {}
assertFalse(a.a.c === b.a.c);


// Test keywords are valid as property names in initializers and dot-access.
var keywords = [
  "break",
  "case",
  "catch",
  "const",
  "continue",
  "debugger",
  "default",
  "delete",
  "do",
  "else",
  "false",
  "finally",
  "for",
  "function",
  "if",
  "in",
  "instanceof",
  "new",
  "null",
  "return",
  "switch",
  "this",
  "throw",
  "true",
  "try",
  "typeof",
  "var",
  "void",
  "while",
  "with"
];
try { if (Inst126 <= 1000 && typeof (keywords) != "undefined") {_RecordType("<3236,3244,111>",(keywords)); Inst126++; } } catch(e) {}

try { if (Inst127 <= 1000 && typeof (testKeywordProperty) != "undefined") {_RecordType("<3589,3608,144>",(testKeywordProperty)); Inst127++; } } catch(e) {}
function testKeywordProperty(keyword) {
try { if (Inst128 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<3609,3616,144>",(keyword)); Inst128++; } } catch(e) {}
  var exception = false;
try { if (Inst129 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3626,3635,145>",(exception)); Inst129++; } } catch(e) {}
try { if (Inst132 <= 1000 && typeof (e) != "undefined") {_RecordType("<3754,3755,149>",(e)); Inst132++; } } catch(e) {}
  try {
    // Sanity check that what we get is a keyword.
try { if (Inst130 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3708,3712,148>",(eval)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<3722,3729,148>",(keyword)); Inst131++; } } catch(e) {}
    eval("var " + keyword + " = 42;");
  } catch (e) {
    exception = true;
try { if (Inst133 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3763,3772,150>",(exception)); Inst133++; } } catch(e) {}
  }
try { if (Inst134 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3787,3797,152>",(assertTrue)); Inst134++; } } catch(e) {}try { if (Inst135 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3798,3807,152>",(exception)); Inst135++; } } catch(e) {}
  assertTrue(exception);

  // Simple property, read and write.
try { if (Inst137 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3859,3863,155>",(eval)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<3871,3878,155>",(keyword)); Inst138++; } } catch(e) {}
  var x = eval("({" + keyword + ": 42})");
try { if (Inst136 <= 1000 && typeof (x) != "undefined") {_RecordType("<3855,3856,155>",(x)); Inst136++; } } catch(e) {}
try { if (Inst139 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3894,3906,156>",(assertEquals)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (x[keyword]) != "undefined") {_RecordType("<3911,3921,156>",(x[keyword])); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (x) != "undefined") {_RecordType("<3911,3912,156>",(x)); Inst141++; } } catch(e) {}
  assertEquals(42, x[keyword]);
try { if (Inst142 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3926,3938,157>",(assertEquals)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3943,3947,157>",(eval)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<3955,3962,157>",(keyword)); Inst144++; } } catch(e) {}
  assertEquals(42, eval("x." + keyword));
try { if (Inst145 <= 1000 && typeof (eval) != "undefined") {_RecordType("<3968,3972,158>",(eval)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<3980,3987,158>",(keyword)); Inst146++; } } catch(e) {}
  eval("x." + keyword + " = 37");
try { if (Inst147 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4002,4014,159>",(assertEquals)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (x[keyword]) != "undefined") {_RecordType("<4019,4029,159>",(x[keyword])); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (x) != "undefined") {_RecordType("<4019,4020,159>",(x)); Inst149++; } } catch(e) {}
  assertEquals(37, x[keyword]);
try { if (Inst150 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4034,4046,160>",(assertEquals)); Inst150++; } } catch(e) {}try { if (Inst151 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4051,4055,160>",(eval)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4063,4070,160>",(keyword)); Inst152++; } } catch(e) {}
  assertEquals(37, eval("x." + keyword));

  // Getter/setter property, read and write.
try { if (Inst154 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4130,4134,163>",(eval)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4158,4165,163>",(keyword)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4220,4227,164>",(keyword)); Inst156++; } } catch(e) {}
  var y = eval("({value : 42, get " + keyword + "(){return this.value}," +
               " set " + keyword + "(v) { this.value = v; }})");
try { if (Inst153 <= 1000 && typeof (y) != "undefined") {_RecordType("<4126,4127,163>",(y)); Inst153++; } } catch(e) {}
try { if (Inst157 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4262,4274,165>",(assertEquals)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (y[keyword]) != "undefined") {_RecordType("<4279,4289,165>",(y[keyword])); Inst158++; } } catch(e) {}try { if (Inst159 <= 1000 && typeof (y) != "undefined") {_RecordType("<4279,4280,165>",(y)); Inst159++; } } catch(e) {}
  assertEquals(42, y[keyword]);
try { if (Inst160 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4294,4306,166>",(assertEquals)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4311,4315,166>",(eval)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4323,4330,166>",(keyword)); Inst162++; } } catch(e) {}
  assertEquals(42, eval("y." + keyword));
try { if (Inst163 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4336,4340,167>",(eval)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4348,4355,167>",(keyword)); Inst164++; } } catch(e) {}
  eval("y." + keyword + " = 37");
try { if (Inst165 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4370,4382,168>",(assertEquals)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (y[keyword]) != "undefined") {_RecordType("<4387,4397,168>",(y[keyword])); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (y) != "undefined") {_RecordType("<4387,4388,168>",(y)); Inst167++; } } catch(e) {}
  assertEquals(37, y[keyword]);
try { if (Inst168 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4402,4414,169>",(assertEquals)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4419,4423,169>",(eval)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4431,4438,169>",(keyword)); Inst170++; } } catch(e) {}
  assertEquals(37, eval("y." + keyword));

  // Quoted keyword works is read back by unquoted as well.
try { if (Inst172 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4513,4517,172>",(eval)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4527,4534,172>",(keyword)); Inst173++; } } catch(e) {}
  var z = eval("({\"" + keyword + "\": 42})");
try { if (Inst171 <= 1000 && typeof (z) != "undefined") {_RecordType("<4509,4510,172>",(z)); Inst171++; } } catch(e) {}
try { if (Inst174 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4552,4564,173>",(assertEquals)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (z[keyword]) != "undefined") {_RecordType("<4569,4579,173>",(z[keyword])); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (z) != "undefined") {_RecordType("<4569,4570,173>",(z)); Inst176++; } } catch(e) {}
  assertEquals(42, z[keyword]);
try { if (Inst177 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4584,4596,174>",(assertEquals)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4601,4605,174>",(eval)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4613,4620,174>",(keyword)); Inst179++; } } catch(e) {}
  assertEquals(42, eval("z." + keyword));

  // Function property, called.
  var was_called;
try { if (Inst180 <= 1000 && typeof (was_called) != "undefined") {_RecordType("<4663,4673,177>",(was_called)); Inst180++; } } catch(e) {}
try { if (Inst181 <= 1000 && typeof (test_call) != "undefined") {_RecordType("<4686,4695,178>",(test_call)); Inst181++; } } catch(e) {}
  function test_call() { this.was_called = true; was_called = true; }
try { if (Inst182 <= 1000 && typeof (this.was_called) != "undefined") {_RecordType("<4700,4715,178>",(this.was_called)); Inst182++; } } catch(e) {}try { if (Inst183 <= 1000 && typeof (was_called) != "undefined") {_RecordType("<4724,4734,178>",(was_called)); Inst183++; } } catch(e) {}
try { if (Inst185 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4755,4759,179>",(eval)); Inst185++; } } catch(e) {}try { if (Inst186 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4767,4774,179>",(keyword)); Inst186++; } } catch(e) {}
  var w = eval("({" + keyword + ": test_call, was_called: false})");
try { if (Inst184 <= 1000 && typeof (w) != "undefined") {_RecordType("<4751,4752,179>",(w)); Inst184++; } } catch(e) {}
try { if (Inst187 <= 1000 && typeof (eval) != "undefined") {_RecordType("<4816,4820,180>",(eval)); Inst187++; } } catch(e) {}try { if (Inst188 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<4828,4835,180>",(keyword)); Inst188++; } } catch(e) {}
  eval("w." + keyword + "();");
try { if (Inst189 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4848,4858,181>",(assertTrue)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (was_called) != "undefined") {_RecordType("<4859,4869,181>",(was_called)); Inst190++; } } catch(e) {}
  assertTrue(was_called);
try { if (Inst191 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4874,4884,182>",(assertTrue)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (w.was_called) != "undefined") {_RecordType("<4885,4897,182>",(w.was_called)); Inst192++; } } catch(e) {}try { if (Inst193 <= 1000 && typeof (w) != "undefined") {_RecordType("<4885,4886,182>",(w)); Inst193++; } } catch(e) {}
  assertTrue(w.was_called);

  // Function property, constructed.
try { if (Inst194 <= 1000 && typeof (construct) != "undefined") {_RecordType("<4949,4958,185>",(construct)); Inst194++; } } catch(e) {}
  function construct() { this.constructed = true; }
try { if (Inst195 <= 1000 && typeof (this.constructed) != "undefined") {_RecordType("<4963,4979,185>",(this.constructed)); Inst195++; } } catch(e) {}
try { if (Inst197 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5000,5004,186>",(eval)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<5012,5019,186>",(keyword)); Inst198++; } } catch(e) {}
  var v = eval("({" + keyword + ": construct})");
try { if (Inst196 <= 1000 && typeof (v) != "undefined") {_RecordType("<4996,4997,186>",(v)); Inst196++; } } catch(e) {}
try { if (Inst200 <= 1000 && typeof (eval) != "undefined") {_RecordType("<5051,5055,187>",(eval)); Inst200++; } } catch(e) {}try { if (Inst201 <= 1000 && typeof (keyword) != "undefined") {_RecordType("<5067,5074,187>",(keyword)); Inst201++; } } catch(e) {}
  var vo = eval("new v." + keyword + "()");
try { if (Inst199 <= 1000 && typeof (vo) != "undefined") {_RecordType("<5046,5048,187>",(vo)); Inst199++; } } catch(e) {}
try { if (Inst202 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5086,5096,188>",(assertTrue)); Inst202++; } } catch(e) {}try { if (Inst203 <= 1000 && typeof (vo) != "undefined") {_RecordType("<5097,5099,188>",(vo)); Inst203++; } } catch(e) {}try { if (Inst204 <= 1000 && typeof (construct) != "undefined") {_RecordType("<5111,5120,188>",(construct)); Inst204++; } } catch(e) {}
  assertTrue(vo instanceof construct);
try { if (Inst205 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<5125,5135,189>",(assertTrue)); Inst205++; } } catch(e) {}try { if (Inst206 <= 1000 && typeof (vo.constructed) != "undefined") {_RecordType("<5136,5150,189>",(vo.constructed)); Inst206++; } } catch(e) {}try { if (Inst207 <= 1000 && typeof (vo) != "undefined") {_RecordType("<5136,5138,189>",(vo)); Inst207++; } } catch(e) {}
  assertTrue(vo.constructed);
}

for (var i = 0; i < keywords.length; i++) {
try { if (Inst208 <= 1000 && typeof (i) != "undefined") {_RecordType("<5165,5166,192>",(i)); Inst208++; } } catch(e) {}try { if (Inst209 <= 1000 && typeof (i) != "undefined") {_RecordType("<5172,5173,192>",(i)); Inst209++; } } catch(e) {}try { if (Inst210 <= 1000 && typeof (keywords.length) != "undefined") {_RecordType("<5176,5191,192>",(keywords.length)); Inst210++; } } catch(e) {}try { if (Inst211 <= 1000 && typeof (keywords) != "undefined") {_RecordType("<5176,5184,192>",(keywords)); Inst211++; } } catch(e) {}try { if (Inst212 <= 1000 && typeof (i) != "undefined") {_RecordType("<5193,5194,192>",(i)); Inst212++; } } catch(e) {}
try { if (Inst213 <= 1000 && typeof (testKeywordProperty) != "undefined") {_RecordType("<5202,5221,193>",(testKeywordProperty)); Inst213++; } } catch(e) {}try { if (Inst214 <= 1000 && typeof (keywords[i]) != "undefined") {_RecordType("<5222,5233,193>",(keywords[i])); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (keywords) != "undefined") {_RecordType("<5222,5230,193>",(keywords)); Inst215++; } } catch(e) {}
  testKeywordProperty(keywords[i]);
}


try { if (Inst216 <= 1000 && typeof (TestNumericNames) != "undefined") {_RecordType("<5250,5266,197>",(TestNumericNames)); Inst216++; } } catch(e) {}
(function TestNumericNames() {
  var o = {
    1: 1,
    2.: 2,
    3.0: 3,
    4e0: 4,
    5E0: 5,
    6e-0: 6,
    7E-0: 7,
    0x8: 8,
    0X9: 9,
  }
try { if (Inst217 <= 1000 && typeof (o) != "undefined") {_RecordType("<5277,5278,198>",(o)); Inst217++; } } catch(e) {}
try { if (Inst218 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5396,5408,209>",(assertEquals)); Inst218++; } } catch(e) {}try { if (Inst219 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<5456,5467,209>",(Object.keys)); Inst219++; } } catch(e) {}try { if (Inst220 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5456,5462,209>",(Object)); Inst220++; } } catch(e) {}try { if (Inst221 <= 1000 && typeof (o) != "undefined") {_RecordType("<5468,5469,209>",(o)); Inst221++; } } catch(e) {}
  assertEquals(['1', '2', '3', '4', '5', '6', '7', '8', '9'], Object.keys(o));

  o = {
    1.2: 1.2,
    1.30: 1.3
  };
try { if (Inst222 <= 1000 && typeof (o) != "undefined") {_RecordType("<5476,5477,211>",(o)); Inst222++; } } catch(e) {}
try { if (Inst223 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5517,5529,215>",(assertEquals)); Inst223++; } } catch(e) {}try { if (Inst224 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<5546,5557,215>",(Object.keys)); Inst224++; } } catch(e) {}try { if (Inst225 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5546,5552,215>",(Object)); Inst225++; } } catch(e) {}try { if (Inst226 <= 1000 && typeof (o) != "undefined") {_RecordType("<5558,5559,215>",(o)); Inst226++; } } catch(e) {}
  assertEquals(['1.2', '1.3'], Object.keys(o));
})();


try { if (Inst227 <= 1000 && typeof (TestNumericNamesGetter) != "undefined") {_RecordType("<5580,5602,219>",(TestNumericNamesGetter)); Inst227++; } } catch(e) {}
function TestNumericNamesGetter(expectedKeys, object) {
try { if (Inst228 <= 1000 && typeof (expectedKeys) != "undefined") {_RecordType("<5603,5615,219>",(expectedKeys)); Inst228++; } } catch(e) {}try { if (Inst229 <= 1000 && typeof (object) != "undefined") {_RecordType("<5617,5623,219>",(object)); Inst229++; } } catch(e) {}
try { if (Inst230 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5629,5641,220>",(assertEquals)); Inst230++; } } catch(e) {}try { if (Inst231 <= 1000 && typeof (expectedKeys) != "undefined") {_RecordType("<5642,5654,220>",(expectedKeys)); Inst231++; } } catch(e) {}try { if (Inst232 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<5656,5667,220>",(Object.keys)); Inst232++; } } catch(e) {}try { if (Inst233 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5656,5662,220>",(Object)); Inst233++; } } catch(e) {}try { if (Inst234 <= 1000 && typeof (object) != "undefined") {_RecordType("<5668,5674,220>",(object)); Inst234++; } } catch(e) {}
  assertEquals(expectedKeys, Object.keys(object));
try { if (Inst235 <= 1000 && typeof (expectedKeys.forEach) != "undefined") {_RecordType("<5680,5700,221>",(expectedKeys.forEach)); Inst235++; } } catch(e) {}try { if (Inst236 <= 1000 && typeof (expectedKeys) != "undefined") {_RecordType("<5680,5692,221>",(expectedKeys)); Inst236++; } } catch(e) {}
  expectedKeys.forEach(function(key) {
try { if (Inst237 <= 1000 && typeof (key) != "undefined") {_RecordType("<5710,5713,221>",(key)); Inst237++; } } catch(e) {}
try { if (Inst239 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<5733,5764,222>",(Object.getOwnPropertyDescriptor)); Inst239++; } } catch(e) {}try { if (Inst240 <= 1000 && typeof (Object) != "undefined") {_RecordType("<5733,5739,222>",(Object)); Inst240++; } } catch(e) {}try { if (Inst241 <= 1000 && typeof (object) != "undefined") {_RecordType("<5765,5771,222>",(object)); Inst241++; } } catch(e) {}try { if (Inst242 <= 1000 && typeof (key) != "undefined") {_RecordType("<5773,5776,222>",(key)); Inst242++; } } catch(e) {}
    var descr = Object.getOwnPropertyDescriptor(object, key);
try { if (Inst238 <= 1000 && typeof (descr) != "undefined") {_RecordType("<5725,5730,222>",(descr)); Inst238++; } } catch(e) {}
try { if (Inst243 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<5783,5795,223>",(assertEquals)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (key) != "undefined") {_RecordType("<5805,5808,223>",(key)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (descr.get.name) != "undefined") {_RecordType("<5810,5824,223>",(descr.get.name)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (descr.get) != "undefined") {_RecordType("<5810,5819,223>",(descr.get)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (descr) != "undefined") {_RecordType("<5810,5815,223>",(descr)); Inst247++; } } catch(e) {}
    assertEquals('get ' + key, descr.get.name);
  });
}
try { if (Inst248 <= 1000 && typeof (TestNumericNamesGetter) != "undefined") {_RecordType("<5835,5857,226>",(TestNumericNamesGetter)); Inst248++; } } catch(e) {}
TestNumericNamesGetter(['1', '2', '3', '4', '5', '6', '7', '8', '9'], {
  get 1() {},
  get 2.() {},
  get 3.0() {},
  get 4e0() {},
  get 5E0() {},
  get 6e-0() {},
  get 7E-0() {},
  get 0x8() {},
  get 0X9() {},
});
try { if (Inst249 <= 1000 && typeof (TestNumericNamesGetter) != "undefined") {_RecordType("<6054,6076,237>",(TestNumericNamesGetter)); Inst249++; } } catch(e) {}
TestNumericNamesGetter(['1.2', '1.3'], {
  get 1.2() {},
  get 1.30() {}
});


try { if (Inst250 <= 1000 && typeof (TestNumericNamesSetter) != "undefined") {_RecordType("<6142,6164,243>",(TestNumericNamesSetter)); Inst250++; } } catch(e) {}
function TestNumericNamesSetter(expectedKeys, object) {
try { if (Inst251 <= 1000 && typeof (expectedKeys) != "undefined") {_RecordType("<6165,6177,243>",(expectedKeys)); Inst251++; } } catch(e) {}try { if (Inst252 <= 1000 && typeof (object) != "undefined") {_RecordType("<6179,6185,243>",(object)); Inst252++; } } catch(e) {}
try { if (Inst253 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6191,6203,244>",(assertEquals)); Inst253++; } } catch(e) {}try { if (Inst254 <= 1000 && typeof (expectedKeys) != "undefined") {_RecordType("<6204,6216,244>",(expectedKeys)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (Object.keys) != "undefined") {_RecordType("<6218,6229,244>",(Object.keys)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6218,6224,244>",(Object)); Inst256++; } } catch(e) {}try { if (Inst257 <= 1000 && typeof (object) != "undefined") {_RecordType("<6230,6236,244>",(object)); Inst257++; } } catch(e) {}
  assertEquals(expectedKeys, Object.keys(object));
try { if (Inst258 <= 1000 && typeof (expectedKeys.forEach) != "undefined") {_RecordType("<6242,6262,245>",(expectedKeys.forEach)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (expectedKeys) != "undefined") {_RecordType("<6242,6254,245>",(expectedKeys)); Inst259++; } } catch(e) {}
  expectedKeys.forEach(function(key) {
try { if (Inst260 <= 1000 && typeof (key) != "undefined") {_RecordType("<6272,6275,245>",(key)); Inst260++; } } catch(e) {}
try { if (Inst262 <= 1000 && typeof (Object.getOwnPropertyDescriptor) != "undefined") {_RecordType("<6295,6326,246>",(Object.getOwnPropertyDescriptor)); Inst262++; } } catch(e) {}try { if (Inst263 <= 1000 && typeof (Object) != "undefined") {_RecordType("<6295,6301,246>",(Object)); Inst263++; } } catch(e) {}try { if (Inst264 <= 1000 && typeof (object) != "undefined") {_RecordType("<6327,6333,246>",(object)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (key) != "undefined") {_RecordType("<6335,6338,246>",(key)); Inst265++; } } catch(e) {}
    var descr = Object.getOwnPropertyDescriptor(object, key);
try { if (Inst261 <= 1000 && typeof (descr) != "undefined") {_RecordType("<6287,6292,246>",(descr)); Inst261++; } } catch(e) {}
try { if (Inst266 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<6345,6357,247>",(assertEquals)); Inst266++; } } catch(e) {}try { if (Inst267 <= 1000 && typeof (key) != "undefined") {_RecordType("<6367,6370,247>",(key)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (descr.set.name) != "undefined") {_RecordType("<6372,6386,247>",(descr.set.name)); Inst268++; } } catch(e) {}try { if (Inst269 <= 1000 && typeof (descr.set) != "undefined") {_RecordType("<6372,6381,247>",(descr.set)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (descr) != "undefined") {_RecordType("<6372,6377,247>",(descr)); Inst270++; } } catch(e) {}
    assertEquals('set ' + key, descr.set.name);
  });
}
try { if (Inst271 <= 1000 && typeof (TestNumericNamesSetter) != "undefined") {_RecordType("<6397,6419,250>",(TestNumericNamesSetter)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (_) != "undefined") {_RecordType("<6477,6478,251>",(_)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (_) != "undefined") {_RecordType("<6493,6494,252>",(_)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (_) != "undefined") {_RecordType("<6510,6511,253>",(_)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (_) != "undefined") {_RecordType("<6527,6528,254>",(_)); Inst275++; } } catch(e) {}try { if (Inst276 <= 1000 && typeof (_) != "undefined") {_RecordType("<6544,6545,255>",(_)); Inst276++; } } catch(e) {}try { if (Inst277 <= 1000 && typeof (_) != "undefined") {_RecordType("<6562,6563,256>",(_)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (_) != "undefined") {_RecordType("<6580,6581,257>",(_)); Inst278++; } } catch(e) {}try { if (Inst279 <= 1000 && typeof (_) != "undefined") {_RecordType("<6597,6598,258>",(_)); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (_) != "undefined") {_RecordType("<6614,6615,259>",(_)); Inst280++; } } catch(e) {}
TestNumericNamesSetter(['1', '2', '3', '4', '5', '6', '7', '8', '9'], {
  set 1(_) {},
  set 2.(_) {},
  set 3.0(_) {},
  set 4e0(_) {},
  set 5E0(_) {},
  set 6e-0(_) {},
  set 7E-0(_) {},
  set 0x8(_) {},
  set 0X9(_) {},
});
try { if (Inst281 <= 1000 && typeof (TestNumericNamesSetter) != "undefined") {_RecordType("<6625,6647,261>",(TestNumericNamesSetter)); Inst281++; } } catch(e) {}try { if (Inst282 <= 1000 && typeof (_) != "undefined") {_RecordType("<6676,6677,262>",(_)); Inst282++; } } catch(e) {}try { if (Inst283 <= 1000 && typeof (_) != "undefined") {_RecordType("<6696,6697,263>",(_)); Inst283++; } } catch(e) {}
TestNumericNamesSetter(['1.2', '1.3'], {
  set 1.2(_) {; },
  set 1.30(_) {; }
});

