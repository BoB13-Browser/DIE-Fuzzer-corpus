var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

// Simple function which stores the last debug event.
listenerComplete = false;
try { if (Inst3 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<1777,1793,33>",(listenerComplete)); Inst3++; } } catch(e) {}
exception = false;
try { if (Inst4 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1803,1812,34>",(exception)); Inst4++; } } catch(e) {}

var base_backtrace_request = '"seq":0,"type":"request","command":"backtrace"'
try { if (Inst5 <= 1000 && typeof (base_backtrace_request) != "undefined") {_RecordType("<1827,1849,36>",(base_backtrace_request)); Inst5++; } } catch(e) {}
var base_suspend_request = '"seq":0,"type":"request","command":"suspend"'
try { if (Inst6 <= 1000 && typeof (base_suspend_request) != "undefined") {_RecordType("<1905,1925,37>",(base_suspend_request)); Inst6++; } } catch(e) {}

try { if (Inst7 <= 1000 && typeof (safeEval) != "undefined") {_RecordType("<1985,1993,39>",(safeEval)); Inst7++; } } catch(e) {}
function safeEval(code) {
try { if (Inst8 <= 1000 && typeof (code) != "undefined") {_RecordType("<1994,1998,39>",(code)); Inst8++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (e) != "undefined") {_RecordType("<2056,2057,42>",(e)); Inst11++; } } catch(e) {}
  try {
try { if (Inst9 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2021,2025,41>",(eval)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (code) != "undefined") {_RecordType("<2032,2036,41>",(code)); Inst10++; } } catch(e) {}
    return eval('(' + code + ')');
  } catch (e) {
try { if (Inst12 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2065,2077,43>",(assertEquals)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (e) != "undefined") {_RecordType("<2086,2087,43>",(e)); Inst13++; } } catch(e) {}
    assertEquals(void 0, e);
try { if (Inst14 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<2101,2110,44>",(undefined)); Inst14++; } } catch(e) {}
    return undefined;
  }
}

try { if (Inst15 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<2128,2141,48>",(testArguments)); Inst15++; } } catch(e) {}
function testArguments(exec_state) {
try { if (Inst16 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2142,2152,48>",(exec_state)); Inst16++; } } catch(e) {}
  // Get the debug command processor in running state.
try { if (Inst18 <= 1000 && typeof (exec_state.debugCommandProcessor) != "undefined") {_RecordType("<2223,2255,50>",(exec_state.debugCommandProcessor)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2223,2233,50>",(exec_state)); Inst19++; } } catch(e) {}
  var dcp = exec_state.debugCommandProcessor(true);
try { if (Inst17 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2217,2220,50>",(dcp)); Inst17++; } } catch(e) {}

try { if (Inst20 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2266,2276,52>",(assertTrue)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (dcp.isRunning) != "undefined") {_RecordType("<2277,2290,52>",(dcp.isRunning)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2277,2280,52>",(dcp)); Inst22++; } } catch(e) {}
  assertTrue(dcp.isRunning());

try { if (Inst24 <= 1000 && typeof (base_backtrace_request) != "undefined") {_RecordType("<2328,2350,54>",(base_backtrace_request)); Inst24++; } } catch(e) {}
  var backtrace_request = '{' + base_backtrace_request + '}'
try { if (Inst23 <= 1000 && typeof (backtrace_request) != "undefined") {_RecordType("<2302,2319,54>",(backtrace_request)); Inst23++; } } catch(e) {}
try { if (Inst26 <= 1000 && typeof (safeEval) != "undefined") {_RecordType("<2384,2392,55>",(safeEval)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (dcp.processDebugJSONRequest) != "undefined") {_RecordType("<2393,2420,55>",(dcp.processDebugJSONRequest)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2393,2396,55>",(dcp)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (backtrace_request) != "undefined") {_RecordType("<2421,2438,55>",(backtrace_request)); Inst29++; } } catch(e) {}
  var backtrace_response = safeEval(dcp.processDebugJSONRequest(backtrace_request));
try { if (Inst25 <= 1000 && typeof (backtrace_response) != "undefined") {_RecordType("<2363,2381,55>",(backtrace_response)); Inst25++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2445,2455,57>",(assertTrue)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (backtrace_response.success) != "undefined") {_RecordType("<2456,2482,57>",(backtrace_response.success)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (backtrace_response) != "undefined") {_RecordType("<2456,2474,57>",(backtrace_response)); Inst32++; } } catch(e) {}
  assertTrue(backtrace_response.success);

try { if (Inst33 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2488,2498,59>",(assertTrue)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (backtrace_response.running) != "undefined") {_RecordType("<2499,2525,59>",(backtrace_response.running)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (backtrace_response) != "undefined") {_RecordType("<2499,2517,59>",(backtrace_response)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (backtrace_request) != "undefined") {_RecordType("<2527,2544,59>",(backtrace_request)); Inst36++; } } catch(e) {}
  assertTrue(backtrace_response.running, backtrace_request + ' -> expected running');

try { if (Inst37 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2575,2585,61>",(assertTrue)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (dcp.isRunning) != "undefined") {_RecordType("<2586,2599,61>",(dcp.isRunning)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2586,2589,61>",(dcp)); Inst39++; } } catch(e) {}
  assertTrue(dcp.isRunning());

try { if (Inst41 <= 1000 && typeof (base_suspend_request) != "undefined") {_RecordType("<2635,2655,63>",(base_suspend_request)); Inst41++; } } catch(e) {}
  var suspend_request = '{' + base_suspend_request + '}'
try { if (Inst40 <= 1000 && typeof (suspend_request) != "undefined") {_RecordType("<2611,2626,63>",(suspend_request)); Inst40++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (safeEval) != "undefined") {_RecordType("<2687,2695,64>",(safeEval)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (dcp.processDebugJSONRequest) != "undefined") {_RecordType("<2696,2723,64>",(dcp.processDebugJSONRequest)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2696,2699,64>",(dcp)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (suspend_request) != "undefined") {_RecordType("<2724,2739,64>",(suspend_request)); Inst46++; } } catch(e) {}
  var suspend_response = safeEval(dcp.processDebugJSONRequest(suspend_request));
try { if (Inst42 <= 1000 && typeof (suspend_response) != "undefined") {_RecordType("<2668,2684,64>",(suspend_response)); Inst42++; } } catch(e) {}

try { if (Inst47 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2746,2756,66>",(assertTrue)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (suspend_response.success) != "undefined") {_RecordType("<2757,2781,66>",(suspend_response.success)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (suspend_response) != "undefined") {_RecordType("<2757,2773,66>",(suspend_response)); Inst49++; } } catch(e) {}
  assertTrue(suspend_response.success);

try { if (Inst50 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2787,2798,68>",(assertFalse)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (suspend_response.running) != "undefined") {_RecordType("<2799,2823,68>",(suspend_response.running)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (suspend_response) != "undefined") {_RecordType("<2799,2815,68>",(suspend_response)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (suspend_request) != "undefined") {_RecordType("<2825,2840,68>",(suspend_request)); Inst53++; } } catch(e) {}
  assertFalse(suspend_response.running, suspend_request + ' -> expected not running');

try { if (Inst54 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<2875,2886,70>",(assertFalse)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (dcp.isRunning) != "undefined") {_RecordType("<2887,2900,70>",(dcp.isRunning)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (dcp) != "undefined") {_RecordType("<2887,2890,70>",(dcp)); Inst56++; } } catch(e) {}
  assertFalse(dcp.isRunning());
}

try { if (Inst57 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2917,2925,73>",(listener)); Inst57++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst58 <= 1000 && typeof (event) != "undefined") {_RecordType("<2926,2931,73>",(event)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<2933,2943,73>",(exec_state)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2945,2955,73>",(event_data)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (data) != "undefined") {_RecordType("<2957,2961,73>",(data)); Inst61++; } } catch(e) {}
try { if (Inst69 <= 1000 && typeof (e) != "undefined") {_RecordType("<3179,3180,83>",(e)); Inst69++; } } catch(e) {}
  try {
try { if (Inst62 <= 1000 && typeof (event) != "undefined") {_RecordType("<2981,2986,75>",(event)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (Debug.DebugEvent.Break) != "undefined") {_RecordType("<2990,3012,75>",(Debug.DebugEvent.Break)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2990,3006,75>",(Debug.DebugEvent)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2990,2995,75>",(Debug)); Inst65++; } } catch(e) {}
    if (event == Debug.DebugEvent.Break) {

      // Test simple suspend request.
try { if (Inst66 <= 1000 && typeof (testArguments) != "undefined") {_RecordType("<3061,3074,78>",(testArguments)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<3075,3085,78>",(exec_state)); Inst67++; } } catch(e) {}
      testArguments(exec_state);

      // Indicate that all was processed.
      listenerComplete = true;
try { if (Inst68 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<3137,3153,81>",(listenerComplete)); Inst68++; } } catch(e) {}
    }
  } catch (e) {
try { if (Inst71 <= 1000 && typeof (e) != "undefined") {_RecordType("<3200,3201,84>",(e)); Inst71++; } } catch(e) {}
    exception = e
try { if (Inst70 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3188,3197,84>",(exception)); Inst70++; } } catch(e) {}
  };
};

// Add the debug event listener.
try { if (Inst72 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<3244,3261,89>",(Debug.setListener)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<3244,3249,89>",(Debug)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (listener) != "undefined") {_RecordType("<3262,3270,89>",(listener)); Inst74++; } } catch(e) {}
Debug.setListener(listener);

// Stop debugger and check that suspend command changes running flag.
debugger;

try { if (Inst75 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3355,3366,94>",(assertFalse)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (exception) != "undefined") {_RecordType("<3367,3376,94>",(exception)); Inst76++; } } catch(e) {}
assertFalse(exception, "exception in listener")
// Make sure that the debug event listener vas invoked.
try { if (Inst77 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3459,3469,96>",(assertTrue)); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (listenerComplete) != "undefined") {_RecordType("<3470,3486,96>",(listenerComplete)); Inst78++; } } catch(e) {}
assertTrue(listenerComplete, "listener did not run to completion");

