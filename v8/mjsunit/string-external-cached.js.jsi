var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-externalize-string --expose-gc
// Test data pointer caching of external strings.

try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<1708,1712,31>",(test)); Inst0++; } } catch(e) {}
function test() {
  // Test string.charAt.
try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<1765,1770,33>",(Array)); Inst2++; } } catch(e) {}
  var charat_str = new Array(5);
try { if (Inst1 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<1748,1758,33>",(charat_str)); Inst1++; } } catch(e) {}
  charat_str[0] = "0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF\
0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0123456789ABCDEF";
try { if (Inst3 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<1777,1790,34>",(charat_str[0])); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<1777,1787,34>",(charat_str)); Inst4++; } } catch(e) {}
  charat_str[1] = "0123456789ABCDEF";
try { if (Inst5 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2095,2108,39>",(charat_str[1])); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2095,2105,39>",(charat_str)); Inst6++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2178,2191,40>",(charat_str[1])); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2178,2188,40>",(charat_str)); Inst13++; } } catch(e) {}
  for (var i = 0; i < 6; i++) charat_str[1] += charat_str[1];
try { if (Inst7 <= 1000 && typeof (i) != "undefined") {_RecordType("<2142,2143,40>",(i)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (i) != "undefined") {_RecordType("<2149,2150,40>",(i)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (i) != "undefined") {_RecordType("<2156,2157,40>",(i)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2161,2174,40>",(charat_str[1])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2161,2171,40>",(charat_str)); Inst11++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (ex) != "undefined") {_RecordType("<2342,2344,44>",(ex)); Inst20++; } } catch(e) {}
  try {  // String can only be externalized once
try { if (Inst14 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<2246,2263,42>",(externalizeString)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2264,2277,42>",(charat_str[0])); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2264,2274,42>",(charat_str)); Inst16++; } } catch(e) {}
    externalizeString(charat_str[0], false);
try { if (Inst17 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<2291,2308,43>",(externalizeString)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2309,2322,43>",(charat_str[1])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2309,2319,43>",(charat_str)); Inst19++; } } catch(e) {}
    externalizeString(charat_str[1], true);
  } catch (ex) { }
try { if (Inst23 <= 1000 && typeof (charat_str[0].slice) != "undefined") {_RecordType("<2368,2387,45>",(charat_str[0].slice)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2368,2381,45>",(charat_str[0])); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2368,2378,45>",(charat_str)); Inst25++; } } catch(e) {}
  charat_str[2] = charat_str[0].slice(0, -1);
try { if (Inst21 <= 1000 && typeof (charat_str[2]) != "undefined") {_RecordType("<2352,2365,45>",(charat_str[2])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2352,2362,45>",(charat_str)); Inst22++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (charat_str[1].slice) != "undefined") {_RecordType("<2414,2433,46>",(charat_str[1].slice)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (charat_str[1]) != "undefined") {_RecordType("<2414,2427,46>",(charat_str[1])); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2414,2424,46>",(charat_str)); Inst30++; } } catch(e) {}
  charat_str[3] = charat_str[1].slice(0, -1);
try { if (Inst26 <= 1000 && typeof (charat_str[3]) != "undefined") {_RecordType("<2398,2411,46>",(charat_str[3])); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2398,2408,46>",(charat_str)); Inst27++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2460,2473,47>",(charat_str[0])); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2460,2470,47>",(charat_str)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (charat_str[0]) != "undefined") {_RecordType("<2476,2489,47>",(charat_str[0])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2476,2486,47>",(charat_str)); Inst36++; } } catch(e) {}
  charat_str[4] = charat_str[0] + charat_str[0];
try { if (Inst31 <= 1000 && typeof (charat_str[4]) != "undefined") {_RecordType("<2444,2457,47>",(charat_str[4])); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2444,2454,47>",(charat_str)); Inst32++; } } catch(e) {}

  for (var i = 0; i < 5; i++) {
try { if (Inst37 <= 1000 && typeof (i) != "undefined") {_RecordType("<2503,2504,49>",(i)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (i) != "undefined") {_RecordType("<2510,2511,49>",(i)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (i) != "undefined") {_RecordType("<2517,2518,49>",(i)); Inst39++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2528,2540,50>",(assertEquals)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2546,2566,50>",(charat_str[i].charAt)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2546,2559,50>",(charat_str[i])); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2546,2556,50>",(charat_str)); Inst43++; } } catch(e) {}
    assertEquals('B', charat_str[i].charAt(6*16 + 11));
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2584,2596,51>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2602,2622,51>",(charat_str[i].charAt)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2602,2615,51>",(charat_str[i])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2602,2612,51>",(charat_str)); Inst47++; } } catch(e) {}
    assertEquals('C', charat_str[i].charAt(6*16 + 12));
try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2640,2652,52>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2658,2678,52>",(charat_str[i].charAt)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2658,2671,52>",(charat_str[i])); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2658,2668,52>",(charat_str)); Inst51++; } } catch(e) {}
    assertEquals('A', charat_str[i].charAt(3*16 + 10));
try { if (Inst52 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2696,2708,53>",(assertEquals)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (charat_str[i].charAt) != "undefined") {_RecordType("<2714,2734,53>",(charat_str[i].charAt)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (charat_str[i]) != "undefined") {_RecordType("<2714,2727,53>",(charat_str[i])); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (charat_str) != "undefined") {_RecordType("<2714,2724,53>",(charat_str)); Inst55++; } } catch(e) {}
    assertEquals('B', charat_str[i].charAt(3*16 + 11));
  }

  charat_short = "012";
try { if (Inst56 <= 1000 && typeof (charat_short) != "undefined") {_RecordType("<2755,2767,56>",(charat_short)); Inst56++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (ex) != "undefined") {_RecordType("<2880,2882,59>",(ex)); Inst59++; } } catch(e) {}
  try {  // String can only be externalized once
try { if (Inst57 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<2830,2847,58>",(externalizeString)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (charat_short) != "undefined") {_RecordType("<2848,2860,58>",(charat_short)); Inst58++; } } catch(e) {}
    externalizeString(charat_short, true);
  } catch (ex) { }
try { if (Inst60 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2890,2902,60>",(assertEquals)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (charat_short.charAt) != "undefined") {_RecordType("<2908,2927,60>",(charat_short.charAt)); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (charat_short) != "undefined") {_RecordType("<2908,2920,60>",(charat_short)); Inst62++; } } catch(e) {}
  assertEquals("1", charat_short.charAt(1));

  // Test regexp and short substring.
  var re = /(A|B)/;
try { if (Inst63 <= 1000 && typeof (re) != "undefined") {_RecordType("<2978,2980,63>",(re)); Inst63++; } } catch(e) {}
  var rere = /(T.{1,2}B)/;
try { if (Inst64 <= 1000 && typeof (rere) != "undefined") {_RecordType("<2998,3002,64>",(rere)); Inst64++; } } catch(e) {}
  var ascii = "ABCDEFGHIJKLMNOPQRST";
try { if (Inst65 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3025,3030,65>",(ascii)); Inst65++; } } catch(e) {}
  var twobyte = "_ABCDEFGHIJKLMNOPQRST";
try { if (Inst66 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3063,3070,66>",(twobyte)); Inst66++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (ex) != "undefined") {_RecordType("<3192,3194,70>",(ex)); Inst71++; } } catch(e) {}
  try {
try { if (Inst67 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<3110,3127,68>",(externalizeString)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3128,3133,68>",(ascii)); Inst68++; } } catch(e) {}
    externalizeString(ascii, false);
try { if (Inst69 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<3147,3164,69>",(externalizeString)); Inst69++; } } catch(e) {}try { if (Inst70 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3165,3172,69>",(twobyte)); Inst70++; } } catch(e) {}
    externalizeString(twobyte, true);
  } catch (ex) { }
try { if (Inst72 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<3202,3212,71>",(assertTrue)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3213,3228,71>",(isOneByteString)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3229,3234,71>",(ascii)); Inst74++; } } catch(e) {}
  assertTrue(isOneByteString(ascii));
try { if (Inst75 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<3240,3251,72>",(assertFalse)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<3252,3267,72>",(isOneByteString)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3268,3275,72>",(twobyte)); Inst77++; } } catch(e) {}
  assertFalse(isOneByteString(twobyte));
try { if (Inst79 <= 1000 && typeof (ascii.slice) != "undefined") {_RecordType("<3299,3310,73>",(ascii.slice)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3299,3304,73>",(ascii)); Inst80++; } } catch(e) {}
  var ascii_slice = ascii.slice(1,-1);
try { if (Inst78 <= 1000 && typeof (ascii_slice) != "undefined") {_RecordType("<3285,3296,73>",(ascii_slice)); Inst78++; } } catch(e) {}
try { if (Inst82 <= 1000 && typeof (twobyte.slice) != "undefined") {_RecordType("<3340,3353,74>",(twobyte.slice)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3340,3347,74>",(twobyte)); Inst83++; } } catch(e) {}
  var twobyte_slice = twobyte.slice(2,-1);
try { if (Inst81 <= 1000 && typeof (twobyte_slice) != "undefined") {_RecordType("<3324,3337,74>",(twobyte_slice)); Inst81++; } } catch(e) {}
try { if (Inst85 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3380,3385,75>",(ascii)); Inst85++; } } catch(e) {}try { if (Inst86 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3388,3393,75>",(ascii)); Inst86++; } } catch(e) {}
  var ascii_cons = ascii + ascii;
try { if (Inst84 <= 1000 && typeof (ascii_cons) != "undefined") {_RecordType("<3367,3377,75>",(ascii_cons)); Inst84++; } } catch(e) {}
try { if (Inst88 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3416,3423,76>",(twobyte)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3426,3433,76>",(twobyte)); Inst89++; } } catch(e) {}
  var twobyte_cons = twobyte + twobyte;
try { if (Inst87 <= 1000 && typeof (twobyte_cons) != "undefined") {_RecordType("<3401,3413,76>",(twobyte_cons)); Inst87++; } } catch(e) {}
  for (var i = 0; i < 2; i++) {
try { if (Inst90 <= 1000 && typeof (i) != "undefined") {_RecordType("<3446,3447,77>",(i)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (i) != "undefined") {_RecordType("<3453,3454,77>",(i)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (i) != "undefined") {_RecordType("<3460,3461,77>",(i)); Inst92++; } } catch(e) {}
try { if (Inst93 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3471,3483,78>",(assertEquals)); Inst93++; } } catch(e) {}try { if (Inst94 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3496,3503,78>",(re.exec)); Inst94++; } } catch(e) {}try { if (Inst95 <= 1000 && typeof (re) != "undefined") {_RecordType("<3496,3498,78>",(re)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (ascii) != "undefined") {_RecordType("<3504,3509,78>",(ascii)); Inst96++; } } catch(e) {}
    assertEquals(["A", "A"], re.exec(ascii));
try { if (Inst97 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3517,3529,79>",(assertEquals)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3542,3549,79>",(re.exec)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (re) != "undefined") {_RecordType("<3542,3544,79>",(re)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (ascii_slice) != "undefined") {_RecordType("<3550,3561,79>",(ascii_slice)); Inst100++; } } catch(e) {}
    assertEquals(["B", "B"], re.exec(ascii_slice));
try { if (Inst101 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3569,3581,80>",(assertEquals)); Inst101++; } } catch(e) {}try { if (Inst102 <= 1000 && typeof (rere.exec) != "undefined") {_RecordType("<3598,3607,80>",(rere.exec)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (rere) != "undefined") {_RecordType("<3598,3602,80>",(rere)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (ascii_cons) != "undefined") {_RecordType("<3608,3618,80>",(ascii_cons)); Inst104++; } } catch(e) {}
    assertEquals(["TAB", "TAB"], rere.exec(ascii_cons));
try { if (Inst105 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3626,3638,81>",(assertEquals)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3651,3658,81>",(re.exec)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (re) != "undefined") {_RecordType("<3651,3653,81>",(re)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (twobyte) != "undefined") {_RecordType("<3659,3666,81>",(twobyte)); Inst108++; } } catch(e) {}
    assertEquals(["A", "A"], re.exec(twobyte));
try { if (Inst109 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3674,3686,82>",(assertEquals)); Inst109++; } } catch(e) {}try { if (Inst110 <= 1000 && typeof (re.exec) != "undefined") {_RecordType("<3699,3706,82>",(re.exec)); Inst110++; } } catch(e) {}try { if (Inst111 <= 1000 && typeof (re) != "undefined") {_RecordType("<3699,3701,82>",(re)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (twobyte_slice) != "undefined") {_RecordType("<3707,3720,82>",(twobyte_slice)); Inst112++; } } catch(e) {}
    assertEquals(["B", "B"], re.exec(twobyte_slice));
try { if (Inst113 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3728,3740,83>",(assertEquals)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (rere.exec) != "undefined") {_RecordType("<3759,3768,83>",(rere.exec)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (rere) != "undefined") {_RecordType("<3759,3763,83>",(rere)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (twobyte_cons) != "undefined") {_RecordType("<3769,3781,83>",(twobyte_cons)); Inst116++; } } catch(e) {}
    assertEquals(["T_AB", "T_AB"], rere.exec(twobyte_cons));
try { if (Inst117 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3789,3801,84>",(assertEquals)); Inst117++; } } catch(e) {}try { if (Inst118 <= 1000 && typeof (ascii_slice.substr) != "undefined") {_RecordType("<3810,3828,84>",(ascii_slice.substr)); Inst118++; } } catch(e) {}try { if (Inst119 <= 1000 && typeof (ascii_slice) != "undefined") {_RecordType("<3810,3821,84>",(ascii_slice)); Inst119++; } } catch(e) {}
    assertEquals("DEFG", ascii_slice.substr(2, 4));
try { if (Inst120 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3841,3853,85>",(assertEquals)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (twobyte_slice.substr) != "undefined") {_RecordType("<3862,3882,85>",(twobyte_slice.substr)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (twobyte_slice) != "undefined") {_RecordType("<3862,3875,85>",(twobyte_slice)); Inst122++; } } catch(e) {}
    assertEquals("DEFG", twobyte_slice.substr(2, 4));
try { if (Inst123 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3895,3907,86>",(assertEquals)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (ascii_cons.substr) != "undefined") {_RecordType("<3916,3933,86>",(ascii_cons.substr)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (ascii_cons) != "undefined") {_RecordType("<3916,3926,86>",(ascii_cons)); Inst125++; } } catch(e) {}
    assertEquals("DEFG", ascii_cons.substr(3, 4));
try { if (Inst126 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3946,3958,87>",(assertEquals)); Inst126++; } } catch(e) {}try { if (Inst127 <= 1000 && typeof (twobyte_cons.substr) != "undefined") {_RecordType("<3967,3986,87>",(twobyte_cons.substr)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (twobyte_cons) != "undefined") {_RecordType("<3967,3979,87>",(twobyte_cons)); Inst128++; } } catch(e) {}
    assertEquals("DEFG", twobyte_cons.substr(4, 4));
  }

  // Test adding external strings
  var short_ascii = "E=";
try { if (Inst129 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4040,4051,91>",(short_ascii)); Inst129++; } } catch(e) {}
  var long_ascii = "MCsquared";
try { if (Inst130 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4066,4076,92>",(long_ascii)); Inst130++; } } catch(e) {}
  var short_twobyte = "E\u1234";
try { if (Inst131 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4098,4111,93>",(short_twobyte)); Inst131++; } } catch(e) {}
  var long_twobyte = "MCsquare\u1234";
try { if (Inst132 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4131,4143,94>",(long_twobyte)); Inst132++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (ex) != "undefined") {_RecordType("<4554,4556,102>",(ex)); Inst151++; } } catch(e) {}
  try {  // String can only be externalized once
try { if (Inst133 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<4217,4234,96>",(externalizeString)); Inst133++; } } catch(e) {}try { if (Inst134 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4235,4246,96>",(short_ascii)); Inst134++; } } catch(e) {}
    externalizeString(short_ascii, false);
try { if (Inst135 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<4260,4277,97>",(externalizeString)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4278,4288,97>",(long_ascii)); Inst136++; } } catch(e) {}
    externalizeString(long_ascii, false);
try { if (Inst137 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<4302,4319,98>",(externalizeString)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4320,4333,98>",(short_twobyte)); Inst138++; } } catch(e) {}
    externalizeString(short_twobyte, true);
try { if (Inst139 <= 1000 && typeof (externalizeString) != "undefined") {_RecordType("<4346,4363,99>",(externalizeString)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4364,4376,99>",(long_twobyte)); Inst140++; } } catch(e) {}
    externalizeString(long_twobyte, true);
try { if (Inst141 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4389,4399,100>",(assertTrue)); Inst141++; } } catch(e) {}try { if (Inst142 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4400,4415,100>",(isOneByteString)); Inst142++; } } catch(e) {}try { if (Inst143 <= 1000 && typeof (short_asii) != "undefined") {_RecordType("<4416,4426,100>",(short_asii)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4431,4446,100>",(isOneByteString)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4447,4457,100>",(long_ascii)); Inst145++; } } catch(e) {}
    assertTrue(isOneByteString(short_asii) && isOneByteString(long_ascii));
try { if (Inst146 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<4465,4476,101>",(assertFalse)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4477,4492,101>",(isOneByteString)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4493,4506,101>",(short_twobyte)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4511,4526,101>",(isOneByteString)); Inst149++; } } catch(e) {}try { if (Inst150 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4527,4539,101>",(long_twobyte)); Inst150++; } } catch(e) {}
    assertFalse(isOneByteString(short_twobyte) || isOneByteString(long_twobyte));
  } catch (ex) { }
try { if (Inst152 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4564,4576,103>",(assertEquals)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4592,4603,103>",(short_ascii)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4606,4616,103>",(long_ascii)); Inst154++; } } catch(e) {}
  assertEquals("E=MCsquared", short_ascii + long_ascii);
try { if (Inst155 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<4621,4631,104>",(assertTrue)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4632,4647,104>",(isOneByteString)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4648,4659,104>",(short_ascii)); Inst157++; } } catch(e) {}try { if (Inst158 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4662,4672,104>",(long_ascii)); Inst158++; } } catch(e) {}
  assertTrue(isOneByteString(short_ascii + long_ascii));
try { if (Inst159 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4678,4690,105>",(assertEquals)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4706,4716,105>",(long_ascii)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (short_ascii) != "undefined") {_RecordType("<4719,4730,105>",(short_ascii)); Inst161++; } } catch(e) {}
  assertEquals("MCsquaredE=", long_ascii + short_ascii);
try { if (Inst162 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4735,4747,106>",(assertEquals)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4773,4786,106>",(short_twobyte)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4789,4801,106>",(long_twobyte)); Inst164++; } } catch(e) {}
  assertEquals("E\u1234MCsquare\u1234", short_twobyte + long_twobyte);
try { if (Inst165 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<4806,4817,107>",(assertFalse)); Inst165++; } } catch(e) {}try { if (Inst166 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<4818,4833,107>",(isOneByteString)); Inst166++; } } catch(e) {}try { if (Inst167 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4834,4847,107>",(short_twobyte)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (long_twobyte) != "undefined") {_RecordType("<4850,4862,107>",(long_twobyte)); Inst168++; } } catch(e) {}
  assertFalse(isOneByteString(short_twobyte + long_twobyte));
try { if (Inst169 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4868,4880,108>",(assertEquals)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<4903,4913,108>",(long_ascii)); Inst170++; } } catch(e) {}
  assertEquals("E=MCsquared", "E=" + long_ascii);
try { if (Inst171 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4918,4930,109>",(assertEquals)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<4951,4964,109>",(short_twobyte)); Inst172++; } } catch(e) {}
  assertEquals("E\u1234MCsquared", short_twobyte + "MCsquared");
try { if (Inst173 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<4983,4995,110>",(assertEquals)); Inst173++; } } catch(e) {}try { if (Inst174 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<5016,5029,110>",(short_twobyte)); Inst174++; } } catch(e) {}try { if (Inst175 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<5032,5042,110>",(long_ascii)); Inst175++; } } catch(e) {}
  assertEquals("E\u1234MCsquared", short_twobyte + long_ascii);
try { if (Inst176 <= 1000 && typeof (assertFalse) != "undefined") {_RecordType("<5047,5058,111>",(assertFalse)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (isOneByteString) != "undefined") {_RecordType("<5059,5074,111>",(isOneByteString)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (short_twobyte) != "undefined") {_RecordType("<5075,5088,111>",(short_twobyte)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (long_ascii) != "undefined") {_RecordType("<5091,5101,111>",(long_ascii)); Inst179++; } } catch(e) {}
  assertFalse(isOneByteString(short_twobyte + long_ascii));
}

// Run the test many times to ensure IC-s don't break things.
for (var i = 0; i < 10; i++) {
try { if (Inst180 <= 1000 && typeof (i) != "undefined") {_RecordType("<5179,5180,115>",(i)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (i) != "undefined") {_RecordType("<5186,5187,115>",(i)); Inst181++; } } catch(e) {}try { if (Inst182 <= 1000 && typeof (i) != "undefined") {_RecordType("<5194,5195,115>",(i)); Inst182++; } } catch(e) {}
try { if (Inst183 <= 1000 && typeof (test) != "undefined") {_RecordType("<5203,5207,116>",(test)); Inst183++; } } catch(e) {}
  test();
}

// Clean up string to make Valgrind happy.
try { if (Inst184 <= 1000 && typeof (gc) != "undefined") {_RecordType("<5257,5259,120>",(gc)); Inst184++; } } catch(e) {}
gc();
try { if (Inst185 <= 1000 && typeof (gc) != "undefined") {_RecordType("<5263,5265,121>",(gc)); Inst185++; } } catch(e) {}
gc();

