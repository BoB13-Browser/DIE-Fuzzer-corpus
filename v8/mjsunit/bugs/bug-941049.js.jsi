var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2008 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// This test fails because we copy the arguments array on indirect
// access

try { if (Inst0 <= 1000 && typeof (g) != "undefined") {_RecordType("<1685,1686,31>",(g)); Inst0++; } } catch(e) {}
function g(f) {
try { if (Inst1 <= 1000 && typeof (f) != "undefined") {_RecordType("<1687,1688,31>",(f)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1694,1706,32>",(assertEquals)); Inst2++; } } catch(e) {}
  assertEquals(100, f.arguments = 100);  // read-only
try { if (Inst3 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1712,1723,32>",(f.arguments)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (f) != "undefined") {_RecordType("<1712,1713,32>",(f)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1748,1760,33>",(assertEquals)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (f.arguments.length) != "undefined") {_RecordType("<1764,1782,33>",(f.arguments.length)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1764,1775,33>",(f.arguments)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (f) != "undefined") {_RecordType("<1764,1765,33>",(f)); Inst8++; } } catch(e) {}
  assertEquals(3, f.arguments.length);
try { if (Inst9 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1787,1799,34>",(assertEquals)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (f.arguments[0]) != "undefined") {_RecordType("<1803,1817,34>",(f.arguments[0])); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1803,1814,34>",(f.arguments)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<1803,1804,34>",(f)); Inst12++; } } catch(e) {}
  assertEquals(1, f.arguments[0]);
try { if (Inst13 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1822,1834,35>",(assertEquals)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (f.arguments[1]) != "undefined") {_RecordType("<1838,1852,35>",(f.arguments[1])); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1838,1849,35>",(f.arguments)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<1838,1839,35>",(f)); Inst16++; } } catch(e) {}
  assertEquals(2, f.arguments[1]);
try { if (Inst17 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1857,1869,36>",(assertEquals)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (f.arguments[2]) != "undefined") {_RecordType("<1873,1887,36>",(f.arguments[2])); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1873,1884,36>",(f.arguments)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (f) != "undefined") {_RecordType("<1873,1874,36>",(f)); Inst20++; } } catch(e) {}
  assertEquals(3, f.arguments[2]);
  f.arguments[0] = 999;
try { if (Inst21 <= 1000 && typeof (f.arguments[0]) != "undefined") {_RecordType("<1892,1906,37>",(f.arguments[0])); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1892,1903,37>",(f.arguments)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (f) != "undefined") {_RecordType("<1892,1893,37>",(f)); Inst23++; } } catch(e) {}
  f.arguments.extra = 'kallevip';
try { if (Inst24 <= 1000 && typeof (f.arguments.extra) != "undefined") {_RecordType("<1916,1933,38>",(f.arguments.extra)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1916,1927,38>",(f.arguments)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (f) != "undefined") {_RecordType("<1916,1917,38>",(f)); Inst26++; } } catch(e) {}
}

try { if (Inst27 <= 1000 && typeof (h) != "undefined") {_RecordType("<1960,1961,41>",(h)); Inst27++; } } catch(e) {}
function h(f) {
try { if (Inst28 <= 1000 && typeof (f) != "undefined") {_RecordType("<1962,1963,41>",(f)); Inst28++; } } catch(e) {}
try { if (Inst29 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1969,1981,42>",(assertEquals)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (f.arguments.extra) != "undefined") {_RecordType("<1994,2011,42>",(f.arguments.extra)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<1994,2005,42>",(f.arguments)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (f) != "undefined") {_RecordType("<1994,1995,42>",(f)); Inst32++; } } catch(e) {}
  assertEquals('kallevip', f.arguments.extra);
try { if (Inst33 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<2023,2034,43>",(f.arguments)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (f) != "undefined") {_RecordType("<2023,2024,43>",(f)); Inst34++; } } catch(e) {}
  return f.arguments;
}

// Test function with a materialized arguments array.
try { if (Inst35 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2102,2104,47>",(f0)); Inst35++; } } catch(e) {}
function f0() {
try { if (Inst36 <= 1000 && typeof (g) != "undefined") {_RecordType("<2111,2112,48>",(g)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2113,2115,48>",(f0)); Inst37++; } } catch(e) {}
  g(f0);
try { if (Inst39 <= 1000 && typeof (h) != "undefined") {_RecordType("<2133,2134,49>",(h)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2135,2137,49>",(f0)); Inst40++; } } catch(e) {}
  var result = h(f0);
try { if (Inst38 <= 1000 && typeof (result) != "undefined") {_RecordType("<2124,2130,49>",(result)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<2150,2159,50>",(arguments)); Inst42++; } } catch(e) {}
  var a = arguments;
try { if (Inst41 <= 1000 && typeof (a) != "undefined") {_RecordType("<2146,2147,50>",(a)); Inst41++; } } catch(e) {}
try { if (Inst43 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2163,2175,51>",(assertEquals)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2181,2185,51>",(a[0])); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (a) != "undefined") {_RecordType("<2181,2182,51>",(a)); Inst45++; } } catch(e) {}
  assertEquals(999, a[0]);
try { if (Inst46 <= 1000 && typeof (result) != "undefined") {_RecordType("<2197,2203,52>",(result)); Inst46++; } } catch(e) {}
  return result;
}


// Test function without a materialized arguments array.
try { if (Inst47 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2275,2277,57>",(f1)); Inst47++; } } catch(e) {}
function f1(x) {
try { if (Inst48 <= 1000 && typeof (x) != "undefined") {_RecordType("<2278,2279,57>",(x)); Inst48++; } } catch(e) {}
try { if (Inst49 <= 1000 && typeof (g) != "undefined") {_RecordType("<2285,2286,58>",(g)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2287,2289,58>",(f1)); Inst50++; } } catch(e) {}
  g(f1);
try { if (Inst52 <= 1000 && typeof (h) != "undefined") {_RecordType("<2307,2308,59>",(h)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2309,2311,59>",(f1)); Inst53++; } } catch(e) {}
  var result = h(f1);
try { if (Inst51 <= 1000 && typeof (result) != "undefined") {_RecordType("<2298,2304,59>",(result)); Inst51++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2316,2328,60>",(assertEquals)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (x) != "undefined") {_RecordType("<2334,2335,60>",(x)); Inst55++; } } catch(e) {}
  assertEquals(999, x);
try { if (Inst56 <= 1000 && typeof (result) != "undefined") {_RecordType("<2347,2353,61>",(result)); Inst56++; } } catch(e) {}
  return result;
}


try { if (Inst57 <= 1000 && typeof (test) != "undefined") {_RecordType("<2368,2372,65>",(test)); Inst57++; } } catch(e) {}
function test(f) {
try { if (Inst58 <= 1000 && typeof (f) != "undefined") {_RecordType("<2373,2374,65>",(f)); Inst58++; } } catch(e) {}
try { if (Inst59 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2380,2390,66>",(assertTrue)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<2400,2411,66>",(f.arguments)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (f) != "undefined") {_RecordType("<2400,2401,66>",(f)); Inst61++; } } catch(e) {}
  assertTrue(null === f.arguments);
try { if (Inst63 <= 1000 && typeof (f) != "undefined") {_RecordType("<2427,2428,67>",(f)); Inst63++; } } catch(e) {}
  var args = f(1,2,3);
try { if (Inst62 <= 1000 && typeof (args) != "undefined") {_RecordType("<2420,2424,67>",(args)); Inst62++; } } catch(e) {}
try { if (Inst64 <= 1000 && typeof (assertTrue) != "undefined") {_RecordType("<2439,2449,68>",(assertTrue)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (f.arguments) != "undefined") {_RecordType("<2459,2470,68>",(f.arguments)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (f) != "undefined") {_RecordType("<2459,2460,68>",(f)); Inst66++; } } catch(e) {}
  assertTrue(null === f.arguments);

try { if (Inst67 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2476,2488,70>",(assertEquals)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (args.length) != "undefined") {_RecordType("<2492,2503,70>",(args.length)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (args) != "undefined") {_RecordType("<2492,2496,70>",(args)); Inst69++; } } catch(e) {}
  assertEquals(3, args.length);
try { if (Inst70 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2508,2520,71>",(assertEquals)); Inst70++; } } catch(e) {}try { if (Inst71 <= 1000 && typeof (args[0]) != "undefined") {_RecordType("<2526,2533,71>",(args[0])); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (args) != "undefined") {_RecordType("<2526,2530,71>",(args)); Inst72++; } } catch(e) {}
  assertEquals(999, args[0]);
try { if (Inst73 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2538,2550,72>",(assertEquals)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (args[1]) != "undefined") {_RecordType("<2554,2561,72>",(args[1])); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (args) != "undefined") {_RecordType("<2554,2558,72>",(args)); Inst75++; } } catch(e) {}
  assertEquals(2, args[1]);
try { if (Inst76 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2566,2578,73>",(assertEquals)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (args[2]) != "undefined") {_RecordType("<2582,2589,73>",(args[2])); Inst77++; } } catch(e) {}try { if (Inst78 <= 1000 && typeof (args) != "undefined") {_RecordType("<2582,2586,73>",(args)); Inst78++; } } catch(e) {}
  assertEquals(3, args[2]);
try { if (Inst79 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2594,2606,74>",(assertEquals)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (args.extra) != "undefined") {_RecordType("<2619,2629,74>",(args.extra)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (args) != "undefined") {_RecordType("<2619,2623,74>",(args)); Inst81++; } } catch(e) {}
  assertEquals('kallevip', args.extra);
}

try { if (Inst82 <= 1000 && typeof (test) != "undefined") {_RecordType("<2635,2639,77>",(test)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (f0) != "undefined") {_RecordType("<2640,2642,77>",(f0)); Inst83++; } } catch(e) {}
test(f0);
try { if (Inst84 <= 1000 && typeof (test) != "undefined") {_RecordType("<2645,2649,78>",(test)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (f1) != "undefined") {_RecordType("<2650,2652,78>",(f1)); Inst85++; } } catch(e) {}
test(f1);




try { if (Inst86 <= 1000 && typeof (w) != "undefined") {_RecordType("<2668,2669,83>",(w)); Inst86++; } } catch(e) {}
function w() {
try { if (Inst87 <= 1000 && typeof (q.arguments) != "undefined") {_RecordType("<2683,2694,84>",(q.arguments)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (q) != "undefined") {_RecordType("<2683,2684,84>",(q)); Inst88++; } } catch(e) {}
  return q.arguments;
}

try { if (Inst89 <= 1000 && typeof (q) != "undefined") {_RecordType("<2708,2709,87>",(q)); Inst89++; } } catch(e) {}
function q(x, y) {
try { if (Inst90 <= 1000 && typeof (x) != "undefined") {_RecordType("<2710,2711,87>",(x)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (y) != "undefined") {_RecordType("<2713,2714,87>",(y)); Inst91++; } } catch(e) {}
  x = 2;
try { if (Inst92 <= 1000 && typeof (x) != "undefined") {_RecordType("<2720,2721,88>",(x)); Inst92++; } } catch(e) {}
try { if (Inst94 <= 1000 && typeof (w) != "undefined") {_RecordType("<2742,2743,89>",(w)); Inst94++; } } catch(e) {}
  var result = w();
try { if (Inst93 <= 1000 && typeof (result) != "undefined") {_RecordType("<2733,2739,89>",(result)); Inst93++; } } catch(e) {}
  y = 3;
try { if (Inst95 <= 1000 && typeof (y) != "undefined") {_RecordType("<2749,2750,90>",(y)); Inst95++; } } catch(e) {}
try { if (Inst96 <= 1000 && typeof (result) != "undefined") {_RecordType("<2765,2771,91>",(result)); Inst96++; } } catch(e) {}
  return result;
}

try { if (Inst98 <= 1000 && typeof (q) != "undefined") {_RecordType("<2784,2785,94>",(q)); Inst98++; } } catch(e) {}
var a = q(0, 1);
try { if (Inst97 <= 1000 && typeof (a) != "undefined") {_RecordType("<2780,2781,94>",(a)); Inst97++; } } catch(e) {}
// x is set locally *before* the last use of arguments before the
// activation of q is popped from the stack.
try { if (Inst99 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2904,2916,97>",(assertEquals)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (a[0]) != "undefined") {_RecordType("<2920,2924,97>",(a[0])); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (a) != "undefined") {_RecordType("<2920,2921,97>",(a)); Inst101++; } } catch(e) {}
assertEquals(2, a[0]);
// y is set locally *after* the last use of arguments before the
// activation of q is popped from the stack.
try { if (Inst102 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<3037,3049,100>",(assertEquals)); Inst102++; } } catch(e) {}try { if (Inst103 <= 1000 && typeof (a[1]) != "undefined") {_RecordType("<3053,3057,100>",(a[1])); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (a) != "undefined") {_RecordType("<3053,3054,100>",(a)); Inst104++; } } catch(e) {}
assertEquals(1, a[1]);

