var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2012 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Flags: --expose-debug-as debug
// Get the Debug object exposed from the debug context global object.
try { if (Inst1 <= 1000 && typeof (debug.Debug) != "undefined") {_RecordType("<1710,1721,30>",(debug.Debug)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (debug) != "undefined") {_RecordType("<1710,1715,30>",(debug)); Inst2++; } } catch(e) {}
Debug = debug.Debug
try { if (Inst0 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1702,1707,30>",(Debug)); Inst0++; } } catch(e) {}

var script_number = 0;
try { if (Inst3 <= 1000 && typeof (script_number) != "undefined") {_RecordType("<1727,1740,32>",(script_number)); Inst3++; } } catch(e) {}
var script_names = [];
try { if (Inst4 <= 1000 && typeof (script_names) != "undefined") {_RecordType("<1750,1762,33>",(script_names)); Inst4++; } } catch(e) {}
var exception = null;
try { if (Inst5 <= 1000 && typeof (exception) != "undefined") {_RecordType("<1773,1782,34>",(exception)); Inst5++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (listener) != "undefined") {_RecordType("<1801,1809,36>",(listener)); Inst6++; } } catch(e) {}
function listener(event, exec_state, event_data, data) {
try { if (Inst7 <= 1000 && typeof (event) != "undefined") {_RecordType("<1810,1815,36>",(event)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (exec_state) != "undefined") {_RecordType("<1817,1827,36>",(exec_state)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<1829,1839,36>",(event_data)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (data) != "undefined") {_RecordType("<1841,1845,36>",(data)); Inst10++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (event) != "undefined") {_RecordType("<1855,1860,37>",(event)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Debug.DebugEvent.BeforeCompile) != "undefined") {_RecordType("<1864,1894,37>",(Debug.DebugEvent.BeforeCompile)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<1864,1880,37>",(Debug.DebugEvent)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<1864,1869,37>",(Debug)); Inst14++; } } catch(e) {}
  if (event == Debug.DebugEvent.BeforeCompile) {
try { if (Inst15 <= 1000 && typeof (event_data.script().setSource) != "undefined") {_RecordType("<1902,1931,38>",(event_data.script().setSource)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (event_data.script) != "undefined") {_RecordType("<1902,1919,38>",(event_data.script)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<1902,1912,38>",(event_data)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (event_data.script().source) != "undefined") {_RecordType("<1932,1958,38>",(event_data.script().source)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (event_data.script) != "undefined") {_RecordType("<1932,1949,38>",(event_data.script)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<1932,1942,38>",(event_data)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (script_number) != "undefined") {_RecordType("<2010,2023,39>",(script_number)); Inst21++; } } catch(e) {}
    event_data.script().setSource(event_data.script().source() +
        " //# sourceURL=proper_location_" + (++script_number));
try { if (Inst22 <= 1000 && typeof (event) != "undefined") {_RecordType("<2040,2045,40>",(event)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Debug.DebugEvent.AfterCompile) != "undefined") {_RecordType("<2049,2078,40>",(Debug.DebugEvent.AfterCompile)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (Debug.DebugEvent) != "undefined") {_RecordType("<2049,2065,40>",(Debug.DebugEvent)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2049,2054,40>",(Debug)); Inst25++; } } catch(e) {}
  } else if (event == Debug.DebugEvent.AfterCompile) {
try { if (Inst29 <= 1000 && typeof (e) != "undefined") {_RecordType("<2177,2178,43>",(e)); Inst29++; } } catch(e) {}
    try {
try { if (Inst26 <= 1000 && typeof (event_data.script().setSource) != "undefined") {_RecordType("<2098,2127,42>",(event_data.script().setSource)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (event_data.script) != "undefined") {_RecordType("<2098,2115,42>",(event_data.script)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2098,2108,42>",(event_data)); Inst28++; } } catch(e) {}
      event_data.script().setSource("a=1 //# sourceURL=wrong_location");
    } catch(e) {
try { if (Inst31 <= 1000 && typeof (e) != "undefined") {_RecordType("<2200,2201,44>",(e)); Inst31++; } } catch(e) {}
      exception = e;
try { if (Inst30 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2188,2197,44>",(exception)); Inst30++; } } catch(e) {}
    }
try { if (Inst32 <= 1000 && typeof (script_names.push) != "undefined") {_RecordType("<2213,2230,46>",(script_names.push)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (script_names) != "undefined") {_RecordType("<2213,2225,46>",(script_names)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (event_data.script().name) != "undefined") {_RecordType("<2231,2255,46>",(event_data.script().name)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (event_data.script) != "undefined") {_RecordType("<2231,2248,46>",(event_data.script)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (event_data) != "undefined") {_RecordType("<2231,2241,46>",(event_data)); Inst36++; } } catch(e) {}
    script_names.push(event_data.script().name());
  }
};


// Add the debug event listener.
try { if (Inst37 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2302,2319,52>",(Debug.setListener)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2302,2307,52>",(Debug)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (listener) != "undefined") {_RecordType("<2320,2328,52>",(listener)); Inst39++; } } catch(e) {}
Debug.setListener(listener);

// Compile different sources.
try { if (Inst40 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2362,2366,55>",(eval)); Inst40++; } } catch(e) {}
eval('a=1');
try { if (Inst41 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2375,2379,56>",(eval)); Inst41++; } } catch(e) {}
eval('(function(){})');

try { if (Inst42 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2400,2412,58>",(assertEquals)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (script_names.length) != "undefined") {_RecordType("<2416,2435,58>",(script_names.length)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (script_names) != "undefined") {_RecordType("<2416,2428,58>",(script_names)); Inst44++; } } catch(e) {}
assertEquals(2, script_names.length);
try { if (Inst45 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2438,2450,59>",(assertEquals)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (script_names[0]) != "undefined") {_RecordType("<2472,2487,59>",(script_names[0])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (script_names) != "undefined") {_RecordType("<2472,2484,59>",(script_names)); Inst47++; } } catch(e) {}
assertEquals("proper_location_1", script_names[0]);
try { if (Inst48 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2490,2502,60>",(assertEquals)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (script_names[1]) != "undefined") {_RecordType("<2524,2539,60>",(script_names[1])); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (script_names) != "undefined") {_RecordType("<2524,2536,60>",(script_names)); Inst50++; } } catch(e) {}
assertEquals("proper_location_2", script_names[1]);

try { if (Inst51 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2543,2555,62>",(assertEquals)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (exception) != "undefined") {_RecordType("<2574,2583,62>",(exception)); Inst52++; } } catch(e) {}
assertEquals("illegal access", exception);

try { if (Inst53 <= 1000 && typeof (Debug.setListener) != "undefined") {_RecordType("<2587,2604,64>",(Debug.setListener)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (Debug) != "undefined") {_RecordType("<2587,2592,64>",(Debug)); Inst54++; } } catch(e) {}
Debug.setListener(null);

