var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2010 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Tests loading of aguments across eval calls.

// Test loading across an eval call that does not shadow variables.
try { if (Inst0 <= 1000 && typeof (testNoShadowing) != "undefined") {_RecordType("<1724,1739,31>",(testNoShadowing)); Inst0++; } } catch(e) {}
function testNoShadowing(x, h) {
try { if (Inst1 <= 1000 && typeof (x) != "undefined") {_RecordType("<1740,1741,31>",(x)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (h) != "undefined") {_RecordType("<1743,1744,31>",(h)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (f) != "undefined") {_RecordType("<1759,1760,32>",(f)); Inst3++; } } catch(e) {}
  function f() {
try { if (Inst4 <= 1000 && typeof (eval) != "undefined") {_RecordType("<1769,1773,33>",(eval)); Inst4++; } } catch(e) {}
    eval('1');
try { if (Inst5 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1784,1796,34>",(assertEquals)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (x) != "undefined") {_RecordType("<1800,1801,34>",(x)); Inst6++; } } catch(e) {}
    assertEquals(1, x);
try { if (Inst7 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1808,1820,35>",(assertEquals)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (h) != "undefined") {_RecordType("<1824,1825,35>",(h)); Inst8++; } } catch(e) {}
    assertEquals(2, h());
try { if (Inst9 <= 1000 && typeof (g) != "undefined") {_RecordType("<1843,1844,36>",(g)); Inst9++; } } catch(e) {}
    function g() {
try { if (Inst10 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1855,1867,37>",(assertEquals)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (x) != "undefined") {_RecordType("<1871,1872,37>",(x)); Inst11++; } } catch(e) {}
      assertEquals(1, x);
try { if (Inst12 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<1881,1893,38>",(assertEquals)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (h) != "undefined") {_RecordType("<1897,1898,38>",(h)); Inst13++; } } catch(e) {}
      assertEquals(2, h());
    }
try { if (Inst14 <= 1000 && typeof (g) != "undefined") {_RecordType("<1913,1914,40>",(g)); Inst14++; } } catch(e) {}
    g();
  }
try { if (Inst15 <= 1000 && typeof (f) != "undefined") {_RecordType("<1924,1925,42>",(f)); Inst15++; } } catch(e) {}
  f();
}

try { if (Inst16 <= 1000 && typeof (testNoShadowing) != "undefined") {_RecordType("<1932,1947,45>",(testNoShadowing)); Inst16++; } } catch(e) {}
testNoShadowing(1, function() { return 2; });

// Test loading across eval calls that do not shadow variables.
try { if (Inst17 <= 1000 && typeof (testNoShadowing2) != "undefined") {_RecordType("<2052,2068,48>",(testNoShadowing2)); Inst17++; } } catch(e) {}
function testNoShadowing2(x, h) {
try { if (Inst18 <= 1000 && typeof (x) != "undefined") {_RecordType("<2069,2070,48>",(x)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (h) != "undefined") {_RecordType("<2072,2073,48>",(h)); Inst19++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2079,2083,49>",(eval)); Inst20++; } } catch(e) {}
  eval('1');
try { if (Inst21 <= 1000 && typeof (f) != "undefined") {_RecordType("<2101,2102,50>",(f)); Inst21++; } } catch(e) {}
  function f() {
try { if (Inst22 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2111,2115,51>",(eval)); Inst22++; } } catch(e) {}
    eval('1');
try { if (Inst23 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2126,2138,52>",(assertEquals)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (x) != "undefined") {_RecordType("<2142,2143,52>",(x)); Inst24++; } } catch(e) {}
    assertEquals(1, x);
try { if (Inst25 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2150,2162,53>",(assertEquals)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (h) != "undefined") {_RecordType("<2166,2167,53>",(h)); Inst26++; } } catch(e) {}
    assertEquals(2, h());
try { if (Inst27 <= 1000 && typeof (g) != "undefined") {_RecordType("<2185,2186,54>",(g)); Inst27++; } } catch(e) {}
    function g() {
try { if (Inst28 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2197,2209,55>",(assertEquals)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (x) != "undefined") {_RecordType("<2213,2214,55>",(x)); Inst29++; } } catch(e) {}
      assertEquals(1, x);
try { if (Inst30 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2223,2235,56>",(assertEquals)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (h) != "undefined") {_RecordType("<2239,2240,56>",(h)); Inst31++; } } catch(e) {}
      assertEquals(2, h());
    }
try { if (Inst32 <= 1000 && typeof (g) != "undefined") {_RecordType("<2255,2256,58>",(g)); Inst32++; } } catch(e) {}
    g();
  }
try { if (Inst33 <= 1000 && typeof (f) != "undefined") {_RecordType("<2266,2267,60>",(f)); Inst33++; } } catch(e) {}
  f();
}

try { if (Inst34 <= 1000 && typeof (testNoShadowing2) != "undefined") {_RecordType("<2274,2290,63>",(testNoShadowing2)); Inst34++; } } catch(e) {}
testNoShadowing2(1, function() { return 2; });

// Test loading across an eval call that shadows variables.
try { if (Inst35 <= 1000 && typeof (testShadowing) != "undefined") {_RecordType("<2391,2404,66>",(testShadowing)); Inst35++; } } catch(e) {}
function testShadowing(x, h) {
try { if (Inst36 <= 1000 && typeof (x) != "undefined") {_RecordType("<2405,2406,66>",(x)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (h) != "undefined") {_RecordType("<2408,2409,66>",(h)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (f) != "undefined") {_RecordType("<2424,2425,67>",(f)); Inst38++; } } catch(e) {}
  function f() {
try { if (Inst39 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2434,2446,68>",(assertEquals)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (x) != "undefined") {_RecordType("<2450,2451,68>",(x)); Inst40++; } } catch(e) {}
    assertEquals(1, x);
try { if (Inst41 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2458,2470,69>",(assertEquals)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (h) != "undefined") {_RecordType("<2474,2475,69>",(h)); Inst42++; } } catch(e) {}
    assertEquals(2, h());
try { if (Inst43 <= 1000 && typeof (eval) != "undefined") {_RecordType("<2484,2488,70>",(eval)); Inst43++; } } catch(e) {}
    eval('var x = 3; var h = function() { return 4; };');
try { if (Inst44 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2542,2554,71>",(assertEquals)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (x) != "undefined") {_RecordType("<2558,2559,71>",(x)); Inst45++; } } catch(e) {}
    assertEquals(3, x);
try { if (Inst46 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2566,2578,72>",(assertEquals)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (h) != "undefined") {_RecordType("<2582,2583,72>",(h)); Inst47++; } } catch(e) {}
    assertEquals(4, h());
try { if (Inst48 <= 1000 && typeof (g) != "undefined") {_RecordType("<2601,2602,73>",(g)); Inst48++; } } catch(e) {}
    function g() {
try { if (Inst49 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2613,2625,74>",(assertEquals)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (x) != "undefined") {_RecordType("<2629,2630,74>",(x)); Inst50++; } } catch(e) {}
      assertEquals(3, x);
try { if (Inst51 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2639,2651,75>",(assertEquals)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (h) != "undefined") {_RecordType("<2655,2656,75>",(h)); Inst52++; } } catch(e) {}
      assertEquals(4, h());
    }
try { if (Inst53 <= 1000 && typeof (g) != "undefined") {_RecordType("<2671,2672,77>",(g)); Inst53++; } } catch(e) {}
    g();
  }
try { if (Inst54 <= 1000 && typeof (f) != "undefined") {_RecordType("<2682,2683,79>",(f)); Inst54++; } } catch(e) {}
  f();
try { if (Inst55 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2689,2701,80>",(assertEquals)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (x) != "undefined") {_RecordType("<2705,2706,80>",(x)); Inst56++; } } catch(e) {}
  assertEquals(1, x);
try { if (Inst57 <= 1000 && typeof (assertEquals) != "undefined") {_RecordType("<2711,2723,81>",(assertEquals)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (h) != "undefined") {_RecordType("<2727,2728,81>",(h)); Inst58++; } } catch(e) {}
  assertEquals(2, h());
}

try { if (Inst59 <= 1000 && typeof (testShadowing) != "undefined") {_RecordType("<2736,2749,84>",(testShadowing)); Inst59++; } } catch(e) {}
testShadowing(1, function() { return 2; });

