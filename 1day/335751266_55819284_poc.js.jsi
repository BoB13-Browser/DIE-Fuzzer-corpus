var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

try { if (Inst1 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<29,35,2>",(Worker)); Inst1++; } } catch(e) {}
        const worker = new Worker("worker.js");
try { if (Inst0 <= 1000 && typeof (worker) != "undefined") {_RecordType("<16,22,2>",(worker)); Inst0++; } } catch(e) {}
        worker.onmessage = function (event) {
try { if (Inst4 <= 1000 && typeof (event) != "undefined") {_RecordType("<88,93,3>",(event)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (event.data) != "undefined") {_RecordType("<126,136,4>",(event.data)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (event) != "undefined") {_RecordType("<126,131,4>",(event)); Inst7++; } } catch(e) {}
            const message = event.data;
try { if (Inst5 <= 1000 && typeof (message) != "undefined") {_RecordType("<116,123,4>",(message)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (message.type) != "undefined") {_RecordType("<159,171,5>",(message.type)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (message) != "undefined") {_RecordType("<159,166,5>",(message)); Inst9++; } } catch(e) {}
            switch (message.type) {
                case "test_result":
try { if (Inst11 <= 1000 && typeof (message.testName) != "undefined") {_RecordType("<250,266,7>",(message.testName)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (message) != "undefined") {_RecordType("<250,257,7>",(message)); Inst12++; } } catch(e) {}
                    const testName = message.testName;
try { if (Inst10 <= 1000 && typeof (testName) != "undefined") {_RecordType("<239,247,7>",(testName)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (message.passed) != "undefined") {_RecordType("<304,318,8>",(message.passed)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (message) != "undefined") {_RecordType("<304,311,8>",(message)); Inst15++; } } catch(e) {}
                    const passed = message.passed;
try { if (Inst13 <= 1000 && typeof (passed) != "undefined") {_RecordType("<295,301,8>",(passed)); Inst13++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (message.message) != "undefined") {_RecordType("<357,372,9>",(message.message)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (message) != "undefined") {_RecordType("<357,364,9>",(message)); Inst18++; } } catch(e) {}
                    const message = message.message;
try { if (Inst16 <= 1000 && typeof (message) != "undefined") {_RecordType("<347,354,9>",(message)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<395,406,10>",(console.log)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (console) != "undefined") {_RecordType("<395,402,10>",(console)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (testName) != "undefined") {_RecordType("<416,424,10>",(testName)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (passed) != "undefined") {_RecordType("<429,435,10>",(passed)); Inst22++; } } catch(e) {}
                    console.log(`Check ${testName}: ${passed ? "Okay" : "Not-Okay"}`);
try { if (Inst23 <= 1000 && typeof (message) != "undefined") {_RecordType("<487,494,11>",(message)); Inst23++; } } catch(e) {}
                    if (message) {
try { if (Inst24 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<523,534,12>",(console.log)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (console) != "undefined") {_RecordType("<523,530,12>",(console)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (message) != "undefined") {_RecordType("<547,554,12>",(message)); Inst26++; } } catch(e) {}
                        console.log(`Message: ${message}`);
                    }
                    break;
                case "test_complete":
try { if (Inst27 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<670,681,16>",(console.log)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (console) != "undefined") {_RecordType("<670,677,16>",(console)); Inst28++; } } catch(e) {}
                    console.log("Done");
                    break;
                default:
try { if (Inst29 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<766,777,19>",(console.log)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (console) != "undefined") {_RecordType("<766,773,19>",(console)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (message.type) != "undefined") {_RecordType("<803,815,19>",(message.type)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (message) != "undefined") {_RecordType("<803,810,19>",(message)); Inst32++; } } catch(e) {}
                    console.log(`Unknown message type: ${message.type}`);
            }
        };
try { if (Inst2 <= 1000 && typeof (worker.onmessage) != "undefined") {_RecordType("<59,75,3>",(worker.onmessage)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (worker) != "undefined") {_RecordType("<59,65,3>",(worker)); Inst3++; } } catch(e) {}

try { if (Inst33 <= 1000 && typeof (worker.postMessage) != "undefined") {_RecordType("<858,876,23>",(worker.postMessage)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (worker) != "undefined") {_RecordType("<858,864,23>",(worker)); Inst34++; } } catch(e) {}
        worker.postMessage({
            type: "start"
        });

try { if (Inst35 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<930,940,27>",(setTimeout)); Inst35++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<999,1010,29>",(Math.random)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (Math) != "undefined") {_RecordType("<999,1003,29>",(Math)); Inst39++; } } catch(e) {}
        setTimeout(function () {
try { if (Inst36 <= 1000 && typeof (location.reload) != "undefined") {_RecordType("<968,983,28>",(location.reload)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (location) != "undefined") {_RecordType("<968,976,28>",(location)); Inst37++; } } catch(e) {}
            location.reload();
        }, Math.random() * 33);
    
