var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

    for (let i = 0; i < 40; i++) {
try { if (Inst0 <= 1000 && typeof (i) != "undefined") {_RecordType("<15,16,2>",(i)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (i) != "undefined") {_RecordType("<22,23,2>",(i)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (i) != "undefined") {_RecordType("<30,31,2>",(i)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<59,81,3>",(document.createElement)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (document) != "undefined") {_RecordType("<59,67,3>",(document)); Inst5++; } } catch(e) {}
        let iframe = document.createElement('iframe');
try { if (Inst3 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<50,56,3>",(iframe)); Inst3++; } } catch(e) {}
        iframe.src = './index.html';
try { if (Inst6 <= 1000 && typeof (iframe.src) != "undefined") {_RecordType("<102,112,4>",(iframe.src)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<102,108,4>",(iframe)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (document.getElementById('iframes-container').appendChild) != "undefined") {_RecordType("<140,196,5>",(document.getElementById('iframes-container').appendChild)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (document.getElementById) != "undefined") {_RecordType("<140,163,5>",(document.getElementById)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (document) != "undefined") {_RecordType("<140,148,5>",(document)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<197,203,5>",(iframe)); Inst11++; } } catch(e) {}
        document.getElementById('iframes-container').appendChild(iframe);
    }
try { if (Inst12 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<218,228,7>",(setTimeout)); Inst12++; } } catch(e) {}
    setTimeout(()=>{
        // location.reload();
try { if (Inst13 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<275,286,9>",(console.log)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (console) != "undefined") {_RecordType("<275,282,9>",(console)); Inst14++; } } catch(e) {}
        console.log("before");
        location.href="http://127.0.0.1:8000/wrapper.html";
try { if (Inst15 <= 1000 && typeof (location.href) != "undefined") {_RecordType("<307,320,10>",(location.href)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (location) != "undefined") {_RecordType("<307,315,10>",(location)); Inst16++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (history.back) != "undefined") {_RecordType("<368,380,11>",(history.back)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (history) != "undefined") {_RecordType("<368,375,11>",(history)); Inst18++; } } catch(e) {}
        history.back(-1);
try { if (Inst19 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<395,406,12>",(console.log)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (console) != "undefined") {_RecordType("<395,402,12>",(console)); Inst20++; } } catch(e) {}
        console.log("after");
    },20000);

