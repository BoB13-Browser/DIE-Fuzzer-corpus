var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (F3) != "undefined") {_RecordType("<9,11,1>",(F3)); Inst0++; } } catch(e) {}
function F3(a5) {
try { if (Inst1 <= 1000 && typeof (a5) != "undefined") {_RecordType("<12,14,1>",(a5)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (target) != "undefined") {_RecordType("<32,38,2>",(target)); Inst2++; } } catch(e) {}
    if (!new.target) { throw 'must be called with new'; }
    this.f = -9223372036854775807;
try { if (Inst3 <= 1000 && typeof (this.f) != "undefined") {_RecordType("<82,88,3>",(this.f)); Inst3++; } } catch(e) {}
}
try { if (Inst4 <= 1000 && typeof (F3) != "undefined") {_RecordType("<121,123,5>",(F3)); Inst4++; } } catch(e) {}
new F3(4294967296);
try { if (Inst5 <= 1000 && typeof (F3) != "undefined") {_RecordType("<142,144,6>",(F3)); Inst5++; } } catch(e) {}
new F3(4294967296);
try { if (Inst6 <= 1000 && typeof (F3) != "undefined") {_RecordType("<163,165,7>",(F3)); Inst6++; } } catch(e) {}
new F3();
try { if (Inst8 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<182,201,8>",(String.fromCharCode)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (String) != "undefined") {_RecordType("<182,188,8>",(String)); Inst9++; } } catch(e) {}
const v21 = String.fromCharCode(1043);
try { if (Inst7 <= 1000 && typeof (v21) != "undefined") {_RecordType("<176,179,8>",(v21)); Inst7++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (String.fromCharCode) != "undefined") {_RecordType("<222,241,9>",(String.fromCharCode)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (String) != "undefined") {_RecordType("<222,228,9>",(String)); Inst12++; } } catch(e) {}
const v23 = String.fromCharCode(1075);
try { if (Inst10 <= 1000 && typeof (v23) != "undefined") {_RecordType("<216,219,9>",(v23)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<262,268,10>",(RegExp)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v21) != "undefined") {_RecordType("<281,284,10>",(v21)); Inst15++; } } catch(e) {}
const v29 = RegExp(("()\n()" + v21) + "$", "i");
try { if (Inst13 <= 1000 && typeof (v29) != "undefined") {_RecordType("<256,259,10>",(v29)); Inst13++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f30) != "undefined") {_RecordType("<309,312,11>",(f30)); Inst16++; } } catch(e) {}
function f30(a31) {
try { if (Inst17 <= 1000 && typeof (a31) != "undefined") {_RecordType("<313,316,11>",(a31)); Inst17++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (f32) != "undefined") {_RecordType("<334,337,12>",(f32)); Inst18++; } } catch(e) {}
    function f32(a33) {
try { if (Inst19 <= 1000 && typeof (a33) != "undefined") {_RecordType("<338,341,12>",(a33)); Inst19++; } } catch(e) {}
        for (let v34 = 0; v34 < 5; v34++) {
try { if (Inst20 <= 1000 && typeof (v34) != "undefined") {_RecordType("<363,366,13>",(v34)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v34) != "undefined") {_RecordType("<372,375,13>",(v34)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (v34) != "undefined") {_RecordType("<381,384,13>",(v34)); Inst22++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (eval) != "undefined") {_RecordType("<403,407,14>",(eval)); Inst23++; } } catch(e) {}
            eval(`\n    function asmModule() {\n      "use asm";\n      function x(v) {\n        v = v | 0;\n      }\n      return x;\n    }\n    asmModule();\n  `);
        }
    }
try { if (Inst25 <= 1000 && typeof (f32) != "undefined") {_RecordType("<592,595,17>",(f32)); Inst25++; } } catch(e) {}
    onmessage = f32;
try { if (Inst24 <= 1000 && typeof (onmessage) != "undefined") {_RecordType("<580,589,17>",(onmessage)); Inst24++; } } catch(e) {}
}
const v38 = [];
try { if (Inst26 <= 1000 && typeof (v38) != "undefined") {_RecordType("<607,610,19>",(v38)); Inst26++; } } catch(e) {}
for (let v39 = 0; v39 < 5; v39++) {
try { if (Inst27 <= 1000 && typeof (v39) != "undefined") {_RecordType("<627,630,20>",(v39)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (v39) != "undefined") {_RecordType("<636,639,20>",(v39)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (v39) != "undefined") {_RecordType("<645,648,20>",(v39)); Inst29++; } } catch(e) {}
    const o42 = {
        "type": "function",
    };
try { if (Inst30 <= 1000 && typeof (o42) != "undefined") {_RecordType("<665,668,21>",(o42)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<731,737,24>",(Worker)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (f30) != "undefined") {_RecordType("<738,741,24>",(f30)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (o42) != "undefined") {_RecordType("<743,746,24>",(o42)); Inst34++; } } catch(e) {}
    const v43 = new Worker(f30, o42);
try { if (Inst31 <= 1000 && typeof (v43) != "undefined") {_RecordType("<721,724,24>",(v43)); Inst31++; } } catch(e) {}
try { if (Inst37 <= 1000 && typeof (v43) != "undefined") {_RecordType("<765,768,25>",(v43)); Inst37++; } } catch(e) {}
    v38[v39] = v43;
try { if (Inst35 <= 1000 && typeof (v38[v39]) != "undefined") {_RecordType("<754,762,25>",(v38[v39])); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (v38) != "undefined") {_RecordType("<754,757,25>",(v38)); Inst36++; } } catch(e) {}
    const o44 = {
    };
try { if (Inst38 <= 1000 && typeof (o44) != "undefined") {_RecordType("<781,784,26>",(o44)); Inst38++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (v38[v39].postMessage) != "undefined") {_RecordType("<802,822,28>",(v38[v39].postMessage)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (v38[v39]) != "undefined") {_RecordType("<802,810,28>",(v38[v39])); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (v38) != "undefined") {_RecordType("<802,805,28>",(v38)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (o44) != "undefined") {_RecordType("<823,826,28>",(o44)); Inst42++; } } catch(e) {}
    v38[v39].postMessage(o44);
}
try { if (Inst43 <= 1000 && typeof (v29.test) != "undefined") {_RecordType("<833,841,30>",(v29.test)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (v29) != "undefined") {_RecordType("<833,836,30>",(v29)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (v23) != "undefined") {_RecordType("<842,845,30>",(v23)); Inst45++; } } catch(e) {}
v29.test(v23);

