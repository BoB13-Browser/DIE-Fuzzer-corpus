var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

    const supportedInstruments = [
  {
    supportedMethods: "https://example.com/pay",
  },
];
try { if (Inst0 <= 1000 && typeof (supportedInstruments) != "undefined") {_RecordType("<12,32,2>",(supportedInstruments)); Inst0++; } } catch(e) {}

const details = {
  total: { label: "Donation", amount: { currency: "USD", value: "65.00" } },
  displayItems: [
    {
      label: "Original donation amount",
      amount: { currency: "USD", value: "65.00" },
    },
  ],
  shippingOptions: [
    {
      id: "standard",
      label: "Standard shipping",
      amount: { currency: "USD", value: "0.00" },
      selected: true,
    },
  ],
};
try { if (Inst1 <= 1000 && typeof (details) != "undefined") {_RecordType("<111,118,8>",(details)); Inst1++; } } catch(e) {}

const options = { requestShipping: true };
try { if (Inst2 <= 1000 && typeof (options) != "undefined") {_RecordType("<523,530,26>",(options)); Inst2++; } } catch(e) {}

try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<658,659,30>",(e)); Inst8++; } } catch(e) {}
try {
try { if (Inst4 <= 1000 && typeof (PaymentRequest) != "undefined") {_RecordType("<592,606,29>",(PaymentRequest)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (supportedInstruments) != "undefined") {_RecordType("<607,627,29>",(supportedInstruments)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (details) != "undefined") {_RecordType("<629,636,29>",(details)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (options) != "undefined") {_RecordType("<638,645,29>",(options)); Inst7++; } } catch(e) {}
  const request = new PaymentRequest(supportedInstruments, details, options);
try { if (Inst3 <= 1000 && typeof (request) != "undefined") {_RecordType("<578,585,29>",(request)); Inst3++; } } catch(e) {}
} catch (e) {}
try { if (Inst10 <= 1000 && typeof (PasswordCredential) != "undefined") {_RecordType("<686,704,31>",(PasswordCredential)); Inst10++; } } catch(e) {}
let credential = new PasswordCredential({
    id: "example-username",
    name: "Carina Anand", // In case of a login, the name comes from the server.
    password: "correct horse battery staple",
  });
try { if (Inst9 <= 1000 && typeof (credential) != "undefined") {_RecordType("<669,679,31>",(credential)); Inst9++; } } catch(e) {}

try { if (Inst12 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<913,923,38>",(Uint8Array)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (Uint8Array.from) != "undefined") {_RecordType("<1049,1064,43>",(Uint8Array.from)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<1049,1059,43>",(Uint8Array)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (window.atob) != "undefined") {_RecordType("<1065,1076,43>",(window.atob)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (window) != "undefined") {_RecordType("<1065,1071,43>",(window)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (c) != "undefined") {_RecordType("<1126,1127,43>",(c)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (c.charCodeAt) != "undefined") {_RecordType("<1129,1141,43>",(c.charCodeAt)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (c) != "undefined") {_RecordType("<1129,1130,43>",(c)); Inst19++; } } catch(e) {}
const publicKey = {
  challenge: new Uint8Array([21,31,105 /* 29 more random bytes generated by the server */]),
  rp: {
    name: "Fancy Bank",
  },
  user: {
    id: Uint8Array.from(window.atob("MIIBkzCCATigAwIBAjCCAZMwggE4oAMCAQIwggGTMII="), c=>c.charCodeAt(0)),
    name: "442154430@qq.com",
    displayName: "lime",
  },
  pubKeyCredParams: [
    {
      type: "public-key",
      alg: -7 // "ES256"
    },
    {
      type: "public-key",
      alg: -257 // "RS256"
    }
  ],
  authenticatorSelection: {
    userVerification: "required",
    residentKey: "required",
    authenticatorAttachment: "platform",
  },

  timeout: 360000,  // 6 minutes
  extensions: {
    "payment": {
      isPayment: true,
    }
  }
};
try { if (Inst11 <= 1000 && typeof (publicKey) != "undefined") {_RecordType("<881,890,37>",(publicKey)); Inst11++; } } catch(e) {}
try { if (Inst20 <= 1000 && typeof (navigator.credentials.create) != "undefined") {_RecordType("<1630,1658,70>",(navigator.credentials.create)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (navigator.credentials) != "undefined") {_RecordType("<1630,1651,70>",(navigator.credentials)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (navigator) != "undefined") {_RecordType("<1630,1639,70>",(navigator)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (publicKey) != "undefined") {_RecordType("<1661,1670,70>",(publicKey)); Inst23++; } } catch(e) {}
navigator.credentials.create({ publicKey })

