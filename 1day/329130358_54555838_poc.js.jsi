var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst3 <= 1000 && typeof (e) != "undefined") {_RecordType("<80,81,3>",(e)); Inst3++; } } catch(e) {}
try {
try { if (Inst0 <= 1000 && typeof (d8.file.execute) != "undefined") {_RecordType("<9,24,2>",(d8.file.execute)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (d8.file) != "undefined") {_RecordType("<9,16,2>",(d8.file)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (d8) != "undefined") {_RecordType("<9,11,2>",(d8)); Inst2++; } } catch(e) {}
  d8.file.execute('test/mjsunit/wasm/wasm-module-builder.js');
} catch (e) {}
try { if (Inst5 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<102,119,4>",(WasmModuleBuilder)); Inst5++; } } catch(e) {}
const v1 = new WasmModuleBuilder();
try { if (Inst4 <= 1000 && typeof (v1) != "undefined") {_RecordType("<93,95,4>",(v1)); Inst4++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (v1.addType) != "undefined") {_RecordType("<135,145,5>",(v1.addType)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v1) != "undefined") {_RecordType("<135,137,5>",(v1)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (kSig_i_i) != "undefined") {_RecordType("<146,154,5>",(kSig_i_i)); Inst9++; } } catch(e) {}
const v2 = v1.addType(kSig_i_i);
try { if (Inst6 <= 1000 && typeof (v2) != "undefined") {_RecordType("<130,132,5>",(v2)); Inst6++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (v1.addImportedGlobal) != "undefined") {_RecordType("<169,189,6>",(v1.addImportedGlobal)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v1) != "undefined") {_RecordType("<169,171,6>",(v1)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (kWasmAnyFunc) != "undefined") {_RecordType("<202,214,6>",(kWasmAnyFunc)); Inst13++; } } catch(e) {}
const v3 = v1.addImportedGlobal('m', 'val', kWasmAnyFunc);
try { if (Inst10 <= 1000 && typeof (v3) != "undefined") {_RecordType("<164,166,6>",(v3)); Inst10++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (e) != "undefined") {_RecordType("<373,374,9>",(e)); Inst27++; } } catch(e) {}
try {
try { if (Inst14 <= 1000 && typeof (v1.addFunction('main', v2).addBody([kExprLocalGet, 0, kExprGlobalGet, v3, kGCPrefix, kExprRefCast, v2, kExprCallRef, v2]).exportFunc) != "undefined") {_RecordType("<227,359,8>",(v1.addFunction('main', v2).addBody([kExprLocalGet, 0, kExprGlobalGet, v3, kGCPrefix, kExprRefCast, v2, kExprCallRef, v2]).exportFunc)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (v1.addFunction('main', v2).addBody) != "undefined") {_RecordType("<227,261,8>",(v1.addFunction('main', v2).addBody)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (v1.addFunction) != "undefined") {_RecordType("<227,241,8>",(v1.addFunction)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (v1) != "undefined") {_RecordType("<227,229,8>",(v1)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v2) != "undefined") {_RecordType("<250,252,8>",(v2)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (kExprLocalGet) != "undefined") {_RecordType("<263,276,8>",(kExprLocalGet)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (kExprGlobalGet) != "undefined") {_RecordType("<281,295,8>",(kExprGlobalGet)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v3) != "undefined") {_RecordType("<297,299,8>",(v3)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (kGCPrefix) != "undefined") {_RecordType("<301,310,8>",(kGCPrefix)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (kExprRefCast) != "undefined") {_RecordType("<312,324,8>",(kExprRefCast)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (v2) != "undefined") {_RecordType("<326,328,8>",(v2)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (kExprCallRef) != "undefined") {_RecordType("<330,342,8>",(kExprCallRef)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (v2) != "undefined") {_RecordType("<344,346,8>",(v2)); Inst26++; } } catch(e) {}
  v1.addFunction('main', v2).addBody([kExprLocalGet, 0, kExprGlobalGet, v3, kGCPrefix, kExprRefCast, v2, kExprCallRef, v2]).exportFunc();
} catch (e) {}
try { if (Inst29 <= 1000 && typeof (v1.toModule) != "undefined") {_RecordType("<391,402,10>",(v1.toModule)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (v1) != "undefined") {_RecordType("<391,393,10>",(v1)); Inst30++; } } catch(e) {}
const v4 = v1.toModule();
try { if (Inst28 <= 1000 && typeof (v4) != "undefined") {_RecordType("<386,388,10>",(v4)); Inst28++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (f1) != "undefined") {_RecordType("<416,418,11>",(f1)); Inst31++; } } catch(e) {}
function f1(v18) {
try { if (Inst32 <= 1000 && typeof (v18) != "undefined") {_RecordType("<419,422,11>",(v18)); Inst32++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (v20) != "undefined") {_RecordType("<458,461,14>",(v20)); Inst34++; } } catch(e) {}
  try {
try { if (Inst33 <= 1000 && typeof (gc) != "undefined") {_RecordType("<440,442,13>",(gc)); Inst33++; } } catch(e) {}
    gc();
  } catch (v20) {}
}
try { if (Inst36 <= 1000 && typeof (WebAssembly.Function) != "undefined") {_RecordType("<485,505,16>",(WebAssembly.Function)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<485,496,16>",(WebAssembly)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (f1) != "undefined") {_RecordType("<556,558,19>",(f1)); Inst38++; } } catch(e) {}
const v5 = new WebAssembly.Function({
  parameters: ['i32'],
  results: ['i32']
}, f1);
try { if (Inst35 <= 1000 && typeof (v5) != "undefined") {_RecordType("<476,478,16>",(v5)); Inst35++; } } catch(e) {}
try { if (Inst40 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<575,595,20>",(WebAssembly.Instance)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<575,586,20>",(WebAssembly)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (v4) != "undefined") {_RecordType("<596,598,20>",(v4)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (v5) != "undefined") {_RecordType("<620,622,22>",(v5)); Inst43++; } } catch(e) {}
let v6 = new WebAssembly.Instance(v4, {
  m: {
    val: v5
  }
});
try { if (Inst39 <= 1000 && typeof (v6) != "undefined") {_RecordType("<566,568,20>",(v6)); Inst39++; } } catch(e) {}
try { if (Inst44 <= 1000 && typeof (v6.exports.main) != "undefined") {_RecordType("<634,649,25>",(v6.exports.main)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (v6.exports) != "undefined") {_RecordType("<634,644,25>",(v6.exports)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (v6) != "undefined") {_RecordType("<634,636,25>",(v6)); Inst46++; } } catch(e) {}
v6.exports.main(3);
try { if (Inst47 <= 1000 && typeof (v6.exports.main) != "undefined") {_RecordType("<655,670,26>",(v6.exports.main)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (v6.exports) != "undefined") {_RecordType("<655,665,26>",(v6.exports)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (v6) != "undefined") {_RecordType("<655,657,26>",(v6)); Inst49++; } } catch(e) {}
v6.exports.main(3);
//flags: --expose-gc --jit-fuzzing --wasm-staging
