var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
const v3 = [-1000000.0,-2.0];
try { if (Inst0 <= 1000 && typeof (v3) != "undefined") {_RecordType("<6,8,1>",(v3)); Inst0++; } } catch(e) {}
const v4 = [8.188669321360514e+307,-4.881277614076338,-2.220446049250313e-16,-1.0,-627963.0747312859,1000000000000.0];
try { if (Inst1 <= 1000 && typeof (v4) != "undefined") {_RecordType("<37,39,2>",(v4)); Inst1++; } } catch(e) {}
const v5 = [4.058042984306219];
try { if (Inst2 <= 1000 && typeof (v5) != "undefined") {_RecordType("<157,159,3>",(v5)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (v5) != "undefined") {_RecordType("<196,198,4>",(v5)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (v5) != "undefined") {_RecordType("<209,211,4>",(v5)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (v5) != "undefined") {_RecordType("<212,214,4>",(v5)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v5) != "undefined") {_RecordType("<215,217,4>",(v5)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (v3) != "undefined") {_RecordType("<218,220,4>",(v3)); Inst8++; } } catch(e) {}
const v6 = [v5,495541546,v5,v5,v5,v3];
try { if (Inst3 <= 1000 && typeof (v6) != "undefined") {_RecordType("<190,192,4>",(v6)); Inst3++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (v4) != "undefined") {_RecordType("<228,230,5>",(v4)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v4) != "undefined") {_RecordType("<231,233,5>",(v4)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (v6) != "undefined") {_RecordType("<235,237,5>",(v6)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (v3) != "undefined") {_RecordType("<238,240,5>",(v3)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (v4) != "undefined") {_RecordType("<241,243,5>",(v4)); Inst13++; } } catch(e) {}
[1,[v4,v4],v6,v3,v4];
try { if (Inst14 <= 1000 && typeof (Error) != "undefined") {_RecordType("<251,256,6>",(Error)); Inst14++; } } catch(e) {}
new Error();
try { if (Inst16 <= 1000 && typeof (Array) != "undefined") {_RecordType("<273,278,7>",(Array)); Inst16++; } } catch(e) {}
const v13 = Array(129);
try { if (Inst15 <= 1000 && typeof (v13) != "undefined") {_RecordType("<267,270,7>",(v13)); Inst15++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (F16) != "undefined") {_RecordType("<295,298,8>",(F16)); Inst17++; } } catch(e) {}
function F16() {
try { if (Inst18 <= 1000 && typeof (target) != "undefined") {_RecordType("<317,323,9>",(target)); Inst18++; } } catch(e) {}
    if (!new.target) { throw 'must be called with new'; }
try { if (Inst19 <= 1000 && typeof (f19) != "undefined") {_RecordType("<376,379,10>",(f19)); Inst19++; } } catch(e) {}
    function f19(a20, a21) {
try { if (Inst20 <= 1000 && typeof (a20) != "undefined") {_RecordType("<380,383,10>",(a20)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (a21) != "undefined") {_RecordType("<385,388,10>",(a21)); Inst21++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (a21) != "undefined") {_RecordType("<401,404,11>",(a21)); Inst22++; } } catch(e) {}
        a21++;
try { if (Inst23 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<421,433,12>",(Float64Array)); Inst23++; } } catch(e) {}
        new Float64Array(80911573);
try { if (Inst25 <= 1000 && typeof (a20) != "undefined") {_RecordType("<484,487,14>",(a20)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (a21) != "undefined") {_RecordType("<507,510,15>",(a21)); Inst26++; } } catch(e) {}
        const o26 = {
            ...a20,
            "c": a21,
        };
try { if (Inst24 <= 1000 && typeof (o26) != "undefined") {_RecordType("<460,463,13>",(o26)); Inst24++; } } catch(e) {}
try { if (Inst27 <= 1000 && typeof (o26) != "undefined") {_RecordType("<540,543,17>",(o26)); Inst27++; } } catch(e) {}
        return o26;
    }
try { if (Inst28 <= 1000 && typeof (f19) != "undefined") {_RecordType("<557,560,19>",(f19)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (f19) != "undefined") {_RecordType("<561,564,19>",(f19)); Inst29++; } } catch(e) {}
    f19(f19(255, 255));
try { if (Inst31 <= 1000 && typeof (f19) != "undefined") {_RecordType("<600,603,20>",(f19)); Inst31++; } } catch(e) {}
    class C29 extends f19 {
    }
try { if (Inst30 <= 1000 && typeof (C29) != "undefined") {_RecordType("<588,591,20>",(C29)); Inst30++; } } catch(e) {}
try { if (Inst32 <= 1000 && typeof (C29) != "undefined") {_RecordType("<622,625,22>",(C29)); Inst32++; } } catch(e) {}
    new C29();
}
try { if (Inst33 <= 1000 && typeof (F16) != "undefined") {_RecordType("<637,640,24>",(F16)); Inst33++; } } catch(e) {}
new F16();
try { if (Inst34 <= 1000 && typeof (v13.length) != "undefined") {_RecordType("<652,662,25>",(v13.length)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (v13) != "undefined") {_RecordType("<652,655,25>",(v13)); Inst35++; } } catch(e) {}
delete v13.length;
try { if (Inst37 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<681,691,26>",(Uint8Array)); Inst37++; } } catch(e) {}
const v35 = new Uint8Array(1570, 495541546, 1982187567);
try { if (Inst36 <= 1000 && typeof (v35) != "undefined") {_RecordType("<671,674,26>",(v35)); Inst36++; } } catch(e) {}
const o36 = {
};
try { if (Inst38 <= 1000 && typeof (o36) != "undefined") {_RecordType("<729,732,27>",(o36)); Inst38++; } } catch(e) {}
for (const v37 in v35) {
try { if (Inst39 <= 1000 && typeof (v37) != "undefined") {_RecordType("<753,756,29>",(v37)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (v35) != "undefined") {_RecordType("<760,763,29>",(v35)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (v37.anchor) != "undefined") {_RecordType("<784,794,30>",(v37.anchor)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (v37) != "undefined") {_RecordType("<784,787,30>",(v37)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (Array) != "undefined") {_RecordType("<795,800,30>",(Array)); Inst44++; } } catch(e) {}try { if (Inst45 <= 1000 && typeof (v35) != "undefined") {_RecordType("<802,805,30>",(v35)); Inst45++; } } catch(e) {}
    const v38 = v37.anchor(Array, v35);
try { if (Inst41 <= 1000 && typeof (v38) != "undefined") {_RecordType("<778,781,30>",(v38)); Inst41++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (v38) != "undefined") {_RecordType("<824,827,31>",(v38)); Inst48++; } } catch(e) {}
    o36[v38] = v38;
try { if (Inst46 <= 1000 && typeof (o36[v38]) != "undefined") {_RecordType("<813,821,31>",(o36[v38])); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (o36) != "undefined") {_RecordType("<813,816,31>",(o36)); Inst47++; } } catch(e) {}
}
try { if (Inst50 <= 1000 && typeof (o36) != "undefined") {_RecordType("<855,858,34>",(o36)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (v13) != "undefined") {_RecordType("<868,871,35>",(v13)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (o36) != "undefined") {_RecordType("<908,911,37>",(o36)); Inst52++; } } catch(e) {}
const o39 = {
    ...o36,
    ...v13,
    "g": true,
    [1073741823]: o36,
};
try { if (Inst49 <= 1000 && typeof (o39) != "undefined") {_RecordType("<839,842,33>",(o39)); Inst49++; } } catch(e) {}
// CRASH INFO
// ==========
// INSTANCE TAG: e855c14c
// TERMSIG: 6
// STDERR:
// #
// # Fatal error in ../../src/heap/mark-compact.cc, line 3665
// # Debug check failed: !InReadOnlySpace(value).
// #
// #
// #
// #FailureMessage Object: 0x7d9b5c65dc60
// ==== C stack trace ===============================
// 
//     ../v8/out/fuzzbuild/d8(___interceptor_backtrace+0x46) [0x5cb9123318c6]
//     ../v8/out/fuzzbuild/d8(v8::base::debug::StackTrace::StackTrace()+0x22) [0x5cb91275ff32]
//     ../v8/out/fuzzbuild/d8(+0x6138747) [0x5cb912758747]
//     ../v8/out/fuzzbuild/d8(V8_Fatal(char const*, int, char const*, ...)+0x346) [0x5cb91272ef8e]
//     ../v8/out/fuzzbuild/d8(+0x610d9ec) [0x5cb91272d9ec]
//     ../v8/out/fuzzbuild/d8(v8::internal::MarkCompactCollector::ClearNonTrivialWeakReferences()+0x9af) [0x5cb91400830f]
//     ../v8/out/fuzzbuild/d8(v8::internal::MarkCompactCollector::ClearNonLiveReferences()+0x47b2) [0x5cb913fd3fe2]
//     ../v8/out/fuzzbuild/d8(v8::internal::MarkCompactCollector::CollectGarbage()+0x8b) [0x5cb913fca4cb]
//     ../v8/out/fuzzbuild/d8(v8::internal::Heap::MarkCompact()+0x292) [0x5cb913c75e22]
//     ../v8/out/fuzzbuild/d8(v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::internal::GarbageCollectionReason, char const*)+0x12c4) [0x5cb913c73124]
//     ../v8/out/fuzzbuild/d8(+0x771f155) [0x5cb913d3f155]
//     ../v8/out/fuzzbuild/d8(+0x771e60c) [0x5cb913d3e60c]
//     ../v8/out/fuzzbuild/d8(+0xbdc28f3) [0x5cb9183e28f3]
// Received signal 6
// STDOUT:
// 
// FUZZER ARGS: .build/x86_64-unknown-linux-gnu/debug/FuzzilliCli --profile=v8 ../v8/out/fuzzbuild/d8 --jobs=32 --engine=multi --logLevel=verbose --timeout=1200 --storagePath=../v8_fuzzing_results --resume --exportStatistics --statisticsExportInterval=5 --diagnostics --tag=e855c14c
// TARGET ARGS: ../v8/out/fuzzbuild/d8 --expose-gc --omit-quit --allow-natives-syntax --fuzzing --jit-fuzzing --future --harmony --js-staging


