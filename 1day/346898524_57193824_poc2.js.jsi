var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}


const displayMediaOptions = {
  video: {
    displaySurface: "browser",
  },
  audio: {
    suppressLocalAudioPlayback: false,
  },
  preferCurrentTab: false,
  selfBrowserSurface: "exclude",
  systemAudio: "include",
  surfaceSwitching: "include",
  monitorTypeSurfaces: "include",
};
try { if (Inst0 <= 1000 && typeof (displayMediaOptions) != "undefined") {_RecordType("<10,29,3>",(displayMediaOptions)); Inst0++; } } catch(e) {}
try { if (Inst1 <= 1000 && typeof (startCapture) != "undefined") {_RecordType("<313,325,16>",(startCapture)); Inst1++; } } catch(e) {}
 function startCapture(displayMediaOptions) {
try { if (Inst2 <= 1000 && typeof (displayMediaOptions) != "undefined") {_RecordType("<326,345,16>",(displayMediaOptions)); Inst2++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (navigator.mediaDevices
    .getDisplayMedia(displayMediaOptions)
    .catch) != "undefined") {_RecordType("<359,436,17>",(navigator.mediaDevices
    .getDisplayMedia(displayMediaOptions)
    .catch)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (navigator.mediaDevices
    .getDisplayMedia) != "undefined") {_RecordType("<359,403,17>",(navigator.mediaDevices
    .getDisplayMedia)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (navigator.mediaDevices) != "undefined") {_RecordType("<359,381,17>",(navigator.mediaDevices)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (navigator) != "undefined") {_RecordType("<359,368,17>",(navigator)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (displayMediaOptions) != "undefined") {_RecordType("<404,423,18>",(displayMediaOptions)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (err) != "undefined") {_RecordType("<438,441,19>",(err)); Inst8++; } } catch(e) {}
  return navigator.mediaDevices
    .getDisplayMedia(displayMediaOptions)
    .catch((err) => {
try { if (Inst9 <= 1000 && typeof (console.error) != "undefined") {_RecordType("<455,468,20>",(console.error)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (console) != "undefined") {_RecordType("<455,462,20>",(console)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (err) != "undefined") {_RecordType("<469,472,20>",(err)); Inst11++; } } catch(e) {}
      console.error(err);
      return null;
    });
}
try { if (Inst12 <= 1000 && typeof (startCapture) != "undefined") {_RecordType("<508,520,24>",(startCapture)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (displayMediaOptions) != "undefined") {_RecordType("<521,540,24>",(displayMediaOptions)); Inst13++; } } catch(e) {}
startCapture(displayMediaOptions)

