var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
// Copyright 2024 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Flags: --future --no-liftoff --wasm-staging --no-wasm-loop-unrolling --no-wasm-loop-peeling

try { if (Inst0 <= 1000 && typeof (d8.file.execute) != "undefined") {_RecordType("<270,285,7>",(d8.file.execute)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (d8.file) != "undefined") {_RecordType("<270,277,7>",(d8.file)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (d8) != "undefined") {_RecordType("<270,272,7>",(d8)); Inst2++; } } catch(e) {}
d8.file.execute('test/mjsunit/wasm/wasm-module-builder.js');

try { if (Inst4 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<354,371,9>",(WasmModuleBuilder)); Inst4++; } } catch(e) {}
const builder = new WasmModuleBuilder();
try { if (Inst3 <= 1000 && typeof (builder) != "undefined") {_RecordType("<340,347,9>",(builder)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (builder.addType) != "undefined") {_RecordType("<398,413,10>",(builder.addType)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (builder) != "undefined") {_RecordType("<398,405,10>",(builder)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (makeSig) != "undefined") {_RecordType("<414,421,10>",(makeSig)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (kWasmExternRef) != "undefined") {_RecordType("<423,437,10>",(kWasmExternRef)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (kWasmExternRef) != "undefined") {_RecordType("<441,455,10>",(kWasmExternRef)); Inst10++; } } catch(e) {}
let externExternSig = builder.addType(makeSig([kWasmExternRef], [kWasmExternRef]));
try { if (Inst5 <= 1000 && typeof (externExternSig) != "undefined") {_RecordType("<380,395,10>",(externExternSig)); Inst5++; } } catch(e) {}
try { if (Inst12 <= 1000 && typeof (builder.addType) != "undefined") {_RecordType("<483,498,11>",(builder.addType)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (builder) != "undefined") {_RecordType("<483,490,11>",(builder)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (makeSig) != "undefined") {_RecordType("<499,506,11>",(makeSig)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (kWasmI32) != "undefined") {_RecordType("<508,516,11>",(kWasmI32)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (wasmRefType) != "undefined") {_RecordType("<520,531,11>",(wasmRefType)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (kWasmExternRef) != "undefined") {_RecordType("<532,546,11>",(kWasmExternRef)); Inst17++; } } catch(e) {}
let fromCharCodeSig = builder.addType(makeSig([kWasmI32], [wasmRefType(kWasmExternRef)]));
try { if (Inst11 <= 1000 && typeof (fromCharCodeSig) != "undefined") {_RecordType("<465,480,11>",(fromCharCodeSig)); Inst11++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (builder.addImport) != "undefined") {_RecordType("<573,590,12>",(builder.addImport)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (builder) != "undefined") {_RecordType("<573,580,12>",(builder)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (fromCharCodeSig) != "undefined") {_RecordType("<626,641,12>",(fromCharCodeSig)); Inst21++; } } catch(e) {}
let fromCodePoint = builder.addImport('wasm:js-string', 'fromCodePoint', fromCharCodeSig);
try { if (Inst18 <= 1000 && typeof (fromCodePoint) != "undefined") {_RecordType("<557,570,12>",(fromCodePoint)); Inst18++; } } catch(e) {}

try { if (Inst22 <= 1000 && typeof (builder.addFunction("main", makeSig([], []))
  .addLocals(kWasmI32, 1) // loop counter
  .addBody([
kExprI32Const, 5,
kExprLocalTee, 0,
kExprCallFunction, fromCodePoint,
kExprLoop, externExternSig,
  kExprDrop,
  kExprRefNull, kExternRefCode,
  kExprLocalGet, 0,
  kExprI32Const, 1,
  kExprI32Sub,
  kExprLocalTee, 0,
  kExprBrIf, 0,
kExprEnd,
kExprDrop,
]).exportFunc) != "undefined") {_RecordType("<647,1031,14>",(builder.addFunction("main", makeSig([], []))
  .addLocals(kWasmI32, 1) // loop counter
  .addBody([
kExprI32Const, 5,
kExprLocalTee, 0,
kExprCallFunction, fromCodePoint,
kExprLoop, externExternSig,
  kExprDrop,
  kExprRefNull, kExternRefCode,
  kExprLocalGet, 0,
  kExprI32Const, 1,
  kExprI32Sub,
  kExprLocalTee, 0,
  kExprBrIf, 0,
kExprEnd,
kExprDrop,
]).exportFunc)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (builder.addFunction("main", makeSig([], []))
  .addLocals(kWasmI32, 1) // loop counter
  .addBody) != "undefined") {_RecordType("<647,746,14>",(builder.addFunction("main", makeSig([], []))
  .addLocals(kWasmI32, 1) // loop counter
  .addBody)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (builder.addFunction("main", makeSig([], []))
  .addLocals) != "undefined") {_RecordType("<647,705,14>",(builder.addFunction("main", makeSig([], []))
  .addLocals)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<647,666,14>",(builder.addFunction)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (builder) != "undefined") {_RecordType("<647,654,14>",(builder)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (makeSig) != "undefined") {_RecordType("<675,682,14>",(makeSig)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (kWasmI32) != "undefined") {_RecordType("<706,714,15>",(kWasmI32)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<750,763,17>",(kExprI32Const)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (kExprLocalTee) != "undefined") {_RecordType("<769,782,18>",(kExprLocalTee)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (kExprCallFunction) != "undefined") {_RecordType("<788,805,19>",(kExprCallFunction)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (fromCodePoint) != "undefined") {_RecordType("<807,820,19>",(fromCodePoint)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (kExprLoop) != "undefined") {_RecordType("<823,832,20>",(kExprLoop)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (externExternSig) != "undefined") {_RecordType("<834,849,20>",(externExternSig)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (kExprDrop) != "undefined") {_RecordType("<854,863,21>",(kExprDrop)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (kExprRefNull) != "undefined") {_RecordType("<868,880,22>",(kExprRefNull)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (kExternRefCode) != "undefined") {_RecordType("<882,896,22>",(kExternRefCode)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (kExprLocalGet) != "undefined") {_RecordType("<901,914,23>",(kExprLocalGet)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<922,935,24>",(kExprI32Const)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (kExprI32Sub) != "undefined") {_RecordType("<943,954,25>",(kExprI32Sub)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (kExprLocalTee) != "undefined") {_RecordType("<959,972,26>",(kExprLocalTee)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (kExprBrIf) != "undefined") {_RecordType("<980,989,27>",(kExprBrIf)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (kExprEnd) != "undefined") {_RecordType("<995,1003,28>",(kExprEnd)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (kExprDrop) != "undefined") {_RecordType("<1006,1015,29>",(kExprDrop)); Inst44++; } } catch(e) {}
builder.addFunction("main", makeSig([], []))
  .addLocals(kWasmI32, 1) // loop counter
  .addBody([
kExprI32Const, 5,
kExprLocalTee, 0,
kExprCallFunction, fromCodePoint,
kExprLoop, externExternSig,
  kExprDrop,
  kExprRefNull, kExternRefCode,
  kExprLocalGet, 0,
  kExprI32Const, 1,
  kExprI32Sub,
  kExprLocalTee, 0,
  kExprBrIf, 0,
kExprEnd,
kExprDrop,
]).exportFunc();
let kBuiltins = { builtins: ["js-string"] };
try { if (Inst45 <= 1000 && typeof (kBuiltins) != "undefined") {_RecordType("<1040,1049,31>",(kBuiltins)); Inst45++; } } catch(e) {}
try { if (Inst47 <= 1000 && typeof (WebAssembly.Module) != "undefined") {_RecordType("<1104,1122,32>",(WebAssembly.Module)); Inst47++; } } catch(e) {}try { if (Inst48 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<1104,1115,32>",(WebAssembly)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (builder.toBuffer) != "undefined") {_RecordType("<1123,1139,32>",(builder.toBuffer)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (builder) != "undefined") {_RecordType("<1123,1130,32>",(builder)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (kBuiltins) != "undefined") {_RecordType("<1148,1157,32>",(kBuiltins)); Inst51++; } } catch(e) {}
let wasm_module = new WebAssembly.Module(builder.toBuffer(false), kBuiltins);
try { if (Inst46 <= 1000 && typeof (wasm_module) != "undefined") {_RecordType("<1086,1097,32>",(wasm_module)); Inst46++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<1182,1202,33>",(WebAssembly.Instance)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<1182,1193,33>",(WebAssembly)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (wasm_module) != "undefined") {_RecordType("<1203,1214,33>",(wasm_module)); Inst55++; } } catch(e) {}
const instance = new WebAssembly.Instance(wasm_module);
try { if (Inst52 <= 1000 && typeof (instance) != "undefined") {_RecordType("<1167,1175,33>",(instance)); Inst52++; } } catch(e) {}
try { if (Inst56 <= 1000 && typeof (instance.exports.main) != "undefined") {_RecordType("<1218,1239,34>",(instance.exports.main)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<1218,1234,34>",(instance.exports)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (instance) != "undefined") {_RecordType("<1218,1226,34>",(instance)); Inst58++; } } catch(e) {}
instance.exports.main();

