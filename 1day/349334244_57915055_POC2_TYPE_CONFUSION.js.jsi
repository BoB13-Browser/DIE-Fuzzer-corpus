var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
'use strict';
(function() {
  var popped;

  function trigger(new_target) {
try { if (Inst0 <= 1000 && typeof (popped) != "undefined") {_RecordType("<38,44,5>",(popped)); Inst0++; } } catch(e) {}
    function inner(new_target) {
      function constructor() {
        popped = Array.prototype.pop.call(array);
try { if (Inst1 <= 1000 && typeof (trigger) != "undefined") {_RecordType("<62,69,9>",(trigger)); Inst1++; } } catch(e) {}
      }
try { if (Inst2 <= 1000 && typeof (new_target) != "undefined") {_RecordType("<70,80,9>",(new_target)); Inst2++; } } catch(e) {}
      var temp = array[0];
try { if (Inst3 <= 1000 && typeof (inner) != "undefined") {_RecordType("<99,104,11>",(inner)); Inst3++; } } catch(e) {}
      return Reflect.construct(constructor, arguments, new_target);
try { if (Inst4 <= 1000 && typeof (new_target) != "undefined") {_RecordType("<105,115,11>",(new_target)); Inst4++; } } catch(e) {}
    }
try { if (Inst5 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<136,147,13>",(constructor)); Inst5++; } } catch(e) {}

    inner(new_target);
try { if (Inst7 <= 1000 && typeof (Array.prototype.pop.call) != "undefined") {_RecordType("<171,195,15>",(Array.prototype.pop.call)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Array.prototype.pop) != "undefined") {_RecordType("<171,190,15>",(Array.prototype.pop)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<171,186,15>",(Array.prototype)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (Array) != "undefined") {_RecordType("<171,176,15>",(Array)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (array) != "undefined") {_RecordType("<196,201,15>",(array)); Inst11++; } } catch(e) {}
  }
try { if (Inst6 <= 1000 && typeof (popped) != "undefined") {_RecordType("<162,168,15>",(popped)); Inst6++; } } catch(e) {}

  var array = new Array(0, 0, 0, 0, 0);

try { if (Inst13 <= 1000 && typeof (array[0]) != "undefined") {_RecordType("<233,241,19>",(array[0])); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (array) != "undefined") {_RecordType("<233,238,19>",(array)); Inst14++; } } catch(e) {}
  for (var i = 0; i < 20000; i++) {
try { if (Inst12 <= 1000 && typeof (temp) != "undefined") {_RecordType("<226,230,19>",(temp)); Inst12++; } } catch(e) {}
    trigger(function() { });
try { if (Inst15 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<258,275,21>",(Reflect.construct)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<258,265,21>",(Reflect)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (constructor) != "undefined") {_RecordType("<276,287,21>",(constructor)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<289,298,21>",(arguments)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (new_target) != "undefined") {_RecordType("<300,310,21>",(new_target)); Inst19++; } } catch(e) {}
    array.push(0);
  }

  var proxy = new Proxy(Object, {
    get: () => (array[4] = 1.1, Object.prototype)
  });
try { if (Inst20 <= 1000 && typeof (inner) != "undefined") {_RecordType("<330,335,27>",(inner)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (new_target) != "undefined") {_RecordType("<336,346,27>",(new_target)); Inst21++; } } catch(e) {}
 
  trigger(proxy);
  print(popped);
}());

