var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (d8.file.execute) != "undefined") {_RecordType("<0,15,1>",(d8.file.execute)); Inst0++; } } catch(e) {}try { if (Inst1 <= 1000 && typeof (d8.file) != "undefined") {_RecordType("<0,7,1>",(d8.file)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (d8) != "undefined") {_RecordType("<0,2,1>",(d8)); Inst2++; } } catch(e) {}
d8.file.execute('test/mjsunit/wasm/wasm-module-builder.js');
let builder = new WasmModuleBuilder();
try { if (Inst4 <= 1000 && typeof (WasmModuleBuilder) != "undefined") {_RecordType("<81,98,3>",(WasmModuleBuilder)); Inst4++; } } catch(e) {}
let struct_type = builder.addStruct([makeField(kWasmI32, true)]);
try { if (Inst3 <= 1000 && typeof (builder) != "undefined") {_RecordType("<67,74,3>",(builder)); Inst3++; } } catch(e) {}
builder.addFunction('MakeStruct', makeSig([], [kWasmExternRef])).exportFunc().addBody([kExprI32Const, 42, kGCPrefix, kExprStructNew, struct_type, kGCPrefix, kExprExternConvertAny]);
try { if (Inst6 <= 1000 && typeof (builder.addStruct) != "undefined") {_RecordType("<122,139,5>",(builder.addStruct)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (builder) != "undefined") {_RecordType("<122,129,5>",(builder)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (makeField) != "undefined") {_RecordType("<141,150,5>",(makeField)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (kWasmI32) != "undefined") {_RecordType("<151,159,5>",(kWasmI32)); Inst9++; } } catch(e) {}
let instance = builder.instantiate();
try { if (Inst5 <= 1000 && typeof (struct_type) != "undefined") {_RecordType("<108,119,5>",(struct_type)); Inst5++; } } catch(e) {}
globalThis.struct = instance.exports.MakeStruct();
try { if (Inst10 <= 1000 && typeof (builder.addFunction('MakeStruct', makeSig([], [kWasmExternRef])).exportFunc().addBody) != "undefined") {_RecordType("<172,257,7>",(builder.addFunction('MakeStruct', makeSig([], [kWasmExternRef])).exportFunc().addBody)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (builder.addFunction('MakeStruct', makeSig([], [kWasmExternRef])).exportFunc) != "undefined") {_RecordType("<172,247,7>",(builder.addFunction('MakeStruct', makeSig([], [kWasmExternRef])).exportFunc)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (builder.addFunction) != "undefined") {_RecordType("<172,191,7>",(builder.addFunction)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (builder) != "undefined") {_RecordType("<172,179,7>",(builder)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (makeSig) != "undefined") {_RecordType("<206,213,7>",(makeSig)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (kWasmExternRef) != "undefined") {_RecordType("<219,233,7>",(kWasmExternRef)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (kExprI32Const) != "undefined") {_RecordType("<259,272,7>",(kExprI32Const)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (kGCPrefix) != "undefined") {_RecordType("<278,287,7>",(kGCPrefix)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (kExprStructNew) != "undefined") {_RecordType("<289,303,7>",(kExprStructNew)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (struct_type) != "undefined") {_RecordType("<305,316,7>",(struct_type)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (kGCPrefix) != "undefined") {_RecordType("<318,327,7>",(kGCPrefix)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (kExprExternConvertAny) != "undefined") {_RecordType("<329,350,7>",(kExprExternConvertAny)); Inst21++; } } catch(e) {}
function foo(arg) {
  arg.prototype = globalThis.struct;
try { if (Inst23 <= 1000 && typeof (builder.instantiate) != "undefined") {_RecordType("<371,390,9>",(builder.instantiate)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (builder) != "undefined") {_RecordType("<371,378,9>",(builder)); Inst24++; } } catch(e) {}
  for (var i = 0; i < 5000; i++) {
try { if (Inst22 <= 1000 && typeof (instance) != "undefined") {_RecordType("<360,368,9>",(instance)); Inst22++; } } catch(e) {}
    new arg() instanceof arg;
try { if (Inst27 <= 1000 && typeof (instance.exports.MakeStruct) != "undefined") {_RecordType("<416,443,11>",(instance.exports.MakeStruct)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (instance.exports) != "undefined") {_RecordType("<416,432,11>",(instance.exports)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (instance) != "undefined") {_RecordType("<416,424,11>",(instance)); Inst29++; } } catch(e) {}
  }
try { if (Inst25 <= 1000 && typeof (globalThis.struct) != "undefined") {_RecordType("<396,413,11>",(globalThis.struct)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (globalThis) != "undefined") {_RecordType("<396,406,11>",(globalThis)); Inst26++; } } catch(e) {}
}
try { if (Inst30 <= 1000 && typeof (foo) != "undefined") {_RecordType("<458,461,13>",(foo)); Inst30++; } } catch(e) {}
foo(function () {});
try { if (Inst31 <= 1000 && typeof (arg) != "undefined") {_RecordType("<462,465,13>",(arg)); Inst31++; } } catch(e) {}

