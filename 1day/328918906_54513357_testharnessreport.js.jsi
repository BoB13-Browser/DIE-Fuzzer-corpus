var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
/* global add_completion_callback */
/* global setup */

/*
 * This file is intended for vendors to implement code needed to integrate
 * testharness.js tests with their own test systems.
 *
 * Typically test system integration will attach callbacks when each test has
 * run, using add_result_callback(callback(test)), or when the whole test file
 * has completed, using
 * add_completion_callback(callback(tests, harness_status)).
 *
 * For more documentation about the callback functions and the
 * parameters they are called with see testharness.js
 */

try { if (Inst0 <= 1000 && typeof (dump_test_results) != "undefined") {_RecordType("<583,600,17>",(dump_test_results)); Inst0++; } } catch(e) {}
function dump_test_results(tests, status) {
try { if (Inst1 <= 1000 && typeof (tests) != "undefined") {_RecordType("<601,606,17>",(tests)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (status) != "undefined") {_RecordType("<608,614,17>",(status)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (document.createElement) != "undefined") {_RecordType("<645,667,18>",(document.createElement)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (document) != "undefined") {_RecordType("<645,653,18>",(document)); Inst5++; } } catch(e) {}
    var results_element = document.createElement("script");
try { if (Inst3 <= 1000 && typeof (results_element) != "undefined") {_RecordType("<627,642,18>",(results_element)); Inst3++; } } catch(e) {}
    results_element.type = "text/json";
try { if (Inst6 <= 1000 && typeof (results_element.type) != "undefined") {_RecordType("<684,704,19>",(results_element.type)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (results_element) != "undefined") {_RecordType("<684,699,19>",(results_element)); Inst7++; } } catch(e) {}
    results_element.id = "__testharness__results__";
try { if (Inst8 <= 1000 && typeof (results_element.id) != "undefined") {_RecordType("<725,743,20>",(results_element.id)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (results_element) != "undefined") {_RecordType("<725,740,20>",(results_element)); Inst9++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (tests.map) != "undefined") {_RecordType("<798,807,21>",(tests.map)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (tests) != "undefined") {_RecordType("<798,803,21>",(tests)); Inst12++; } } catch(e) {}
    var test_results = tests.map(function(x) {
try { if (Inst13 <= 1000 && typeof (x) != "undefined") {_RecordType("<817,818,21>",(x)); Inst13++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (x.name) != "undefined") {_RecordType("<844,850,22>",(x.name)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (x) != "undefined") {_RecordType("<844,845,22>",(x)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (x.status) != "undefined") {_RecordType("<859,867,22>",(x.status)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (x) != "undefined") {_RecordType("<859,860,22>",(x)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (x.message) != "undefined") {_RecordType("<877,886,22>",(x.message)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (x) != "undefined") {_RecordType("<877,878,22>",(x)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (x.stack) != "undefined") {_RecordType("<894,901,22>",(x.stack)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (x) != "undefined") {_RecordType("<894,895,22>",(x)); Inst21++; } } catch(e) {}
        return {name:x.name, status:x.status, message:x.message, stack:x.stack}
    });
try { if (Inst10 <= 1000 && typeof (test_results) != "undefined") {_RecordType("<783,795,21>",(test_results)); Inst10++; } } catch(e) {}
try { if (Inst23 <= 1000 && typeof (window.location.href) != "undefined") {_RecordType("<934,954,24>",(window.location.href)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (window.location) != "undefined") {_RecordType("<934,949,24>",(window.location)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (window) != "undefined") {_RecordType("<934,940,24>",(window)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (test_results) != "undefined") {_RecordType("<979,991,25>",(test_results)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (status.status) != "undefined") {_RecordType("<1018,1031,26>",(status.status)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (status) != "undefined") {_RecordType("<1018,1024,26>",(status)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (status.message) != "undefined") {_RecordType("<1059,1073,27>",(status.message)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (status) != "undefined") {_RecordType("<1059,1065,27>",(status)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (status.stack) != "undefined") {_RecordType("<1099,1111,28>",(status.stack)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (status) != "undefined") {_RecordType("<1099,1105,28>",(status)); Inst32++; } } catch(e) {}
    var data = {test:window.location.href,
                tests:test_results,
                status: status.status,
                message: status.message,
                stack: status.stack};
try { if (Inst22 <= 1000 && typeof (data) != "undefined") {_RecordType("<921,925,24>",(data)); Inst22++; } } catch(e) {}
try { if (Inst35 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1149,1163,29>",(JSON.stringify)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1149,1153,29>",(JSON)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (data) != "undefined") {_RecordType("<1164,1168,29>",(data)); Inst37++; } } catch(e) {}
    results_element.textContent = JSON.stringify(data);
try { if (Inst33 <= 1000 && typeof (results_element.textContent) != "undefined") {_RecordType("<1119,1146,29>",(results_element.textContent)); Inst33++; } } catch(e) {}try { if (Inst34 <= 1000 && typeof (results_element) != "undefined") {_RecordType("<1119,1134,29>",(results_element)); Inst34++; } } catch(e) {}

    // To avoid a HierarchyRequestError with XML documents, ensure that 'results_element'
    // is inserted at a location that results in a valid document.
try { if (Inst39 <= 1000 && typeof (document.body) != "undefined") {_RecordType("<1350,1363,33>",(document.body)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (document) != "undefined") {_RecordType("<1350,1358,33>",(document)); Inst40++; } } catch(e) {}try { if (Inst41 <= 1000 && typeof (document.body) != "undefined") {_RecordType("<1375,1388,34>",(document.body)); Inst41++; } } catch(e) {}try { if (Inst42 <= 1000 && typeof (document) != "undefined") {_RecordType("<1375,1383,34>",(document)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (document.documentElement) != "undefined") {_RecordType("<1457,1481,35>",(document.documentElement)); Inst43++; } } catch(e) {}try { if (Inst44 <= 1000 && typeof (document) != "undefined") {_RecordType("<1457,1465,35>",(document)); Inst44++; } } catch(e) {}
    var parent = document.body
        ? document.body                 // <body> is required in XHTML documents
        : document.documentElement;     // fallback for optional <body> in HTML5, SVG, etc.
try { if (Inst38 <= 1000 && typeof (parent) != "undefined") {_RecordType("<1341,1347,33>",(parent)); Inst38++; } } catch(e) {}

try { if (Inst45 <= 1000 && typeof (parent.appendChild) != "undefined") {_RecordType("<1546,1564,37>",(parent.appendChild)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (parent) != "undefined") {_RecordType("<1546,1552,37>",(parent)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (results_element) != "undefined") {_RecordType("<1565,1580,37>",(results_element)); Inst47++; } } catch(e) {}
    parent.appendChild(results_element);
}

try { if (Inst48 <= 1000 && typeof (add_completion_callback) != "undefined") {_RecordType("<1589,1612,40>",(add_completion_callback)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (dump_test_results) != "undefined") {_RecordType("<1613,1630,40>",(dump_test_results)); Inst49++; } } catch(e) {}
add_completion_callback(dump_test_results);

/* If the parent window has a testharness_properties object,
 * we use this to provide the test settings. This is used by the
 * default in-browser runner to configure the timeout and the
 * rendering of results
 */
try { if (Inst62 <= 1000 && typeof (e) != "undefined") {_RecordType("<2269,2270,55>",(e)); Inst62++; } } catch(e) {}
try {
try { if (Inst50 <= 1000 && typeof (window.opener) != "undefined") {_RecordType("<1872,1885,48>",(window.opener)); Inst50++; } } catch(e) {}try { if (Inst51 <= 1000 && typeof (window) != "undefined") {_RecordType("<1872,1878,48>",(window)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (window.opener) != "undefined") {_RecordType("<1917,1930,48>",(window.opener)); Inst52++; } } catch(e) {}try { if (Inst53 <= 1000 && typeof (window) != "undefined") {_RecordType("<1917,1923,48>",(window)); Inst53++; } } catch(e) {}
    if (window.opener && "testharness_properties" in window.opener) {
        /* If we pass the testharness_properties object as-is here without
         * JSON stringifying and reparsing it, IE fails & emits the message
         * "Could not complete the operation due to error 80700019".
         */
try { if (Inst54 <= 1000 && typeof (setup) != "undefined") {_RecordType("<2179,2184,53>",(setup)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (JSON.parse) != "undefined") {_RecordType("<2185,2195,53>",(JSON.parse)); Inst55++; } } catch(e) {}try { if (Inst56 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2185,2189,53>",(JSON)); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<2196,2210,53>",(JSON.stringify)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<2196,2200,53>",(JSON)); Inst58++; } } catch(e) {}try { if (Inst59 <= 1000 && typeof (window.opener.testharness_properties) != "undefined") {_RecordType("<2211,2247,53>",(window.opener.testharness_properties)); Inst59++; } } catch(e) {}try { if (Inst60 <= 1000 && typeof (window.opener) != "undefined") {_RecordType("<2211,2224,53>",(window.opener)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (window) != "undefined") {_RecordType("<2211,2217,53>",(window)); Inst61++; } } catch(e) {}
        setup(JSON.parse(JSON.stringify(window.opener.testharness_properties)));
    }
} catch (e) {
}
// vim: set expandtab shiftwidth=4 tabstop=4:

