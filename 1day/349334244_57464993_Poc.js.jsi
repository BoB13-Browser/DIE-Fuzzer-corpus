var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
ITERATIONS = 10000;
try { if (Inst0 <= 1000 && typeof (ITERATIONS) != "undefined") {_RecordType("<0,10,1>",(ITERATIONS)); Inst0++; } } catch(e) {}
TRIGGER = false;
try { if (Inst1 <= 1000 && typeof (TRIGGER) != "undefined") {_RecordType("<21,28,2>",(TRIGGER)); Inst1++; } } catch(e) {}

try { if (Inst2 <= 1000 && typeof (f) != "undefined") {_RecordType("<50,51,4>",(f)); Inst2++; } } catch(e) {}
function f(a, p) {
try { if (Inst3 <= 1000 && typeof (a) != "undefined") {_RecordType("<52,53,4>",(a)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (p) != "undefined") {_RecordType("<55,56,4>",(p)); Inst4++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (a.pop) != "undefined") {_RecordType("<72,77,5>",(a.pop)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (a) != "undefined") {_RecordType("<72,73,5>",(a)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<78,95,5>",(Reflect.construct)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<78,85,5>",(Reflect)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<111,120,5>",(arguments)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (p) != "undefined") {_RecordType("<122,123,5>",(p)); Inst10++; } } catch(e) {}
    return a.pop(Reflect.construct(function() {}, arguments, p));
}

let a;
try { if (Inst11 <= 1000 && typeof (a) != "undefined") {_RecordType("<137,138,8>",(a)); Inst11++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<153,158,9>",(Proxy)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<159,165,9>",(Object)); Inst14++; } } catch(e) {}
let p = new Proxy(Object, {
    get: function() {
try { if (Inst15 <= 1000 && typeof (TRIGGER) != "undefined") {_RecordType("<205,212,11>",(TRIGGER)); Inst15++; } } catch(e) {}
        if (TRIGGER) {
            a[2] = 1.1;
try { if (Inst16 <= 1000 && typeof (a[2]) != "undefined") {_RecordType("<229,233,12>",(a[2])); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (a) != "undefined") {_RecordType("<229,230,12>",(a)); Inst17++; } } catch(e) {}
        }
try { if (Inst18 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<268,284,14>",(Object.prototype)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (Object) != "undefined") {_RecordType("<268,274,14>",(Object)); Inst19++; } } catch(e) {}
        return Object.prototype;
    }
});
try { if (Inst12 <= 1000 && typeof (p) != "undefined") {_RecordType("<145,146,9>",(p)); Inst12++; } } catch(e) {}
for (let i = 0; i < ITERATIONS; i++) {
try { if (Inst20 <= 1000 && typeof (i) != "undefined") {_RecordType("<308,309,17>",(i)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (i) != "undefined") {_RecordType("<315,316,17>",(i)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (ITERATIONS) != "undefined") {_RecordType("<319,329,17>",(ITERATIONS)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (i) != "undefined") {_RecordType("<331,332,17>",(i)); Inst23++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (i) != "undefined") {_RecordType("<365,366,18>",(i)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ITERATIONS) != "undefined") {_RecordType("<370,380,18>",(ITERATIONS)); Inst26++; } } catch(e) {}
    let isLastIteration = i == ITERATIONS - 1;
try { if (Inst24 <= 1000 && typeof (isLastIteration) != "undefined") {_RecordType("<347,362,18>",(isLastIteration)); Inst24++; } } catch(e) {}
    a = [0, 1, 2, 3, 4];
try { if (Inst27 <= 1000 && typeof (a) != "undefined") {_RecordType("<391,392,19>",(a)); Inst27++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (isLastIteration) != "undefined") {_RecordType("<421,436,20>",(isLastIteration)); Inst28++; } } catch(e) {}
    if (isLastIteration)
        TRIGGER = true;
try { if (Inst29 <= 1000 && typeof (TRIGGER) != "undefined") {_RecordType("<447,454,21>",(TRIGGER)); Inst29++; } } catch(e) {}
try { if (Inst30 <= 1000 && typeof (print) != "undefined") {_RecordType("<468,473,22>",(print)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (f) != "undefined") {_RecordType("<474,475,22>",(f)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (a) != "undefined") {_RecordType("<476,477,22>",(a)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (p) != "undefined") {_RecordType("<479,480,22>",(p)); Inst33++; } } catch(e) {}
    print(f(a, p));
}

