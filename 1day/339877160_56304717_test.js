const supportedInstruments = [{
  supportedMethods: "https://example.com/pay"
}];
const details = {
  total: {
    label: "Donation",
    amount: {
      currency: "USD",
      value: "65.00"
    }
  },
  displayItems: [{
    label: "Original donation amount",
    amount: {
      currency: "USD",
      value: "65.00"
    }
  }],
  shippingOptions: [{
    id: "standard",
    label: "Standard shipping",
    amount: {
      currency: "USD",
      value: "0.00"
    },
    selected: true
  }]
};
const options = {
  requestShipping: true
};

try {
  const request = new PaymentRequest(supportedInstruments, details, options);
} catch (e) {}

let credential = new PasswordCredential({
  id: "example-username",
  name: "Carina Anand",
  // In case of a login, the name comes from the server.
  password: "correct horse battery staple"
});
const publicKey = {
  challenge: new Uint8Array([21, 31, 105
  /* 29 more random bytes generated by the server */
  ]),
  rp: {
    name: "Fancy Bank"
  },
  user: {
    id: Uint8Array.from(window.atob("MIIBkzCCATigAwIBAjCCAZMwggE4oAMCAQIwggGTMII="), c => c.charCodeAt(0)),
    name: "442154430@qq.com",
    displayName: "lime"
  },
  pubKeyCredParams: [{
    type: "public-key",
    alg: -7 // "ES256"

  }, {
    type: "public-key",
    alg: -257 // "RS256"

  }],
  authenticatorSelection: {
    userVerification: "required",
    residentKey: "required",
    authenticatorAttachment: "platform"
  },
  timeout: 360000,
  // 6 minutes
  extensions: {
    "payment": {
      isPayment: true
    }
  }
};
navigator.credentials.create({
  publicKey
});