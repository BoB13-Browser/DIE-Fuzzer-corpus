var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
var Inst64 = 0;
var Inst65 = 0;
var Inst66 = 0;
var Inst67 = 0;
var Inst68 = 0;
var Inst69 = 0;
var Inst70 = 0;
var Inst71 = 0;
var Inst72 = 0;
var Inst73 = 0;
var Inst74 = 0;
var Inst75 = 0;
var Inst76 = 0;
var Inst77 = 0;
var Inst78 = 0;
var Inst79 = 0;
var Inst80 = 0;
var Inst81 = 0;
var Inst82 = 0;
var Inst83 = 0;
var Inst84 = 0;
var Inst85 = 0;
var Inst86 = 0;
var Inst87 = 0;
var Inst88 = 0;
var Inst89 = 0;
var Inst90 = 0;
var Inst91 = 0;
var Inst92 = 0;
var Inst93 = 0;
var Inst94 = 0;
var Inst95 = 0;
var Inst96 = 0;
var Inst97 = 0;
var Inst98 = 0;
var Inst99 = 0;
var Inst100 = 0;
var Inst101 = 0;
var Inst102 = 0;
var Inst103 = 0;
var Inst104 = 0;
var Inst105 = 0;
var Inst106 = 0;
var Inst107 = 0;
var Inst108 = 0;
var Inst109 = 0;
var Inst110 = 0;
var Inst111 = 0;
var Inst112 = 0;
var Inst113 = 0;
var Inst114 = 0;
var Inst115 = 0;
var Inst116 = 0;
var Inst117 = 0;
var Inst118 = 0;
var Inst119 = 0;
var Inst120 = 0;
var Inst121 = 0;
var Inst122 = 0;
var Inst123 = 0;
var Inst124 = 0;
var Inst125 = 0;
var Inst126 = 0;
var Inst127 = 0;
var Inst128 = 0;
var Inst129 = 0;
var Inst130 = 0;
var Inst131 = 0;
var Inst132 = 0;
var Inst133 = 0;
var Inst134 = 0;
var Inst135 = 0;
var Inst136 = 0;
var Inst137 = 0;
var Inst138 = 0;
var Inst139 = 0;
var Inst140 = 0;
var Inst141 = 0;
var Inst142 = 0;
var Inst143 = 0;
var Inst144 = 0;
var Inst145 = 0;
var Inst146 = 0;
var Inst147 = 0;
var Inst148 = 0;
var Inst149 = 0;
var Inst150 = 0;
var Inst151 = 0;
var Inst152 = 0;
var Inst153 = 0;
var Inst154 = 0;
var Inst155 = 0;
var Inst156 = 0;
var Inst157 = 0;
var Inst158 = 0;
var Inst159 = 0;
var Inst160 = 0;
var Inst161 = 0;
var Inst162 = 0;
var Inst163 = 0;
var Inst164 = 0;
var Inst165 = 0;
var Inst166 = 0;
var Inst167 = 0;
var Inst168 = 0;
var Inst169 = 0;
var Inst170 = 0;
var Inst171 = 0;
var Inst172 = 0;
var Inst173 = 0;
var Inst174 = 0;
var Inst175 = 0;
var Inst176 = 0;
var Inst177 = 0;
var Inst178 = 0;
var Inst179 = 0;
var Inst180 = 0;
var Inst181 = 0;
var Inst182 = 0;
var Inst183 = 0;
var Inst184 = 0;
var Inst185 = 0;
var Inst186 = 0;
var Inst187 = 0;
var Inst188 = 0;
var Inst189 = 0;
var Inst190 = 0;
var Inst191 = 0;
var Inst192 = 0;
var Inst193 = 0;
var Inst194 = 0;
var Inst195 = 0;
var Inst196 = 0;
var Inst197 = 0;
var Inst198 = 0;
var Inst199 = 0;
var Inst200 = 0;
var Inst201 = 0;
var Inst202 = 0;
var Inst203 = 0;
var Inst204 = 0;
var Inst205 = 0;
var Inst206 = 0;
var Inst207 = 0;
var Inst208 = 0;
var Inst209 = 0;
var Inst210 = 0;
var Inst211 = 0;
var Inst212 = 0;
var Inst213 = 0;
var Inst214 = 0;
var Inst215 = 0;
var Inst216 = 0;
var Inst217 = 0;
var Inst218 = 0;
var Inst219 = 0;
var Inst220 = 0;
var Inst221 = 0;
var Inst222 = 0;
var Inst223 = 0;
var Inst224 = 0;
var Inst225 = 0;
var Inst226 = 0;
var Inst227 = 0;
var Inst228 = 0;
var Inst229 = 0;
var Inst230 = 0;
var Inst231 = 0;
var Inst232 = 0;
var Inst233 = 0;
var Inst234 = 0;
var Inst235 = 0;
var Inst236 = 0;
var Inst237 = 0;
var Inst238 = 0;
var Inst239 = 0;
var Inst240 = 0;
var Inst241 = 0;
var Inst242 = 0;
var Inst243 = 0;
var Inst244 = 0;
var Inst245 = 0;
var Inst246 = 0;
var Inst247 = 0;
var Inst248 = 0;
var Inst249 = 0;
var Inst250 = 0;
var Inst251 = 0;
var Inst252 = 0;
var Inst253 = 0;
var Inst254 = 0;
var Inst255 = 0;
var Inst256 = 0;
var Inst257 = 0;
var Inst258 = 0;
var Inst259 = 0;
var Inst260 = 0;
var Inst261 = 0;
var Inst262 = 0;
var Inst263 = 0;
var Inst264 = 0;
var Inst265 = 0;
var Inst266 = 0;
var Inst267 = 0;
var Inst268 = 0;
var Inst269 = 0;
var Inst270 = 0;
var Inst271 = 0;
var Inst272 = 0;
var Inst273 = 0;
var Inst274 = 0;
var Inst275 = 0;
var Inst276 = 0;
var Inst277 = 0;
var Inst278 = 0;
var Inst279 = 0;
var Inst280 = 0;
var Inst281 = 0;
var Inst282 = 0;
var Inst283 = 0;
var Inst284 = 0;
var Inst285 = 0;
var Inst286 = 0;
var Inst287 = 0;
var Inst288 = 0;
var Inst289 = 0;
var Inst290 = 0;
var Inst291 = 0;
var Inst292 = 0;
var Inst293 = 0;
var Inst294 = 0;
var Inst295 = 0;
var Inst296 = 0;
var Inst297 = 0;
var Inst298 = 0;
var Inst299 = 0;
var Inst300 = 0;
var Inst301 = 0;
var Inst302 = 0;
var Inst303 = 0;
var Inst304 = 0;
var Inst305 = 0;
var Inst306 = 0;
var Inst307 = 0;
var Inst308 = 0;
var Inst309 = 0;
var Inst310 = 0;
var Inst311 = 0;
var Inst312 = 0;
var Inst313 = 0;
var Inst314 = 0;
var Inst315 = 0;
var Inst316 = 0;
var Inst317 = 0;
var Inst318 = 0;
var Inst319 = 0;
var Inst320 = 0;
var Inst321 = 0;
var Inst322 = 0;
var Inst323 = 0;
var Inst324 = 0;
var Inst325 = 0;
var Inst326 = 0;
var Inst327 = 0;
var Inst328 = 0;
var Inst329 = 0;
var Inst330 = 0;
var Inst331 = 0;
var Inst332 = 0;
var Inst333 = 0;
var Inst334 = 0;
var Inst335 = 0;
var Inst336 = 0;
var Inst337 = 0;
var Inst338 = 0;
var Inst339 = 0;
var Inst340 = 0;
var Inst341 = 0;
var Inst342 = 0;
var Inst343 = 0;
var Inst344 = 0;
var Inst345 = 0;
var Inst346 = 0;
var Inst347 = 0;
var Inst348 = 0;
var Inst349 = 0;
var Inst350 = 0;
var Inst351 = 0;
var Inst352 = 0;
var Inst353 = 0;
var Inst354 = 0;
var Inst355 = 0;
var Inst356 = 0;
var Inst357 = 0;
var Inst358 = 0;
var Inst359 = 0;
var Inst360 = 0;
var Inst361 = 0;
var Inst362 = 0;
var Inst363 = 0;
var Inst364 = 0;
var Inst365 = 0;
var Inst366 = 0;
var Inst367 = 0;
var Inst368 = 0;
var Inst369 = 0;
var Inst370 = 0;
var Inst371 = 0;
var Inst372 = 0;
var Inst373 = 0;
var Inst374 = 0;
var Inst375 = 0;
var Inst376 = 0;
var Inst377 = 0;
var Inst378 = 0;
var Inst379 = 0;
var Inst380 = 0;
var Inst381 = 0;
var Inst382 = 0;
var Inst383 = 0;
var Inst384 = 0;
var Inst385 = 0;
var Inst386 = 0;
var Inst387 = 0;
var Inst388 = 0;
var Inst389 = 0;
var Inst390 = 0;
var Inst391 = 0;
var Inst392 = 0;
var Inst393 = 0;
var Inst394 = 0;
var Inst395 = 0;
var Inst396 = 0;
var Inst397 = 0;
var Inst398 = 0;
var Inst399 = 0;
var Inst400 = 0;
var Inst401 = 0;
var Inst402 = 0;
var Inst403 = 0;
var Inst404 = 0;
var Inst405 = 0;
var Inst406 = 0;
var Inst407 = 0;
var Inst408 = 0;
var Inst409 = 0;
var Inst410 = 0;
var Inst411 = 0;
var Inst412 = 0;
var Inst413 = 0;
var Inst414 = 0;
var Inst415 = 0;
var Inst416 = 0;
var Inst417 = 0;
var Inst418 = 0;
var Inst419 = 0;
var Inst420 = 0;
var Inst421 = 0;
var Inst422 = 0;
var Inst423 = 0;
var Inst424 = 0;
var Inst425 = 0;
var Inst426 = 0;
var Inst427 = 0;
var Inst428 = 0;
var Inst429 = 0;
var Inst430 = 0;
var Inst431 = 0;
var Inst432 = 0;
var Inst433 = 0;
var Inst434 = 0;
var Inst435 = 0;
var Inst436 = 0;
var Inst437 = 0;
var Inst438 = 0;
var Inst439 = 0;
var Inst440 = 0;
var Inst441 = 0;
var Inst442 = 0;
var Inst443 = 0;
var Inst444 = 0;
var Inst445 = 0;
var Inst446 = 0;
var Inst447 = 0;
var Inst448 = 0;
var Inst449 = 0;
var Inst450 = 0;
var Inst451 = 0;
var Inst452 = 0;
var Inst453 = 0;
var Inst454 = 0;
var Inst455 = 0;
var Inst456 = 0;
var Inst457 = 0;
var Inst458 = 0;
var Inst459 = 0;
var Inst460 = 0;
var Inst461 = 0;
var Inst462 = 0;
var Inst463 = 0;
var Inst464 = 0;
var Inst465 = 0;
var Inst466 = 0;
var Inst467 = 0;
var Inst468 = 0;
var Inst469 = 0;
var Inst470 = 0;
var Inst471 = 0;
var Inst472 = 0;
var Inst473 = 0;
var Inst474 = 0;
var Inst475 = 0;
var Inst476 = 0;
var Inst477 = 0;
var Inst478 = 0;
var Inst479 = 0;
var Inst480 = 0;
var Inst481 = 0;
var Inst482 = 0;
var Inst483 = 0;
var Inst484 = 0;
var Inst485 = 0;
var Inst486 = 0;
var Inst487 = 0;
var Inst488 = 0;
var Inst489 = 0;
var Inst490 = 0;
var Inst491 = 0;
var Inst492 = 0;
var Inst493 = 0;
var Inst494 = 0;
var Inst495 = 0;
var Inst496 = 0;
var Inst497 = 0;
var Inst498 = 0;
var Inst499 = 0;
var Inst500 = 0;
var Inst501 = 0;
var Inst502 = 0;
var Inst503 = 0;
var Inst504 = 0;
var Inst505 = 0;
var Inst506 = 0;
var Inst507 = 0;
var Inst508 = 0;
var Inst509 = 0;
var Inst510 = 0;
var Inst511 = 0;
var Inst512 = 0;
var Inst513 = 0;
var Inst514 = 0;
var Inst515 = 0;
var Inst516 = 0;
var Inst517 = 0;
var Inst518 = 0;
var Inst519 = 0;
var Inst520 = 0;
var Inst521 = 0;
var Inst522 = 0;
var Inst523 = 0;
var Inst524 = 0;
var Inst525 = 0;
var Inst526 = 0;
var Inst527 = 0;
var Inst528 = 0;
var Inst529 = 0;
var Inst530 = 0;
var Inst531 = 0;
var Inst532 = 0;
var Inst533 = 0;
var Inst534 = 0;
var Inst535 = 0;
var Inst536 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

// If a sample with this instrumentation crashes, it may need the `fuzzilli` function to reproduce the crash.
try { if (Inst0 <= 1000 && typeof (fuzzilli) != "undefined") {_RecordType("<124,132,3>",(fuzzilli)); Inst0++; } } catch(e) {}
if (typeof fuzzilli === 'undefined') fuzzilli = function() {};
try { if (Inst1 <= 1000 && typeof (fuzzilli) != "undefined") {_RecordType("<150,158,3>",(fuzzilli)); Inst1++; } } catch(e) {}

const Probe = (function() {
    //
    // "Import" the common runtime-assisted mutator code. This will make various utility functions available.
    //
        // Note: runtime instrumentation code must generally assume that any operation performed on any object coming from the "outside", may raise an exception, for example due to triggering a Proxy trap.
    // Further, it must also assume that the environment has been modified arbitrarily. For example, the Array.prototype[@@iterator] may have been set to an invalid value, so using `for...of` syntax could trigger an exception.

    // Load all necessary routines and objects into local variables as they may be overwritten by the program.
    // We generally want to avoid triggerring observable side-effects, such as storing or loading
    // properties. For that reason, we prefer to use builtins like Object.defineProperty.

try { if (Inst4 <= 1000 && typeof (Proxy) != "undefined") {_RecordType("<1105,1110,16>",(Proxy)); Inst4++; } } catch(e) {}
    const ProxyConstructor = Proxy;
try { if (Inst3 <= 1000 && typeof (ProxyConstructor) != "undefined") {_RecordType("<1086,1102,16>",(ProxyConstructor)); Inst3++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (BigInt) != "undefined") {_RecordType("<1143,1149,17>",(BigInt)); Inst6++; } } catch(e) {}
    const BigIntConstructor = BigInt;
try { if (Inst5 <= 1000 && typeof (BigIntConstructor) != "undefined") {_RecordType("<1123,1140,17>",(BigIntConstructor)); Inst5++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (Set) != "undefined") {_RecordType("<1179,1182,18>",(Set)); Inst8++; } } catch(e) {}
    const SetConstructor = Set;
try { if (Inst7 <= 1000 && typeof (SetConstructor) != "undefined") {_RecordType("<1162,1176,18>",(SetConstructor)); Inst7++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (Object.prototype) != "undefined") {_RecordType("<1215,1231,20>",(Object.prototype)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1215,1221,20>",(Object)); Inst11++; } } catch(e) {}
    const ObjectPrototype = Object.prototype;
try { if (Inst9 <= 1000 && typeof (ObjectPrototype) != "undefined") {_RecordType("<1197,1212,20>",(ObjectPrototype)); Inst9++; } } catch(e) {}

try { if (Inst13 <= 1000 && typeof (Object.getOwnPropertyNames) != "undefined") {_RecordType("<1268,1294,22>",(Object.getOwnPropertyNames)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1268,1274,22>",(Object)); Inst14++; } } catch(e) {}
    const getOwnPropertyNames = Object.getOwnPropertyNames;
try { if (Inst12 <= 1000 && typeof (getOwnPropertyNames) != "undefined") {_RecordType("<1246,1265,22>",(getOwnPropertyNames)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (Object.getPrototypeOf) != "undefined") {_RecordType("<1324,1345,23>",(Object.getPrototypeOf)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1324,1330,23>",(Object)); Inst17++; } } catch(e) {}
    const getPrototypeOf = Object.getPrototypeOf;
try { if (Inst15 <= 1000 && typeof (getPrototypeOf) != "undefined") {_RecordType("<1307,1321,23>",(getPrototypeOf)); Inst15++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Object.setPrototypeOf) != "undefined") {_RecordType("<1375,1396,24>",(Object.setPrototypeOf)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1375,1381,24>",(Object)); Inst20++; } } catch(e) {}
    const setPrototypeOf = Object.setPrototypeOf;
try { if (Inst18 <= 1000 && typeof (setPrototypeOf) != "undefined") {_RecordType("<1358,1372,24>",(setPrototypeOf)); Inst18++; } } catch(e) {}
try { if (Inst22 <= 1000 && typeof (JSON.stringify) != "undefined") {_RecordType("<1421,1435,25>",(JSON.stringify)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (JSON) != "undefined") {_RecordType("<1421,1425,25>",(JSON)); Inst23++; } } catch(e) {}
    const stringify = JSON.stringify;
try { if (Inst21 <= 1000 && typeof (stringify) != "undefined") {_RecordType("<1409,1418,25>",(stringify)); Inst21++; } } catch(e) {}
try { if (Inst25 <= 1000 && typeof (Object.hasOwn) != "undefined") {_RecordType("<1465,1478,26>",(Object.hasOwn)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1465,1471,26>",(Object)); Inst26++; } } catch(e) {}
    const hasOwnProperty = Object.hasOwn;
try { if (Inst24 <= 1000 && typeof (hasOwnProperty) != "undefined") {_RecordType("<1448,1462,26>",(hasOwnProperty)); Inst24++; } } catch(e) {}
try { if (Inst28 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<1508,1529,27>",(Object.defineProperty)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1508,1514,27>",(Object)); Inst29++; } } catch(e) {}
    const defineProperty = Object.defineProperty;
try { if (Inst27 <= 1000 && typeof (defineProperty) != "undefined") {_RecordType("<1491,1505,27>",(defineProperty)); Inst27++; } } catch(e) {}
try { if (Inst31 <= 1000 && typeof (Object.values) != "undefined") {_RecordType("<1559,1572,28>",(Object.values)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<1559,1565,28>",(Object)); Inst32++; } } catch(e) {}
    const propertyValues = Object.values;
try { if (Inst30 <= 1000 && typeof (propertyValues) != "undefined") {_RecordType("<1542,1556,28>",(propertyValues)); Inst30++; } } catch(e) {}
try { if (Inst34 <= 1000 && typeof (parseInt) != "undefined") {_RecordType("<1600,1608,29>",(parseInt)); Inst34++; } } catch(e) {}
    const parseInteger = parseInt;
try { if (Inst33 <= 1000 && typeof (parseInteger) != "undefined") {_RecordType("<1585,1597,29>",(parseInteger)); Inst33++; } } catch(e) {}
try { if (Inst36 <= 1000 && typeof (Number.isInteger) != "undefined") {_RecordType("<1639,1655,30>",(Number.isInteger)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1639,1645,30>",(Number)); Inst37++; } } catch(e) {}
    const NumberIsInteger = Number.isInteger;
try { if (Inst35 <= 1000 && typeof (NumberIsInteger) != "undefined") {_RecordType("<1621,1636,30>",(NumberIsInteger)); Inst35++; } } catch(e) {}
try { if (Inst39 <= 1000 && typeof (Number.isNaN) != "undefined") {_RecordType("<1676,1688,31>",(Number.isNaN)); Inst39++; } } catch(e) {}try { if (Inst40 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1676,1682,31>",(Number)); Inst40++; } } catch(e) {}
    const isNaN = Number.isNaN;
try { if (Inst38 <= 1000 && typeof (isNaN) != "undefined") {_RecordType("<1668,1673,31>",(isNaN)); Inst38++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (Number.isFinite) != "undefined") {_RecordType("<1712,1727,32>",(Number.isFinite)); Inst42++; } } catch(e) {}try { if (Inst43 <= 1000 && typeof (Number) != "undefined") {_RecordType("<1712,1718,32>",(Number)); Inst43++; } } catch(e) {}
    const isFinite = Number.isFinite;
try { if (Inst41 <= 1000 && typeof (isFinite) != "undefined") {_RecordType("<1701,1709,32>",(isFinite)); Inst41++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (Math.trunc) != "undefined") {_RecordType("<1751,1761,33>",(Math.trunc)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Math) != "undefined") {_RecordType("<1751,1755,33>",(Math)); Inst46++; } } catch(e) {}
    const truncate = Math.trunc;
try { if (Inst44 <= 1000 && typeof (truncate) != "undefined") {_RecordType("<1740,1748,33>",(truncate)); Inst44++; } } catch(e) {}
try { if (Inst48 <= 1000 && typeof (Reflect.apply) != "undefined") {_RecordType("<1782,1795,34>",(Reflect.apply)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1782,1789,34>",(Reflect)); Inst49++; } } catch(e) {}
    const apply = Reflect.apply;
try { if (Inst47 <= 1000 && typeof (apply) != "undefined") {_RecordType("<1774,1779,34>",(apply)); Inst47++; } } catch(e) {}
try { if (Inst51 <= 1000 && typeof (Reflect.construct) != "undefined") {_RecordType("<1820,1837,35>",(Reflect.construct)); Inst51++; } } catch(e) {}try { if (Inst52 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1820,1827,35>",(Reflect)); Inst52++; } } catch(e) {}
    const construct = Reflect.construct;
try { if (Inst50 <= 1000 && typeof (construct) != "undefined") {_RecordType("<1808,1817,35>",(construct)); Inst50++; } } catch(e) {}
try { if (Inst54 <= 1000 && typeof (Reflect.get) != "undefined") {_RecordType("<1863,1874,36>",(Reflect.get)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1863,1870,36>",(Reflect)); Inst55++; } } catch(e) {}
    const ReflectGet = Reflect.get;
try { if (Inst53 <= 1000 && typeof (ReflectGet) != "undefined") {_RecordType("<1850,1860,36>",(ReflectGet)); Inst53++; } } catch(e) {}
try { if (Inst57 <= 1000 && typeof (Reflect.set) != "undefined") {_RecordType("<1900,1911,37>",(Reflect.set)); Inst57++; } } catch(e) {}try { if (Inst58 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1900,1907,37>",(Reflect)); Inst58++; } } catch(e) {}
    const ReflectSet = Reflect.set;
try { if (Inst56 <= 1000 && typeof (ReflectSet) != "undefined") {_RecordType("<1887,1897,37>",(ReflectSet)); Inst56++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (Reflect.has) != "undefined") {_RecordType("<1937,1948,38>",(Reflect.has)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (Reflect) != "undefined") {_RecordType("<1937,1944,38>",(Reflect)); Inst61++; } } catch(e) {}
    const ReflectHas = Reflect.has;
try { if (Inst59 <= 1000 && typeof (ReflectHas) != "undefined") {_RecordType("<1924,1934,38>",(ReflectHas)); Inst59++; } } catch(e) {}

    // Bind methods to local variables. These all expect the 'this' object as first parameter.
try { if (Inst63 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2068,2096,41>",(Function.prototype.call.bind)); Inst63++; } } catch(e) {}try { if (Inst64 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2068,2091,41>",(Function.prototype.call)); Inst64++; } } catch(e) {}try { if (Inst65 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2068,2086,41>",(Function.prototype)); Inst65++; } } catch(e) {}try { if (Inst66 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2068,2076,41>",(Function)); Inst66++; } } catch(e) {}try { if (Inst67 <= 1000 && typeof (Array.prototype.concat) != "undefined") {_RecordType("<2097,2119,41>",(Array.prototype.concat)); Inst67++; } } catch(e) {}try { if (Inst68 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2097,2112,41>",(Array.prototype)); Inst68++; } } catch(e) {}try { if (Inst69 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2097,2102,41>",(Array)); Inst69++; } } catch(e) {}
    const concat = Function.prototype.call.bind(Array.prototype.concat);
try { if (Inst62 <= 1000 && typeof (concat) != "undefined") {_RecordType("<2059,2065,41>",(concat)); Inst62++; } } catch(e) {}
try { if (Inst71 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2145,2173,42>",(Function.prototype.call.bind)); Inst71++; } } catch(e) {}try { if (Inst72 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2145,2168,42>",(Function.prototype.call)); Inst72++; } } catch(e) {}try { if (Inst73 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2145,2163,42>",(Function.prototype)); Inst73++; } } catch(e) {}try { if (Inst74 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2145,2153,42>",(Function)); Inst74++; } } catch(e) {}try { if (Inst75 <= 1000 && typeof (Array.prototype.findIndex) != "undefined") {_RecordType("<2174,2199,42>",(Array.prototype.findIndex)); Inst75++; } } catch(e) {}try { if (Inst76 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2174,2189,42>",(Array.prototype)); Inst76++; } } catch(e) {}try { if (Inst77 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2174,2179,42>",(Array)); Inst77++; } } catch(e) {}
    const findIndex = Function.prototype.call.bind(Array.prototype.findIndex);
try { if (Inst70 <= 1000 && typeof (findIndex) != "undefined") {_RecordType("<2133,2142,42>",(findIndex)); Inst70++; } } catch(e) {}
try { if (Inst79 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2224,2252,43>",(Function.prototype.call.bind)); Inst79++; } } catch(e) {}try { if (Inst80 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2224,2247,43>",(Function.prototype.call)); Inst80++; } } catch(e) {}try { if (Inst81 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2224,2242,43>",(Function.prototype)); Inst81++; } } catch(e) {}try { if (Inst82 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2224,2232,43>",(Function)); Inst82++; } } catch(e) {}try { if (Inst83 <= 1000 && typeof (Array.prototype.includes) != "undefined") {_RecordType("<2253,2277,43>",(Array.prototype.includes)); Inst83++; } } catch(e) {}try { if (Inst84 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2253,2268,43>",(Array.prototype)); Inst84++; } } catch(e) {}try { if (Inst85 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2253,2258,43>",(Array)); Inst85++; } } catch(e) {}
    const includes = Function.prototype.call.bind(Array.prototype.includes);
try { if (Inst78 <= 1000 && typeof (includes) != "undefined") {_RecordType("<2213,2221,43>",(includes)); Inst78++; } } catch(e) {}
try { if (Inst87 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2299,2327,44>",(Function.prototype.call.bind)); Inst87++; } } catch(e) {}try { if (Inst88 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2299,2322,44>",(Function.prototype.call)); Inst88++; } } catch(e) {}try { if (Inst89 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2299,2317,44>",(Function.prototype)); Inst89++; } } catch(e) {}try { if (Inst90 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2299,2307,44>",(Function)); Inst90++; } } catch(e) {}try { if (Inst91 <= 1000 && typeof (Array.prototype.shift) != "undefined") {_RecordType("<2328,2349,44>",(Array.prototype.shift)); Inst91++; } } catch(e) {}try { if (Inst92 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2328,2343,44>",(Array.prototype)); Inst92++; } } catch(e) {}try { if (Inst93 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2328,2333,44>",(Array)); Inst93++; } } catch(e) {}
    const shift = Function.prototype.call.bind(Array.prototype.shift);
try { if (Inst86 <= 1000 && typeof (shift) != "undefined") {_RecordType("<2291,2296,44>",(shift)); Inst86++; } } catch(e) {}
try { if (Inst95 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2369,2397,45>",(Function.prototype.call.bind)); Inst95++; } } catch(e) {}try { if (Inst96 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2369,2392,45>",(Function.prototype.call)); Inst96++; } } catch(e) {}try { if (Inst97 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2369,2387,45>",(Function.prototype)); Inst97++; } } catch(e) {}try { if (Inst98 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2369,2377,45>",(Function)); Inst98++; } } catch(e) {}try { if (Inst99 <= 1000 && typeof (Array.prototype.pop) != "undefined") {_RecordType("<2398,2417,45>",(Array.prototype.pop)); Inst99++; } } catch(e) {}try { if (Inst100 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2398,2413,45>",(Array.prototype)); Inst100++; } } catch(e) {}try { if (Inst101 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2398,2403,45>",(Array)); Inst101++; } } catch(e) {}
    const pop = Function.prototype.call.bind(Array.prototype.pop);
try { if (Inst94 <= 1000 && typeof (pop) != "undefined") {_RecordType("<2363,2366,45>",(pop)); Inst94++; } } catch(e) {}
try { if (Inst103 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2438,2466,46>",(Function.prototype.call.bind)); Inst103++; } } catch(e) {}try { if (Inst104 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2438,2461,46>",(Function.prototype.call)); Inst104++; } } catch(e) {}try { if (Inst105 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2438,2456,46>",(Function.prototype)); Inst105++; } } catch(e) {}try { if (Inst106 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2438,2446,46>",(Function)); Inst106++; } } catch(e) {}try { if (Inst107 <= 1000 && typeof (Array.prototype.push) != "undefined") {_RecordType("<2467,2487,46>",(Array.prototype.push)); Inst107++; } } catch(e) {}try { if (Inst108 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2467,2482,46>",(Array.prototype)); Inst108++; } } catch(e) {}try { if (Inst109 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2467,2472,46>",(Array)); Inst109++; } } catch(e) {}
    const push = Function.prototype.call.bind(Array.prototype.push);
try { if (Inst102 <= 1000 && typeof (push) != "undefined") {_RecordType("<2431,2435,46>",(push)); Inst102++; } } catch(e) {}
try { if (Inst111 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2510,2538,47>",(Function.prototype.call.bind)); Inst111++; } } catch(e) {}try { if (Inst112 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2510,2533,47>",(Function.prototype.call)); Inst112++; } } catch(e) {}try { if (Inst113 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2510,2528,47>",(Function.prototype)); Inst113++; } } catch(e) {}try { if (Inst114 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2510,2518,47>",(Function)); Inst114++; } } catch(e) {}try { if (Inst115 <= 1000 && typeof (Array.prototype.filter) != "undefined") {_RecordType("<2539,2561,47>",(Array.prototype.filter)); Inst115++; } } catch(e) {}try { if (Inst116 <= 1000 && typeof (Array.prototype) != "undefined") {_RecordType("<2539,2554,47>",(Array.prototype)); Inst116++; } } catch(e) {}try { if (Inst117 <= 1000 && typeof (Array) != "undefined") {_RecordType("<2539,2544,47>",(Array)); Inst117++; } } catch(e) {}
    const filter = Function.prototype.call.bind(Array.prototype.filter);
try { if (Inst110 <= 1000 && typeof (filter) != "undefined") {_RecordType("<2501,2507,47>",(filter)); Inst110++; } } catch(e) {}
try { if (Inst119 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2588,2616,48>",(Function.prototype.call.bind)); Inst119++; } } catch(e) {}try { if (Inst120 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2588,2611,48>",(Function.prototype.call)); Inst120++; } } catch(e) {}try { if (Inst121 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2588,2606,48>",(Function.prototype)); Inst121++; } } catch(e) {}try { if (Inst122 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2588,2596,48>",(Function)); Inst122++; } } catch(e) {}try { if (Inst123 <= 1000 && typeof (RegExp.prototype.exec) != "undefined") {_RecordType("<2617,2638,48>",(RegExp.prototype.exec)); Inst123++; } } catch(e) {}try { if (Inst124 <= 1000 && typeof (RegExp.prototype) != "undefined") {_RecordType("<2617,2633,48>",(RegExp.prototype)); Inst124++; } } catch(e) {}try { if (Inst125 <= 1000 && typeof (RegExp) != "undefined") {_RecordType("<2617,2623,48>",(RegExp)); Inst125++; } } catch(e) {}
    const execRegExp = Function.prototype.call.bind(RegExp.prototype.exec);
try { if (Inst118 <= 1000 && typeof (execRegExp) != "undefined") {_RecordType("<2575,2585,48>",(execRegExp)); Inst118++; } } catch(e) {}
try { if (Inst127 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2666,2694,49>",(Function.prototype.call.bind)); Inst127++; } } catch(e) {}try { if (Inst128 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2666,2689,49>",(Function.prototype.call)); Inst128++; } } catch(e) {}try { if (Inst129 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2666,2684,49>",(Function.prototype)); Inst129++; } } catch(e) {}try { if (Inst130 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2666,2674,49>",(Function)); Inst130++; } } catch(e) {}try { if (Inst131 <= 1000 && typeof (String.prototype.slice) != "undefined") {_RecordType("<2695,2717,49>",(String.prototype.slice)); Inst131++; } } catch(e) {}try { if (Inst132 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2695,2711,49>",(String.prototype)); Inst132++; } } catch(e) {}try { if (Inst133 <= 1000 && typeof (String) != "undefined") {_RecordType("<2695,2701,49>",(String)); Inst133++; } } catch(e) {}
    const stringSlice = Function.prototype.call.bind(String.prototype.slice);
try { if (Inst126 <= 1000 && typeof (stringSlice) != "undefined") {_RecordType("<2652,2663,49>",(stringSlice)); Inst126++; } } catch(e) {}
try { if (Inst135 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2745,2773,50>",(Function.prototype.call.bind)); Inst135++; } } catch(e) {}try { if (Inst136 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2745,2768,50>",(Function.prototype.call)); Inst136++; } } catch(e) {}try { if (Inst137 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2745,2763,50>",(Function.prototype)); Inst137++; } } catch(e) {}try { if (Inst138 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2745,2753,50>",(Function)); Inst138++; } } catch(e) {}try { if (Inst139 <= 1000 && typeof (String.prototype.toUpperCase) != "undefined") {_RecordType("<2774,2802,50>",(String.prototype.toUpperCase)); Inst139++; } } catch(e) {}try { if (Inst140 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<2774,2790,50>",(String.prototype)); Inst140++; } } catch(e) {}try { if (Inst141 <= 1000 && typeof (String) != "undefined") {_RecordType("<2774,2780,50>",(String)); Inst141++; } } catch(e) {}
    const toUpperCase = Function.prototype.call.bind(String.prototype.toUpperCase);
try { if (Inst134 <= 1000 && typeof (toUpperCase) != "undefined") {_RecordType("<2731,2742,50>",(toUpperCase)); Inst134++; } } catch(e) {}
try { if (Inst143 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2833,2861,51>",(Function.prototype.call.bind)); Inst143++; } } catch(e) {}try { if (Inst144 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2833,2856,51>",(Function.prototype.call)); Inst144++; } } catch(e) {}try { if (Inst145 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2833,2851,51>",(Function.prototype)); Inst145++; } } catch(e) {}try { if (Inst146 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2833,2841,51>",(Function)); Inst146++; } } catch(e) {}try { if (Inst147 <= 1000 && typeof (Number.prototype.toString) != "undefined") {_RecordType("<2862,2887,51>",(Number.prototype.toString)); Inst147++; } } catch(e) {}try { if (Inst148 <= 1000 && typeof (Number.prototype) != "undefined") {_RecordType("<2862,2878,51>",(Number.prototype)); Inst148++; } } catch(e) {}try { if (Inst149 <= 1000 && typeof (Number) != "undefined") {_RecordType("<2862,2868,51>",(Number)); Inst149++; } } catch(e) {}
    const numberToString = Function.prototype.call.bind(Number.prototype.toString);
try { if (Inst142 <= 1000 && typeof (numberToString) != "undefined") {_RecordType("<2816,2830,51>",(numberToString)); Inst142++; } } catch(e) {}
try { if (Inst151 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<2918,2946,52>",(Function.prototype.call.bind)); Inst151++; } } catch(e) {}try { if (Inst152 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<2918,2941,52>",(Function.prototype.call)); Inst152++; } } catch(e) {}try { if (Inst153 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<2918,2936,52>",(Function.prototype)); Inst153++; } } catch(e) {}try { if (Inst154 <= 1000 && typeof (Function) != "undefined") {_RecordType("<2918,2926,52>",(Function)); Inst154++; } } catch(e) {}try { if (Inst155 <= 1000 && typeof (BigInt.prototype.toString) != "undefined") {_RecordType("<2947,2972,52>",(BigInt.prototype.toString)); Inst155++; } } catch(e) {}try { if (Inst156 <= 1000 && typeof (BigInt.prototype) != "undefined") {_RecordType("<2947,2963,52>",(BigInt.prototype)); Inst156++; } } catch(e) {}try { if (Inst157 <= 1000 && typeof (BigInt) != "undefined") {_RecordType("<2947,2953,52>",(BigInt)); Inst157++; } } catch(e) {}
    const bigintToString = Function.prototype.call.bind(BigInt.prototype.toString);
try { if (Inst150 <= 1000 && typeof (bigintToString) != "undefined") {_RecordType("<2901,2915,52>",(bigintToString)); Inst150++; } } catch(e) {}
try { if (Inst159 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<3005,3033,53>",(Function.prototype.call.bind)); Inst159++; } } catch(e) {}try { if (Inst160 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<3005,3028,53>",(Function.prototype.call)); Inst160++; } } catch(e) {}try { if (Inst161 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<3005,3023,53>",(Function.prototype)); Inst161++; } } catch(e) {}try { if (Inst162 <= 1000 && typeof (Function) != "undefined") {_RecordType("<3005,3013,53>",(Function)); Inst162++; } } catch(e) {}try { if (Inst163 <= 1000 && typeof (String.prototype.startsWith) != "undefined") {_RecordType("<3034,3061,53>",(String.prototype.startsWith)); Inst163++; } } catch(e) {}try { if (Inst164 <= 1000 && typeof (String.prototype) != "undefined") {_RecordType("<3034,3050,53>",(String.prototype)); Inst164++; } } catch(e) {}try { if (Inst165 <= 1000 && typeof (String) != "undefined") {_RecordType("<3034,3040,53>",(String)); Inst165++; } } catch(e) {}
    const stringStartsWith = Function.prototype.call.bind(String.prototype.startsWith);
try { if (Inst158 <= 1000 && typeof (stringStartsWith) != "undefined") {_RecordType("<2986,3002,53>",(stringStartsWith)); Inst158++; } } catch(e) {}
try { if (Inst167 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<3084,3112,54>",(Function.prototype.call.bind)); Inst167++; } } catch(e) {}try { if (Inst168 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<3084,3107,54>",(Function.prototype.call)); Inst168++; } } catch(e) {}try { if (Inst169 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<3084,3102,54>",(Function.prototype)); Inst169++; } } catch(e) {}try { if (Inst170 <= 1000 && typeof (Function) != "undefined") {_RecordType("<3084,3092,54>",(Function)); Inst170++; } } catch(e) {}try { if (Inst171 <= 1000 && typeof (Set.prototype.add) != "undefined") {_RecordType("<3113,3130,54>",(Set.prototype.add)); Inst171++; } } catch(e) {}try { if (Inst172 <= 1000 && typeof (Set.prototype) != "undefined") {_RecordType("<3113,3126,54>",(Set.prototype)); Inst172++; } } catch(e) {}try { if (Inst173 <= 1000 && typeof (Set) != "undefined") {_RecordType("<3113,3116,54>",(Set)); Inst173++; } } catch(e) {}
    const setAdd = Function.prototype.call.bind(Set.prototype.add);
try { if (Inst166 <= 1000 && typeof (setAdd) != "undefined") {_RecordType("<3075,3081,54>",(setAdd)); Inst166++; } } catch(e) {}
try { if (Inst175 <= 1000 && typeof (Function.prototype.call.bind) != "undefined") {_RecordType("<3153,3181,55>",(Function.prototype.call.bind)); Inst175++; } } catch(e) {}try { if (Inst176 <= 1000 && typeof (Function.prototype.call) != "undefined") {_RecordType("<3153,3176,55>",(Function.prototype.call)); Inst176++; } } catch(e) {}try { if (Inst177 <= 1000 && typeof (Function.prototype) != "undefined") {_RecordType("<3153,3171,55>",(Function.prototype)); Inst177++; } } catch(e) {}try { if (Inst178 <= 1000 && typeof (Function) != "undefined") {_RecordType("<3153,3161,55>",(Function)); Inst178++; } } catch(e) {}try { if (Inst179 <= 1000 && typeof (Set.prototype.has) != "undefined") {_RecordType("<3182,3199,55>",(Set.prototype.has)); Inst179++; } } catch(e) {}try { if (Inst180 <= 1000 && typeof (Set.prototype) != "undefined") {_RecordType("<3182,3195,55>",(Set.prototype)); Inst180++; } } catch(e) {}try { if (Inst181 <= 1000 && typeof (Set) != "undefined") {_RecordType("<3182,3185,55>",(Set)); Inst181++; } } catch(e) {}
    const setHas = Function.prototype.call.bind(Set.prototype.has);
try { if (Inst174 <= 1000 && typeof (setHas) != "undefined") {_RecordType("<3144,3150,55>",(setHas)); Inst174++; } } catch(e) {}

try { if (Inst183 <= 1000 && typeof (Number.MIN_SAFE_INTEGER) != "undefined") {_RecordType("<3234,3257,57>",(Number.MIN_SAFE_INTEGER)); Inst183++; } } catch(e) {}try { if (Inst184 <= 1000 && typeof (Number) != "undefined") {_RecordType("<3234,3240,57>",(Number)); Inst184++; } } catch(e) {}
    const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER;
try { if (Inst182 <= 1000 && typeof (MIN_SAFE_INTEGER) != "undefined") {_RecordType("<3215,3231,57>",(MIN_SAFE_INTEGER)); Inst182++; } } catch(e) {}
try { if (Inst186 <= 1000 && typeof (Number.MAX_SAFE_INTEGER) != "undefined") {_RecordType("<3289,3312,58>",(Number.MAX_SAFE_INTEGER)); Inst186++; } } catch(e) {}try { if (Inst187 <= 1000 && typeof (Number) != "undefined") {_RecordType("<3289,3295,58>",(Number)); Inst187++; } } catch(e) {}
    const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER;
try { if (Inst185 <= 1000 && typeof (MAX_SAFE_INTEGER) != "undefined") {_RecordType("<3270,3286,58>",(MAX_SAFE_INTEGER)); Inst185++; } } catch(e) {}

    // Simple, seedable PRNG based on a LCG.
try { if (Inst189 <= 1000 && typeof (m) != "undefined") {_RecordType("<3388,3389,62>",(m)); Inst189++; } } catch(e) {}try { if (Inst190 <= 1000 && typeof (a) != "undefined") {_RecordType("<3410,3411,63>",(a)); Inst190++; } } catch(e) {}try { if (Inst191 <= 1000 && typeof (c) != "undefined") {_RecordType("<3432,3433,64>",(c)); Inst191++; } } catch(e) {}try { if (Inst192 <= 1000 && typeof (x) != "undefined") {_RecordType("<3457,3458,65>",(x)); Inst192++; } } catch(e) {}
    class RNG {
        m = 2 ** 32;
        a = 1664525;
        c = 1013904223;
        x;

        constructor(seed) {
try { if (Inst193 <= 1000 && typeof (seed) != "undefined") {_RecordType("<3483,3487,67>",(seed)); Inst193++; } } catch(e) {}
try { if (Inst195 <= 1000 && typeof (seed) != "undefined") {_RecordType("<3513,3517,68>",(seed)); Inst195++; } } catch(e) {}
            this.x = seed;
try { if (Inst194 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<3504,3510,68>",(this.x)); Inst194++; } } catch(e) {}
        }
        randomInt() {
try { if (Inst197 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<3576,3582,71>",(this.x)); Inst197++; } } catch(e) {}try { if (Inst198 <= 1000 && typeof (this.a) != "undefined") {_RecordType("<3585,3591,71>",(this.a)); Inst198++; } } catch(e) {}try { if (Inst199 <= 1000 && typeof (this.c) != "undefined") {_RecordType("<3594,3600,71>",(this.c)); Inst199++; } } catch(e) {}try { if (Inst200 <= 1000 && typeof (this.m) != "undefined") {_RecordType("<3604,3610,71>",(this.m)); Inst200++; } } catch(e) {}
            this.x = (this.x * this.a + this.c) % this.m;
try { if (Inst196 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<3566,3572,71>",(this.x)); Inst196++; } } catch(e) {}
try { if (Inst201 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<3630,3639,72>",(isInteger)); Inst201++; } } catch(e) {}try { if (Inst202 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<3640,3646,72>",(this.x)); Inst202++; } } catch(e) {}
            if (!isInteger(this.x)) throw "RNG state is not an Integer!"
try { if (Inst203 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<3706,3712,73>",(this.x)); Inst203++; } } catch(e) {}
            return this.x;
        }
        randomFloat() {
try { if (Inst204 <= 1000 && typeof (this.randomInt) != "undefined") {_RecordType("<3770,3784,76>",(this.randomInt)); Inst204++; } } catch(e) {}try { if (Inst205 <= 1000 && typeof (this.m) != "undefined") {_RecordType("<3789,3795,76>",(this.m)); Inst205++; } } catch(e) {}
            return this.randomInt() / this.m;
        }
        probability(p) {
try { if (Inst206 <= 1000 && typeof (p) != "undefined") {_RecordType("<3829,3830,78>",(p)); Inst206++; } } catch(e) {}
try { if (Inst207 <= 1000 && typeof (this.randomFloat) != "undefined") {_RecordType("<3854,3870,79>",(this.randomFloat)); Inst207++; } } catch(e) {}try { if (Inst208 <= 1000 && typeof (p) != "undefined") {_RecordType("<3875,3876,79>",(p)); Inst208++; } } catch(e) {}
            return this.randomFloat() < p;
        }
        reseed(seed) {
try { if (Inst209 <= 1000 && typeof (seed) != "undefined") {_RecordType("<3905,3909,81>",(seed)); Inst209++; } } catch(e) {}
try { if (Inst211 <= 1000 && typeof (seed) != "undefined") {_RecordType("<3935,3939,82>",(seed)); Inst211++; } } catch(e) {}
            this.x = seed;
try { if (Inst210 <= 1000 && typeof (this.x) != "undefined") {_RecordType("<3926,3932,82>",(this.x)); Inst210++; } } catch(e) {}
        }
    }
try { if (Inst188 <= 1000 && typeof (RNG) != "undefined") {_RecordType("<3373,3376,61>",(RNG)); Inst188++; } } catch(e) {}

    // When creating empty arrays to which elements are later added, use a custom array type that has a null prototype. This way, the arrays are not
    // affected by changes to the Array.prototype that could interfere with array builtins (e.g. indexed setters or a modified .constructor property).
try { if (Inst212 <= 1000 && typeof (EmptyArray) != "undefined") {_RecordType("<4277,4287,88>",(EmptyArray)); Inst212++; } } catch(e) {}
    function EmptyArray() {
        let array = [];
try { if (Inst213 <= 1000 && typeof (array) != "undefined") {_RecordType("<4305,4310,89>",(array)); Inst213++; } } catch(e) {}
try { if (Inst214 <= 1000 && typeof (setPrototypeOf) != "undefined") {_RecordType("<4326,4340,90>",(setPrototypeOf)); Inst214++; } } catch(e) {}try { if (Inst215 <= 1000 && typeof (array) != "undefined") {_RecordType("<4341,4346,90>",(array)); Inst215++; } } catch(e) {}
        setPrototypeOf(array, null);
try { if (Inst216 <= 1000 && typeof (array) != "undefined") {_RecordType("<4371,4376,91>",(array)); Inst216++; } } catch(e) {}
        return array;
    }

    //
    // Misc. helper functions.
    //
    // Type check helpers. These are less error-prone than manually using typeof and comparing against a string.
try { if (Inst217 <= 1000 && typeof (isObject) != "undefined") {_RecordType("<4563,4571,98>",(isObject)); Inst217++; } } catch(e) {}
    function isObject(v) {
try { if (Inst218 <= 1000 && typeof (v) != "undefined") {_RecordType("<4572,4573,98>",(v)); Inst218++; } } catch(e) {}
try { if (Inst219 <= 1000 && typeof (v) != "undefined") {_RecordType("<4600,4601,99>",(v)); Inst219++; } } catch(e) {}
        return typeof v === 'object';
    }
try { if (Inst220 <= 1000 && typeof (isFunction) != "undefined") {_RecordType("<4637,4647,101>",(isFunction)); Inst220++; } } catch(e) {}
    function isFunction(v) {
try { if (Inst221 <= 1000 && typeof (v) != "undefined") {_RecordType("<4648,4649,101>",(v)); Inst221++; } } catch(e) {}
try { if (Inst222 <= 1000 && typeof (v) != "undefined") {_RecordType("<4676,4677,102>",(v)); Inst222++; } } catch(e) {}
        return typeof v === 'function';
    }
try { if (Inst223 <= 1000 && typeof (isString) != "undefined") {_RecordType("<4715,4723,104>",(isString)); Inst223++; } } catch(e) {}
    function isString(v) {
try { if (Inst224 <= 1000 && typeof (v) != "undefined") {_RecordType("<4724,4725,104>",(v)); Inst224++; } } catch(e) {}
try { if (Inst225 <= 1000 && typeof (v) != "undefined") {_RecordType("<4752,4753,105>",(v)); Inst225++; } } catch(e) {}
        return typeof v === 'string';
    }
try { if (Inst226 <= 1000 && typeof (isNumber) != "undefined") {_RecordType("<4789,4797,107>",(isNumber)); Inst226++; } } catch(e) {}
    function isNumber(v) {
try { if (Inst227 <= 1000 && typeof (v) != "undefined") {_RecordType("<4798,4799,107>",(v)); Inst227++; } } catch(e) {}
try { if (Inst228 <= 1000 && typeof (v) != "undefined") {_RecordType("<4826,4827,108>",(v)); Inst228++; } } catch(e) {}
        return typeof v === 'number';
    }
try { if (Inst229 <= 1000 && typeof (isBigint) != "undefined") {_RecordType("<4863,4871,110>",(isBigint)); Inst229++; } } catch(e) {}
    function isBigint(v) {
try { if (Inst230 <= 1000 && typeof (v) != "undefined") {_RecordType("<4872,4873,110>",(v)); Inst230++; } } catch(e) {}
try { if (Inst231 <= 1000 && typeof (v) != "undefined") {_RecordType("<4900,4901,111>",(v)); Inst231++; } } catch(e) {}
        return typeof v === 'bigint';
    }
try { if (Inst232 <= 1000 && typeof (isSymbol) != "undefined") {_RecordType("<4937,4945,113>",(isSymbol)); Inst232++; } } catch(e) {}
    function isSymbol(v) {
try { if (Inst233 <= 1000 && typeof (v) != "undefined") {_RecordType("<4946,4947,113>",(v)); Inst233++; } } catch(e) {}
try { if (Inst234 <= 1000 && typeof (v) != "undefined") {_RecordType("<4974,4975,114>",(v)); Inst234++; } } catch(e) {}
        return typeof v === 'symbol';
    }
try { if (Inst235 <= 1000 && typeof (isBoolean) != "undefined") {_RecordType("<5011,5020,116>",(isBoolean)); Inst235++; } } catch(e) {}
    function isBoolean(v) {
try { if (Inst236 <= 1000 && typeof (v) != "undefined") {_RecordType("<5021,5022,116>",(v)); Inst236++; } } catch(e) {}
try { if (Inst237 <= 1000 && typeof (v) != "undefined") {_RecordType("<5049,5050,117>",(v)); Inst237++; } } catch(e) {}
        return typeof v === 'boolean';
    }
try { if (Inst238 <= 1000 && typeof (isUndefined) != "undefined") {_RecordType("<5087,5098,119>",(isUndefined)); Inst238++; } } catch(e) {}
    function isUndefined(v) {
try { if (Inst239 <= 1000 && typeof (v) != "undefined") {_RecordType("<5099,5100,119>",(v)); Inst239++; } } catch(e) {}
try { if (Inst240 <= 1000 && typeof (v) != "undefined") {_RecordType("<5127,5128,120>",(v)); Inst240++; } } catch(e) {}
        return typeof v === 'undefined';
    }

    // Helper function to determine if a value is an integer, and within [MIN_SAFE_INTEGER, MAX_SAFE_INTEGER].
try { if (Inst241 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<5281,5290,124>",(isInteger)); Inst241++; } } catch(e) {}
    function isInteger(n) {
try { if (Inst242 <= 1000 && typeof (n) != "undefined") {_RecordType("<5291,5292,124>",(n)); Inst242++; } } catch(e) {}
try { if (Inst243 <= 1000 && typeof (isNumber) != "undefined") {_RecordType("<5312,5320,125>",(isNumber)); Inst243++; } } catch(e) {}try { if (Inst244 <= 1000 && typeof (n) != "undefined") {_RecordType("<5321,5322,125>",(n)); Inst244++; } } catch(e) {}try { if (Inst245 <= 1000 && typeof (NumberIsInteger) != "undefined") {_RecordType("<5327,5342,125>",(NumberIsInteger)); Inst245++; } } catch(e) {}try { if (Inst246 <= 1000 && typeof (n) != "undefined") {_RecordType("<5343,5344,125>",(n)); Inst246++; } } catch(e) {}try { if (Inst247 <= 1000 && typeof (n) != "undefined") {_RecordType("<5349,5350,125>",(n)); Inst247++; } } catch(e) {}try { if (Inst248 <= 1000 && typeof (MIN_SAFE_INTEGER) != "undefined") {_RecordType("<5353,5369,125>",(MIN_SAFE_INTEGER)); Inst248++; } } catch(e) {}try { if (Inst249 <= 1000 && typeof (n) != "undefined") {_RecordType("<5373,5374,125>",(n)); Inst249++; } } catch(e) {}try { if (Inst250 <= 1000 && typeof (MAX_SAFE_INTEGER) != "undefined") {_RecordType("<5378,5394,125>",(MAX_SAFE_INTEGER)); Inst250++; } } catch(e) {}
        return isNumber(n) && NumberIsInteger(n) && n>= MIN_SAFE_INTEGER && n <= MAX_SAFE_INTEGER;
    }

    // Helper function to determine if a string is "simple". We only include simple strings for property/method names or string literals.
    // A simple string is basically a valid, property name with a maximum length.
    const simpleStringRegExp = /^[0-9a-zA-Z_$]+$/;
try { if (Inst251 <= 1000 && typeof (simpleStringRegExp) != "undefined") {_RecordType("<5638,5656,130>",(simpleStringRegExp)); Inst251++; } } catch(e) {}
try { if (Inst252 <= 1000 && typeof (isSimpleString) != "undefined") {_RecordType("<5693,5707,131>",(isSimpleString)); Inst252++; } } catch(e) {}
    function isSimpleString(s) {
try { if (Inst253 <= 1000 && typeof (s) != "undefined") {_RecordType("<5708,5709,131>",(s)); Inst253++; } } catch(e) {}
try { if (Inst254 <= 1000 && typeof (isString) != "undefined") {_RecordType("<5727,5735,132>",(isString)); Inst254++; } } catch(e) {}try { if (Inst255 <= 1000 && typeof (s) != "undefined") {_RecordType("<5736,5737,132>",(s)); Inst255++; } } catch(e) {}try { if (Inst256 <= 1000 && typeof (s) != "undefined") {_RecordType("<5790,5791,132>",(s)); Inst256++; } } catch(e) {}
        if (!isString(s)) throw "Non-string argument to isSimpleString: " + s;
try { if (Inst257 <= 1000 && typeof (s.length) != "undefined") {_RecordType("<5809,5817,133>",(s.length)); Inst257++; } } catch(e) {}try { if (Inst258 <= 1000 && typeof (s) != "undefined") {_RecordType("<5809,5810,133>",(s)); Inst258++; } } catch(e) {}try { if (Inst259 <= 1000 && typeof (execRegExp) != "undefined") {_RecordType("<5826,5836,133>",(execRegExp)); Inst259++; } } catch(e) {}try { if (Inst260 <= 1000 && typeof (simpleStringRegExp) != "undefined") {_RecordType("<5837,5855,133>",(simpleStringRegExp)); Inst260++; } } catch(e) {}try { if (Inst261 <= 1000 && typeof (s) != "undefined") {_RecordType("<5857,5858,133>",(s)); Inst261++; } } catch(e) {}
        return s.length < 50 && execRegExp(simpleStringRegExp, s) !== null;
    }

    // Helper function to determine if a string is numeric and its numeric value representable as an integer.
try { if (Inst262 <= 1000 && typeof (isNumericString) != "undefined") {_RecordType("<6004,6019,137>",(isNumericString)); Inst262++; } } catch(e) {}
    function isNumericString(s) {
try { if (Inst263 <= 1000 && typeof (s) != "undefined") {_RecordType("<6020,6021,137>",(s)); Inst263++; } } catch(e) {}
try { if (Inst264 <= 1000 && typeof (isString) != "undefined") {_RecordType("<6039,6047,138>",(isString)); Inst264++; } } catch(e) {}try { if (Inst265 <= 1000 && typeof (s) != "undefined") {_RecordType("<6048,6049,138>",(s)); Inst265++; } } catch(e) {}
        if (!isString(s)) return false;
try { if (Inst267 <= 1000 && typeof (parseInteger) != "undefined") {_RecordType("<6088,6100,139>",(parseInteger)); Inst267++; } } catch(e) {}try { if (Inst268 <= 1000 && typeof (s) != "undefined") {_RecordType("<6101,6102,139>",(s)); Inst268++; } } catch(e) {}
        let number = parseInteger(s);
try { if (Inst266 <= 1000 && typeof (number) != "undefined") {_RecordType("<6079,6085,139>",(number)); Inst266++; } } catch(e) {}
try { if (Inst269 <= 1000 && typeof (number) != "undefined") {_RecordType("<6121,6127,140>",(number)); Inst269++; } } catch(e) {}try { if (Inst270 <= 1000 && typeof (MIN_SAFE_INTEGER) != "undefined") {_RecordType("<6131,6147,140>",(MIN_SAFE_INTEGER)); Inst270++; } } catch(e) {}try { if (Inst271 <= 1000 && typeof (number) != "undefined") {_RecordType("<6151,6157,140>",(number)); Inst271++; } } catch(e) {}try { if (Inst272 <= 1000 && typeof (MAX_SAFE_INTEGER) != "undefined") {_RecordType("<6161,6177,140>",(MAX_SAFE_INTEGER)); Inst272++; } } catch(e) {}try { if (Inst273 <= 1000 && typeof (numberToString) != "undefined") {_RecordType("<6181,6195,140>",(numberToString)); Inst273++; } } catch(e) {}try { if (Inst274 <= 1000 && typeof (number) != "undefined") {_RecordType("<6196,6202,140>",(number)); Inst274++; } } catch(e) {}try { if (Inst275 <= 1000 && typeof (s) != "undefined") {_RecordType("<6208,6209,140>",(s)); Inst275++; } } catch(e) {}
        return number >= MIN_SAFE_INTEGER && number <= MAX_SAFE_INTEGER && numberToString(number) === s;
    }

    // Helper function to determine whether a property can be accessed without raising an exception.
try { if (Inst276 <= 1000 && typeof (tryAccessProperty) != "undefined") {_RecordType("<6336,6353,144>",(tryAccessProperty)); Inst276++; } } catch(e) {}
    function tryAccessProperty(prop, obj) {
try { if (Inst277 <= 1000 && typeof (prop) != "undefined") {_RecordType("<6354,6358,144>",(prop)); Inst277++; } } catch(e) {}try { if (Inst278 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6360,6363,144>",(obj)); Inst278++; } } catch(e) {}
try { if (Inst281 <= 1000 && typeof (e) != "undefined") {_RecordType("<6450,6451,148>",(e)); Inst281++; } } catch(e) {}
        try {
try { if (Inst279 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<6395,6404,146>",(obj[prop])); Inst279++; } } catch(e) {}try { if (Inst280 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6395,6398,146>",(obj)); Inst280++; } } catch(e) {}
            obj[prop];
            return true;
        } catch (e) {
            return false;
        }
    }

    // Helper function to determine if a property exists on an object or one of its prototypes. If an exception is raised, false is returned.
try { if (Inst282 <= 1000 && typeof (tryHasProperty) != "undefined") {_RecordType("<6659,6673,154>",(tryHasProperty)); Inst282++; } } catch(e) {}
    function tryHasProperty(prop, obj) {
try { if (Inst283 <= 1000 && typeof (prop) != "undefined") {_RecordType("<6674,6678,154>",(prop)); Inst283++; } } catch(e) {}try { if (Inst284 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6680,6683,154>",(obj)); Inst284++; } } catch(e) {}
try { if (Inst287 <= 1000 && typeof (e) != "undefined") {_RecordType("<6753,6754,157>",(e)); Inst287++; } } catch(e) {}
        try {
try { if (Inst285 <= 1000 && typeof (prop) != "undefined") {_RecordType("<6722,6726,156>",(prop)); Inst285++; } } catch(e) {}try { if (Inst286 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6730,6733,156>",(obj)); Inst286++; } } catch(e) {}
            return prop in obj;
        } catch (e) {
            return false;
        }
    }

    // Helper function to load a property from an object. If an exception is raised, undefined is returned.
try { if (Inst288 <= 1000 && typeof (tryGetProperty) != "undefined") {_RecordType("<6928,6942,163>",(tryGetProperty)); Inst288++; } } catch(e) {}
    function tryGetProperty(prop, obj) {
try { if (Inst289 <= 1000 && typeof (prop) != "undefined") {_RecordType("<6943,6947,163>",(prop)); Inst289++; } } catch(e) {}try { if (Inst290 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6949,6952,163>",(obj)); Inst290++; } } catch(e) {}
try { if (Inst293 <= 1000 && typeof (e) != "undefined") {_RecordType("<7020,7021,166>",(e)); Inst293++; } } catch(e) {}
        try {
try { if (Inst291 <= 1000 && typeof (obj[prop]) != "undefined") {_RecordType("<6991,7000,165>",(obj[prop])); Inst291++; } } catch(e) {}try { if (Inst292 <= 1000 && typeof (obj) != "undefined") {_RecordType("<6991,6994,165>",(obj)); Inst292++; } } catch(e) {}
            return obj[prop];
        } catch (e) {
try { if (Inst294 <= 1000 && typeof (undefined) != "undefined") {_RecordType("<7045,7054,167>",(undefined)); Inst294++; } } catch(e) {}
            return undefined;
        }
    }

    // Helper function to obtain the own properties of an object. If that raises an exception (e.g. on a Proxy object), an empty array is returned.
try { if (Inst295 <= 1000 && typeof (tryGetOwnPropertyNames) != "undefined") {_RecordType("<7239,7261,172>",(tryGetOwnPropertyNames)); Inst295++; } } catch(e) {}
    function tryGetOwnPropertyNames(obj) {
try { if (Inst296 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7262,7265,172>",(obj)); Inst296++; } } catch(e) {}
try { if (Inst299 <= 1000 && typeof (e) != "undefined") {_RecordType("<7348,7349,175>",(e)); Inst299++; } } catch(e) {}
        try {
try { if (Inst297 <= 1000 && typeof (getOwnPropertyNames) != "undefined") {_RecordType("<7304,7323,174>",(getOwnPropertyNames)); Inst297++; } } catch(e) {}try { if (Inst298 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7324,7327,174>",(obj)); Inst298++; } } catch(e) {}
            return getOwnPropertyNames(obj);
        } catch (e) {
try { if (Inst300 <= 1000 && typeof (Array) != "undefined") {_RecordType("<7377,7382,176>",(Array)); Inst300++; } } catch(e) {}
            return new Array();
        }
    }

    // Helper function to fetch the prototype of an object. If that raises an exception (e.g. on a Proxy object), null is returned.
try { if (Inst301 <= 1000 && typeof (tryGetPrototypeOf) != "undefined") {_RecordType("<7553,7570,181>",(tryGetPrototypeOf)); Inst301++; } } catch(e) {}
    function tryGetPrototypeOf(obj) {
try { if (Inst302 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7571,7574,181>",(obj)); Inst302++; } } catch(e) {}
try { if (Inst305 <= 1000 && typeof (e) != "undefined") {_RecordType("<7652,7653,184>",(e)); Inst305++; } } catch(e) {}
        try {
try { if (Inst303 <= 1000 && typeof (getPrototypeOf) != "undefined") {_RecordType("<7613,7627,183>",(getPrototypeOf)); Inst303++; } } catch(e) {}try { if (Inst304 <= 1000 && typeof (obj) != "undefined") {_RecordType("<7628,7631,183>",(obj)); Inst304++; } } catch(e) {}
            return getPrototypeOf(obj);
        } catch (e) {
            return null;
        }
    }

    // Helper function to that creates a wrapper function for the given function which will call it in a try-catch and return false on exception.
try { if (Inst306 <= 1000 && typeof (wrapInTryCatch) != "undefined") {_RecordType("<7864,7878,190>",(wrapInTryCatch)); Inst306++; } } catch(e) {}
    function wrapInTryCatch(f) {
try { if (Inst307 <= 1000 && typeof (f) != "undefined") {_RecordType("<7879,7880,190>",(f)); Inst307++; } } catch(e) {}
        return function() {
try { if (Inst311 <= 1000 && typeof (e) != "undefined") {_RecordType("<8005,8006,194>",(e)); Inst311++; } } catch(e) {}
            try {
try { if (Inst308 <= 1000 && typeof (apply) != "undefined") {_RecordType("<7956,7961,193>",(apply)); Inst308++; } } catch(e) {}try { if (Inst309 <= 1000 && typeof (f) != "undefined") {_RecordType("<7962,7963,193>",(f)); Inst309++; } } catch(e) {}try { if (Inst310 <= 1000 && typeof (arguments) != "undefined") {_RecordType("<7971,7980,193>",(arguments)); Inst310++; } } catch(e) {}
                return apply(f, this, arguments);
            } catch (e) {
                return false;
            }
        };
    }

    //
    // Basic random number generation utility functions.
    //

    // Initially the rng is seeded randomly, specific mutators can reseed() the rng if they need deterministic behavior.
    // See the explore operation in JsOperations.swift for an example.
try { if (Inst313 <= 1000 && typeof (RNG) != "undefined") {_RecordType("<8366,8369,206>",(RNG)); Inst313++; } } catch(e) {}try { if (Inst314 <= 1000 && typeof (truncate) != "undefined") {_RecordType("<8370,8378,206>",(truncate)); Inst314++; } } catch(e) {}try { if (Inst315 <= 1000 && typeof (Math.random) != "undefined") {_RecordType("<8379,8390,206>",(Math.random)); Inst315++; } } catch(e) {}try { if (Inst316 <= 1000 && typeof (Math) != "undefined") {_RecordType("<8379,8383,206>",(Math)); Inst316++; } } catch(e) {}
    let rng = new RNG(truncate(Math.random() * 2**32));
try { if (Inst312 <= 1000 && typeof (rng) != "undefined") {_RecordType("<8356,8359,206>",(rng)); Inst312++; } } catch(e) {}

try { if (Inst317 <= 1000 && typeof (probability) != "undefined") {_RecordType("<8420,8431,208>",(probability)); Inst317++; } } catch(e) {}
    function probability(p) {
try { if (Inst318 <= 1000 && typeof (p) != "undefined") {_RecordType("<8432,8433,208>",(p)); Inst318++; } } catch(e) {}
try { if (Inst319 <= 1000 && typeof (p) != "undefined") {_RecordType("<8450,8451,209>",(p)); Inst319++; } } catch(e) {}try { if (Inst320 <= 1000 && typeof (p) != "undefined") {_RecordType("<8459,8460,209>",(p)); Inst320++; } } catch(e) {}
        if (p < 0 || p > 1) throw "Argument to probability must be a number between zero and one";
try { if (Inst321 <= 1000 && typeof (rng.probability) != "undefined") {_RecordType("<8553,8568,210>",(rng.probability)); Inst321++; } } catch(e) {}try { if (Inst322 <= 1000 && typeof (rng) != "undefined") {_RecordType("<8553,8556,210>",(rng)); Inst322++; } } catch(e) {}try { if (Inst323 <= 1000 && typeof (p) != "undefined") {_RecordType("<8569,8570,210>",(p)); Inst323++; } } catch(e) {}
        return rng.probability(p);
    }

try { if (Inst324 <= 1000 && typeof (randomIntBetween) != "undefined") {_RecordType("<8596,8612,213>",(randomIntBetween)); Inst324++; } } catch(e) {}
    function randomIntBetween(start, end) {
try { if (Inst325 <= 1000 && typeof (start) != "undefined") {_RecordType("<8613,8618,213>",(start)); Inst325++; } } catch(e) {}try { if (Inst326 <= 1000 && typeof (end) != "undefined") {_RecordType("<8620,8623,213>",(end)); Inst326++; } } catch(e) {}
try { if (Inst327 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<8641,8650,214>",(isInteger)); Inst327++; } } catch(e) {}try { if (Inst328 <= 1000 && typeof (start) != "undefined") {_RecordType("<8651,8656,214>",(start)); Inst328++; } } catch(e) {}try { if (Inst329 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<8662,8671,214>",(isInteger)); Inst329++; } } catch(e) {}try { if (Inst330 <= 1000 && typeof (end) != "undefined") {_RecordType("<8672,8675,214>",(end)); Inst330++; } } catch(e) {}
        if (!isInteger(start) || !isInteger(end)) throw "Arguments to randomIntBetween must be integers";
try { if (Inst331 <= 1000 && typeof (rng.randomInt) != "undefined") {_RecordType("<8751,8764,215>",(rng.randomInt)); Inst331++; } } catch(e) {}try { if (Inst332 <= 1000 && typeof (rng) != "undefined") {_RecordType("<8751,8754,215>",(rng)); Inst332++; } } catch(e) {}try { if (Inst333 <= 1000 && typeof (end) != "undefined") {_RecordType("<8770,8773,215>",(end)); Inst333++; } } catch(e) {}try { if (Inst334 <= 1000 && typeof (start) != "undefined") {_RecordType("<8776,8781,215>",(start)); Inst334++; } } catch(e) {}try { if (Inst335 <= 1000 && typeof (start) != "undefined") {_RecordType("<8786,8791,215>",(start)); Inst335++; } } catch(e) {}
        return (rng.randomInt() % (end - start)) + start;
    }

try { if (Inst336 <= 1000 && typeof (randomFloat) != "undefined") {_RecordType("<8816,8827,218>",(randomFloat)); Inst336++; } } catch(e) {}
    function randomFloat() {
try { if (Inst337 <= 1000 && typeof (rng.randomFloat) != "undefined") {_RecordType("<8848,8863,219>",(rng.randomFloat)); Inst337++; } } catch(e) {}try { if (Inst338 <= 1000 && typeof (rng) != "undefined") {_RecordType("<8848,8851,219>",(rng)); Inst338++; } } catch(e) {}
        return rng.randomFloat();
    }

try { if (Inst339 <= 1000 && typeof (randomBigintBetween) != "undefined") {_RecordType("<8890,8909,222>",(randomBigintBetween)); Inst339++; } } catch(e) {}
    function randomBigintBetween(start, end) {
try { if (Inst340 <= 1000 && typeof (start) != "undefined") {_RecordType("<8910,8915,222>",(start)); Inst340++; } } catch(e) {}try { if (Inst341 <= 1000 && typeof (end) != "undefined") {_RecordType("<8917,8920,222>",(end)); Inst341++; } } catch(e) {}
try { if (Inst342 <= 1000 && typeof (isBigint) != "undefined") {_RecordType("<8938,8946,223>",(isBigint)); Inst342++; } } catch(e) {}try { if (Inst343 <= 1000 && typeof (start) != "undefined") {_RecordType("<8947,8952,223>",(start)); Inst343++; } } catch(e) {}try { if (Inst344 <= 1000 && typeof (isBigint) != "undefined") {_RecordType("<8958,8966,223>",(isBigint)); Inst344++; } } catch(e) {}try { if (Inst345 <= 1000 && typeof (end) != "undefined") {_RecordType("<8967,8970,223>",(end)); Inst345++; } } catch(e) {}
        if (!isBigint(start) || !isBigint(end)) throw "Arguments to randomBigintBetween must be bigints";
try { if (Inst346 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<9045,9054,224>",(isInteger)); Inst346++; } } catch(e) {}try { if (Inst347 <= 1000 && typeof (Number) != "undefined") {_RecordType("<9055,9061,224>",(Number)); Inst347++; } } catch(e) {}try { if (Inst348 <= 1000 && typeof (start) != "undefined") {_RecordType("<9062,9067,224>",(start)); Inst348++; } } catch(e) {}try { if (Inst349 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<9074,9083,224>",(isInteger)); Inst349++; } } catch(e) {}try { if (Inst350 <= 1000 && typeof (Number) != "undefined") {_RecordType("<9084,9090,224>",(Number)); Inst350++; } } catch(e) {}try { if (Inst351 <= 1000 && typeof (end) != "undefined") {_RecordType("<9091,9094,224>",(end)); Inst351++; } } catch(e) {}
        if (!isInteger(Number(start)) || !isInteger(Number(end))) throw "Arguments to randomBigintBetween must be representable as regular intergers";
try { if (Inst352 <= 1000 && typeof (BigIntConstructor) != "undefined") {_RecordType("<9199,9216,225>",(BigIntConstructor)); Inst352++; } } catch(e) {}try { if (Inst353 <= 1000 && typeof (randomIntBetween) != "undefined") {_RecordType("<9217,9233,225>",(randomIntBetween)); Inst353++; } } catch(e) {}try { if (Inst354 <= 1000 && typeof (Number) != "undefined") {_RecordType("<9234,9240,225>",(Number)); Inst354++; } } catch(e) {}try { if (Inst355 <= 1000 && typeof (start) != "undefined") {_RecordType("<9241,9246,225>",(start)); Inst355++; } } catch(e) {}try { if (Inst356 <= 1000 && typeof (Number) != "undefined") {_RecordType("<9249,9255,225>",(Number)); Inst356++; } } catch(e) {}try { if (Inst357 <= 1000 && typeof (end) != "undefined") {_RecordType("<9256,9259,225>",(end)); Inst357++; } } catch(e) {}
        return BigIntConstructor(randomIntBetween(Number(start), Number(end)));
    }

try { if (Inst358 <= 1000 && typeof (randomIntBelow) != "undefined") {_RecordType("<9287,9301,228>",(randomIntBelow)); Inst358++; } } catch(e) {}
    function randomIntBelow(n) {
try { if (Inst359 <= 1000 && typeof (n) != "undefined") {_RecordType("<9302,9303,228>",(n)); Inst359++; } } catch(e) {}
try { if (Inst360 <= 1000 && typeof (isInteger) != "undefined") {_RecordType("<9321,9330,229>",(isInteger)); Inst360++; } } catch(e) {}try { if (Inst361 <= 1000 && typeof (n) != "undefined") {_RecordType("<9331,9332,229>",(n)); Inst361++; } } catch(e) {}
        if (!isInteger(n)) throw "Argument to randomIntBelow must be an integer";
try { if (Inst362 <= 1000 && typeof (rng.randomInt) != "undefined") {_RecordType("<9406,9419,230>",(rng.randomInt)); Inst362++; } } catch(e) {}try { if (Inst363 <= 1000 && typeof (rng) != "undefined") {_RecordType("<9406,9409,230>",(rng)); Inst363++; } } catch(e) {}try { if (Inst364 <= 1000 && typeof (n) != "undefined") {_RecordType("<9424,9425,230>",(n)); Inst364++; } } catch(e) {}
        return rng.randomInt() % n;
    }

try { if (Inst365 <= 1000 && typeof (randomElement) != "undefined") {_RecordType("<9450,9463,233>",(randomElement)); Inst365++; } } catch(e) {}
    function randomElement(array) {
try { if (Inst366 <= 1000 && typeof (array) != "undefined") {_RecordType("<9464,9469,233>",(array)); Inst366++; } } catch(e) {}
try { if (Inst367 <= 1000 && typeof (array[randomIntBelow(array.length)]) != "undefined") {_RecordType("<9489,9524,234>",(array[randomIntBelow(array.length)])); Inst367++; } } catch(e) {}try { if (Inst368 <= 1000 && typeof (array) != "undefined") {_RecordType("<9489,9494,234>",(array)); Inst368++; } } catch(e) {}try { if (Inst369 <= 1000 && typeof (randomIntBelow) != "undefined") {_RecordType("<9495,9509,234>",(randomIntBelow)); Inst369++; } } catch(e) {}try { if (Inst370 <= 1000 && typeof (array.length) != "undefined") {_RecordType("<9510,9522,234>",(array.length)); Inst370++; } } catch(e) {}try { if (Inst371 <= 1000 && typeof (array) != "undefined") {_RecordType("<9510,9515,234>",(array)); Inst371++; } } catch(e) {}
        return array[randomIntBelow(array.length)];
    }

    // Action constants.
    const PROPERTY_LOAD = "loads";
try { if (Inst372 <= 1000 && typeof (PROPERTY_LOAD) != "undefined") {_RecordType("<9572,9585,238>",(PROPERTY_LOAD)); Inst372++; } } catch(e) {}
    const PROPERTY_STORE = "stores";
try { if (Inst373 <= 1000 && typeof (PROPERTY_STORE) != "undefined") {_RecordType("<9608,9622,239>",(PROPERTY_STORE)); Inst373++; } } catch(e) {}

    // Property access outcomes.
    const PROPERTY_NOT_FOUND = 0;
try { if (Inst374 <= 1000 && typeof (PROPERTY_NOT_FOUND) != "undefined") {_RecordType("<9682,9700,242>",(PROPERTY_NOT_FOUND)); Inst374++; } } catch(e) {}
    const PROPERTY_FOUND = 1;
try { if (Inst375 <= 1000 && typeof (PROPERTY_FOUND) != "undefined") {_RecordType("<9717,9731,243>",(PROPERTY_FOUND)); Inst375++; } } catch(e) {}

    //
    // Result recording and reporting.
    //
    let results = { __proto__: null };
try { if (Inst376 <= 1000 && typeof (results) != "undefined") {_RecordType("<9804,9811,248>",(results)); Inst376++; } } catch(e) {}

try { if (Inst377 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<9851,9862,250>",(reportError)); Inst377++; } } catch(e) {}
    function reportError(msg) {
try { if (Inst378 <= 1000 && typeof (msg) != "undefined") {_RecordType("<9863,9866,250>",(msg)); Inst378++; } } catch(e) {}
try { if (Inst379 <= 1000 && typeof (fuzzilli) != "undefined") {_RecordType("<9879,9887,251>",(fuzzilli)); Inst379++; } } catch(e) {}try { if (Inst380 <= 1000 && typeof (msg) != "undefined") {_RecordType("<9926,9929,251>",(msg)); Inst380++; } } catch(e) {}
        fuzzilli('FUZZILLI_PRINT', 'PROBING_ERROR: ' + msg);
    }

try { if (Inst381 <= 1000 && typeof (reportResults) != "undefined") {_RecordType("<9955,9968,254>",(reportResults)); Inst381++; } } catch(e) {}
    function reportResults() {
try { if (Inst382 <= 1000 && typeof (fuzzilli) != "undefined") {_RecordType("<9982,9990,255>",(fuzzilli)); Inst382++; } } catch(e) {}try { if (Inst383 <= 1000 && typeof (stringify) != "undefined") {_RecordType("<10031,10040,255>",(stringify)); Inst383++; } } catch(e) {}try { if (Inst384 <= 1000 && typeof (results) != "undefined") {_RecordType("<10041,10048,255>",(results)); Inst384++; } } catch(e) {}
        fuzzilli('FUZZILLI_PRINT', 'PROBING_RESULTS: ' + stringify(results));
    }

    // Record a property action performed on a probe.
    // |target| is expected to be the original prototype of the probe object. It is used to determine whether the accessed property exists anywhere in the prototype chain of the probe.
try { if (Inst385 <= 1000 && typeof (recordAction) != "undefined") {_RecordType("<10316,10328,260>",(recordAction)); Inst385++; } } catch(e) {}
    function recordAction(action, id, target, key) {
try { if (Inst386 <= 1000 && typeof (action) != "undefined") {_RecordType("<10329,10335,260>",(action)); Inst386++; } } catch(e) {}try { if (Inst387 <= 1000 && typeof (id) != "undefined") {_RecordType("<10337,10339,260>",(id)); Inst387++; } } catch(e) {}try { if (Inst388 <= 1000 && typeof (target) != "undefined") {_RecordType("<10341,10347,260>",(target)); Inst388++; } } catch(e) {}try { if (Inst389 <= 1000 && typeof (key) != "undefined") {_RecordType("<10349,10352,260>",(key)); Inst389++; } } catch(e) {}
try { if (Inst391 <= 1000 && typeof (PROPERTY_NOT_FOUND) != "undefined") {_RecordType("<10379,10397,261>",(PROPERTY_NOT_FOUND)); Inst391++; } } catch(e) {}
        let outcome = PROPERTY_NOT_FOUND;
try { if (Inst390 <= 1000 && typeof (outcome) != "undefined") {_RecordType("<10369,10376,261>",(outcome)); Inst390++; } } catch(e) {}
try { if (Inst392 <= 1000 && typeof (ReflectHas) != "undefined") {_RecordType("<10412,10422,262>",(ReflectHas)); Inst392++; } } catch(e) {}try { if (Inst393 <= 1000 && typeof (target) != "undefined") {_RecordType("<10423,10429,262>",(target)); Inst393++; } } catch(e) {}try { if (Inst394 <= 1000 && typeof (key) != "undefined") {_RecordType("<10431,10434,262>",(key)); Inst394++; } } catch(e) {}
        if (ReflectHas(target, key)) {
try { if (Inst396 <= 1000 && typeof (PROPERTY_FOUND) != "undefined") {_RecordType("<10462,10476,263>",(PROPERTY_FOUND)); Inst396++; } } catch(e) {}
            outcome = PROPERTY_FOUND;
try { if (Inst395 <= 1000 && typeof (outcome) != "undefined") {_RecordType("<10452,10459,263>",(outcome)); Inst395++; } } catch(e) {}
        }

try { if (Inst398 <= 1000 && typeof (key) != "undefined") {_RecordType("<10516,10519,266>",(key)); Inst398++; } } catch(e) {}
        let keyString = key;
try { if (Inst397 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<10504,10513,266>",(keyString)); Inst397++; } } catch(e) {}
try { if (Inst399 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<10541,10550,267>",(keyString)); Inst399++; } } catch(e) {}
        if (typeof keyString !== 'string') {
try { if (Inst404 <= 1000 && typeof (e) != "undefined") {_RecordType("<10726,10727,271>",(e)); Inst404++; } } catch(e) {}
            try {
try { if (Inst401 <= 1000 && typeof (key.toString) != "undefined") {_RecordType("<10615,10627,269>",(key.toString)); Inst401++; } } catch(e) {}try { if (Inst402 <= 1000 && typeof (key) != "undefined") {_RecordType("<10615,10618,269>",(key)); Inst402++; } } catch(e) {}
                keyString = key.toString();
try { if (Inst400 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<10603,10612,269>",(keyString)); Inst400++; } } catch(e) {}
try { if (Inst403 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<10659,10668,270>",(keyString)); Inst403++; } } catch(e) {}
                if (typeof keyString !== 'string') throw 'not a string';
            } catch(e) {
                // Got some "weird" property key. Ignore it.
                return;
            }
        }

try { if (Inst405 <= 1000 && typeof (isSimpleString) != "undefined") {_RecordType("<10860,10874,277>",(isSimpleString)); Inst405++; } } catch(e) {}try { if (Inst406 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<10875,10884,277>",(keyString)); Inst406++; } } catch(e) {}try { if (Inst407 <= 1000 && typeof (isNumericString) != "undefined") {_RecordType("<10890,10905,277>",(isNumericString)); Inst407++; } } catch(e) {}try { if (Inst408 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<10906,10915,277>",(keyString)); Inst408++; } } catch(e) {}try { if (Inst409 <= 1000 && typeof (isSymbol) != "undefined") {_RecordType("<10921,10929,277>",(isSymbol)); Inst409++; } } catch(e) {}try { if (Inst410 <= 1000 && typeof (key) != "undefined") {_RecordType("<10930,10933,277>",(key)); Inst410++; } } catch(e) {}
        if (!isSimpleString(keyString) && !isNumericString(keyString) && !isSymbol(key)) {
            // Cannot deal with this property name. Ignore it.
            return;
        }

try { if (Inst411 <= 1000 && typeof (isSymbol) != "undefined") {_RecordType("<11049,11057,282>",(isSymbol)); Inst411++; } } catch(e) {}try { if (Inst412 <= 1000 && typeof (key) != "undefined") {_RecordType("<11058,11061,282>",(key)); Inst412++; } } catch(e) {}try { if (Inst413 <= 1000 && typeof (stringStartsWith) != "undefined") {_RecordType("<11067,11083,282>",(stringStartsWith)); Inst413++; } } catch(e) {}try { if (Inst414 <= 1000 && typeof (keyString) != "undefined") {_RecordType("<11084,11093,282>",(keyString)); Inst414++; } } catch(e) {}
        if (isSymbol(key) && !stringStartsWith(keyString, 'Symbol(Symbol.')) {
            // We can only deal with well-known symbols (e.g. "Symbol(Symbol.toPrimitive)"), and this isn't one. Ignore it.
            return;
        }

try { if (Inst415 <= 1000 && typeof (hasOwnProperty) != "undefined") {_RecordType("<11289,11303,287>",(hasOwnProperty)); Inst415++; } } catch(e) {}try { if (Inst416 <= 1000 && typeof (results) != "undefined") {_RecordType("<11304,11311,287>",(results)); Inst416++; } } catch(e) {}try { if (Inst417 <= 1000 && typeof (id) != "undefined") {_RecordType("<11313,11315,287>",(id)); Inst417++; } } catch(e) {}
        if (!hasOwnProperty(results, id)) {
            results[id] = { [PROPERTY_LOAD]: { __proto__: null }, [PROPERTY_STORE]: { __proto__: null } };
try { if (Inst418 <= 1000 && typeof (results[id]) != "undefined") {_RecordType("<11333,11344,288>",(results[id])); Inst418++; } } catch(e) {}try { if (Inst419 <= 1000 && typeof (results) != "undefined") {_RecordType("<11333,11340,288>",(results)); Inst419++; } } catch(e) {}
        }

        // If the same action is performed on the same probe multiple times, we keep the last result.
try { if (Inst424 <= 1000 && typeof (outcome) != "undefined") {_RecordType("<11586,11593,292>",(outcome)); Inst424++; } } catch(e) {}
        results[id][action][keyString] = outcome;
try { if (Inst420 <= 1000 && typeof (results[id][action][keyString]) != "undefined") {_RecordType("<11553,11583,292>",(results[id][action][keyString])); Inst420++; } } catch(e) {}try { if (Inst421 <= 1000 && typeof (results[id][action]) != "undefined") {_RecordType("<11553,11572,292>",(results[id][action])); Inst421++; } } catch(e) {}try { if (Inst422 <= 1000 && typeof (results[id]) != "undefined") {_RecordType("<11553,11564,292>",(results[id])); Inst422++; } } catch(e) {}try { if (Inst423 <= 1000 && typeof (results) != "undefined") {_RecordType("<11553,11560,292>",(results)); Inst423++; } } catch(e) {}
    }

try { if (Inst425 <= 1000 && typeof (recordActionWithErrorHandling) != "undefined") {_RecordType("<11618,11647,295>",(recordActionWithErrorHandling)); Inst425++; } } catch(e) {}
    function recordActionWithErrorHandling(action, id, target, key) {
try { if (Inst426 <= 1000 && typeof (action) != "undefined") {_RecordType("<11648,11654,295>",(action)); Inst426++; } } catch(e) {}try { if (Inst427 <= 1000 && typeof (id) != "undefined") {_RecordType("<11656,11658,295>",(id)); Inst427++; } } catch(e) {}try { if (Inst428 <= 1000 && typeof (target) != "undefined") {_RecordType("<11660,11666,295>",(target)); Inst428++; } } catch(e) {}try { if (Inst429 <= 1000 && typeof (key) != "undefined") {_RecordType("<11668,11671,295>",(key)); Inst429++; } } catch(e) {}
try { if (Inst435 <= 1000 && typeof (e) != "undefined") {_RecordType("<11759,11760,298>",(e)); Inst435++; } } catch(e) {}
        try {
try { if (Inst430 <= 1000 && typeof (recordAction) != "undefined") {_RecordType("<11703,11715,297>",(recordAction)); Inst430++; } } catch(e) {}try { if (Inst431 <= 1000 && typeof (action) != "undefined") {_RecordType("<11716,11722,297>",(action)); Inst431++; } } catch(e) {}try { if (Inst432 <= 1000 && typeof (id) != "undefined") {_RecordType("<11724,11726,297>",(id)); Inst432++; } } catch(e) {}try { if (Inst433 <= 1000 && typeof (target) != "undefined") {_RecordType("<11728,11734,297>",(target)); Inst433++; } } catch(e) {}try { if (Inst434 <= 1000 && typeof (key) != "undefined") {_RecordType("<11736,11739,297>",(key)); Inst434++; } } catch(e) {}
            recordAction(action, id, target, key);
        } catch(e) {
try { if (Inst436 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<11777,11788,299>",(reportError)); Inst436++; } } catch(e) {}try { if (Inst437 <= 1000 && typeof (e) != "undefined") {_RecordType("<11789,11790,299>",(e)); Inst437++; } } catch(e) {}
            reportError(e);
        }
    }

    //
    // Probe implementation.
    //
try { if (Inst438 <= 1000 && typeof (probe) != "undefined") {_RecordType("<11873,11878,306>",(probe)); Inst438++; } } catch(e) {}
    function probe(id, value) {
try { if (Inst439 <= 1000 && typeof (id) != "undefined") {_RecordType("<11879,11881,306>",(id)); Inst439++; } } catch(e) {}try { if (Inst440 <= 1000 && typeof (value) != "undefined") {_RecordType("<11883,11888,306>",(value)); Inst440++; } } catch(e) {}
        let originalPrototype, newPrototype;
try { if (Inst441 <= 1000 && typeof (originalPrototype) != "undefined") {_RecordType("<11905,11922,307>",(originalPrototype)); Inst441++; } } catch(e) {}try { if (Inst442 <= 1000 && typeof (newPrototype) != "undefined") {_RecordType("<11924,11936,307>",(newPrototype)); Inst442++; } } catch(e) {}
try { if (Inst444 <= 1000 && typeof (get) != "undefined") {_RecordType("<11976,11979,309>",(get)); Inst444++; } } catch(e) {}try { if (Inst445 <= 1000 && typeof (target) != "undefined") {_RecordType("<11980,11986,309>",(target)); Inst445++; } } catch(e) {}try { if (Inst446 <= 1000 && typeof (key) != "undefined") {_RecordType("<11988,11991,309>",(key)); Inst446++; } } catch(e) {}try { if (Inst447 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<11993,12001,309>",(receiver)); Inst447++; } } catch(e) {}try { if (Inst466 <= 1000 && typeof (set) != "undefined") {_RecordType("<12891,12894,319>",(set)); Inst466++; } } catch(e) {}try { if (Inst467 <= 1000 && typeof (target) != "undefined") {_RecordType("<12895,12901,319>",(target)); Inst467++; } } catch(e) {}try { if (Inst468 <= 1000 && typeof (key) != "undefined") {_RecordType("<12903,12906,319>",(key)); Inst468++; } } catch(e) {}try { if (Inst469 <= 1000 && typeof (value) != "undefined") {_RecordType("<12908,12913,319>",(value)); Inst469++; } } catch(e) {}try { if (Inst470 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<12915,12923,319>",(receiver)); Inst470++; } } catch(e) {}try { if (Inst487 <= 1000 && typeof (has) != "undefined") {_RecordType("<13190,13193,324>",(has)); Inst487++; } } catch(e) {}try { if (Inst488 <= 1000 && typeof (target) != "undefined") {_RecordType("<13194,13200,324>",(target)); Inst488++; } } catch(e) {}try { if (Inst489 <= 1000 && typeof (key) != "undefined") {_RecordType("<13202,13205,324>",(key)); Inst489++; } } catch(e) {}
        let handler = {
            get(target, key, receiver) {
                // Special logic to deal with programs that fetch the prototype of an object after it was turned into a probe.
                // In that case, the probe Proxy would leak to the script, potentially causing incorrect behaviour. To deal with that,
                // we (1) return the original prototype when __proto__ is loaded (but this can be "bypassed" through Object.getPrototypeOf)
                // and (2) attempt to detect property accesses on the prototype itself (instead of on the probe) and handle those separately.
try { if (Inst448 <= 1000 && typeof (key) != "undefined") {_RecordType("<12574,12577,314>",(key)); Inst448++; } } catch(e) {}try { if (Inst449 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<12597,12605,314>",(receiver)); Inst449++; } } catch(e) {}try { if (Inst450 <= 1000 && typeof (value) != "undefined") {_RecordType("<12610,12615,314>",(value)); Inst450++; } } catch(e) {}try { if (Inst451 <= 1000 && typeof (originalPrototype) != "undefined") {_RecordType("<12624,12641,314>",(originalPrototype)); Inst451++; } } catch(e) {}
                if (key === '__proto__' && receiver === value) return originalPrototype;
try { if (Inst452 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<12664,12672,315>",(receiver)); Inst452++; } } catch(e) {}try { if (Inst453 <= 1000 && typeof (newPrototype) != "undefined") {_RecordType("<12677,12689,315>",(newPrototype)); Inst453++; } } catch(e) {}try { if (Inst454 <= 1000 && typeof (ReflectGet) != "undefined") {_RecordType("<12698,12708,315>",(ReflectGet)); Inst454++; } } catch(e) {}try { if (Inst455 <= 1000 && typeof (target) != "undefined") {_RecordType("<12709,12715,315>",(target)); Inst455++; } } catch(e) {}try { if (Inst456 <= 1000 && typeof (key) != "undefined") {_RecordType("<12717,12720,315>",(key)); Inst456++; } } catch(e) {}
                if (receiver === newPrototype) return ReflectGet(target, key);
try { if (Inst457 <= 1000 && typeof (recordActionWithErrorHandling) != "undefined") {_RecordType("<12740,12769,316>",(recordActionWithErrorHandling)); Inst457++; } } catch(e) {}try { if (Inst458 <= 1000 && typeof (PROPERTY_LOAD) != "undefined") {_RecordType("<12770,12783,316>",(PROPERTY_LOAD)); Inst458++; } } catch(e) {}try { if (Inst459 <= 1000 && typeof (id) != "undefined") {_RecordType("<12785,12787,316>",(id)); Inst459++; } } catch(e) {}try { if (Inst460 <= 1000 && typeof (target) != "undefined") {_RecordType("<12789,12795,316>",(target)); Inst460++; } } catch(e) {}try { if (Inst461 <= 1000 && typeof (key) != "undefined") {_RecordType("<12797,12800,316>",(key)); Inst461++; } } catch(e) {}
                recordActionWithErrorHandling(PROPERTY_LOAD, id, target, key);
try { if (Inst462 <= 1000 && typeof (ReflectGet) != "undefined") {_RecordType("<12827,12837,317>",(ReflectGet)); Inst462++; } } catch(e) {}try { if (Inst463 <= 1000 && typeof (target) != "undefined") {_RecordType("<12838,12844,317>",(target)); Inst463++; } } catch(e) {}try { if (Inst464 <= 1000 && typeof (key) != "undefined") {_RecordType("<12846,12849,317>",(key)); Inst464++; } } catch(e) {}try { if (Inst465 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<12851,12859,317>",(receiver)); Inst465++; } } catch(e) {}
                return ReflectGet(target, key, receiver);
            },
            set(target, key, value, receiver) {
try { if (Inst471 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<12948,12956,320>",(receiver)); Inst471++; } } catch(e) {}try { if (Inst472 <= 1000 && typeof (newPrototype) != "undefined") {_RecordType("<12961,12973,320>",(newPrototype)); Inst472++; } } catch(e) {}try { if (Inst473 <= 1000 && typeof (ReflectSet) != "undefined") {_RecordType("<12982,12992,320>",(ReflectSet)); Inst473++; } } catch(e) {}try { if (Inst474 <= 1000 && typeof (target) != "undefined") {_RecordType("<12993,12999,320>",(target)); Inst474++; } } catch(e) {}try { if (Inst475 <= 1000 && typeof (key) != "undefined") {_RecordType("<13001,13004,320>",(key)); Inst475++; } } catch(e) {}try { if (Inst476 <= 1000 && typeof (value) != "undefined") {_RecordType("<13006,13011,320>",(value)); Inst476++; } } catch(e) {}
                if (receiver === newPrototype) return ReflectSet(target, key, value);
try { if (Inst477 <= 1000 && typeof (recordActionWithErrorHandling) != "undefined") {_RecordType("<13031,13060,321>",(recordActionWithErrorHandling)); Inst477++; } } catch(e) {}try { if (Inst478 <= 1000 && typeof (PROPERTY_STORE) != "undefined") {_RecordType("<13061,13075,321>",(PROPERTY_STORE)); Inst478++; } } catch(e) {}try { if (Inst479 <= 1000 && typeof (id) != "undefined") {_RecordType("<13077,13079,321>",(id)); Inst479++; } } catch(e) {}try { if (Inst480 <= 1000 && typeof (target) != "undefined") {_RecordType("<13081,13087,321>",(target)); Inst480++; } } catch(e) {}try { if (Inst481 <= 1000 && typeof (key) != "undefined") {_RecordType("<13089,13092,321>",(key)); Inst481++; } } catch(e) {}
                recordActionWithErrorHandling(PROPERTY_STORE, id, target, key);
try { if (Inst482 <= 1000 && typeof (ReflectSet) != "undefined") {_RecordType("<13119,13129,322>",(ReflectSet)); Inst482++; } } catch(e) {}try { if (Inst483 <= 1000 && typeof (target) != "undefined") {_RecordType("<13130,13136,322>",(target)); Inst483++; } } catch(e) {}try { if (Inst484 <= 1000 && typeof (key) != "undefined") {_RecordType("<13138,13141,322>",(key)); Inst484++; } } catch(e) {}try { if (Inst485 <= 1000 && typeof (value) != "undefined") {_RecordType("<13143,13148,322>",(value)); Inst485++; } } catch(e) {}try { if (Inst486 <= 1000 && typeof (receiver) != "undefined") {_RecordType("<13150,13158,322>",(receiver)); Inst486++; } } catch(e) {}
                return ReflectSet(target, key, value, receiver);
            },
            has(target, key) {
                // Treat this as a load.
try { if (Inst490 <= 1000 && typeof (recordActionWithErrorHandling) != "undefined") {_RecordType("<13268,13297,326>",(recordActionWithErrorHandling)); Inst490++; } } catch(e) {}try { if (Inst491 <= 1000 && typeof (PROPERTY_LOAD) != "undefined") {_RecordType("<13298,13311,326>",(PROPERTY_LOAD)); Inst491++; } } catch(e) {}try { if (Inst492 <= 1000 && typeof (id) != "undefined") {_RecordType("<13313,13315,326>",(id)); Inst492++; } } catch(e) {}try { if (Inst493 <= 1000 && typeof (target) != "undefined") {_RecordType("<13317,13323,326>",(target)); Inst493++; } } catch(e) {}try { if (Inst494 <= 1000 && typeof (key) != "undefined") {_RecordType("<13325,13328,326>",(key)); Inst494++; } } catch(e) {}
                recordActionWithErrorHandling(PROPERTY_LOAD, id, target, key);
try { if (Inst495 <= 1000 && typeof (ReflectHas) != "undefined") {_RecordType("<13355,13365,327>",(ReflectHas)); Inst495++; } } catch(e) {}try { if (Inst496 <= 1000 && typeof (target) != "undefined") {_RecordType("<13366,13372,327>",(target)); Inst496++; } } catch(e) {}try { if (Inst497 <= 1000 && typeof (key) != "undefined") {_RecordType("<13374,13377,327>",(key)); Inst497++; } } catch(e) {}
                return ReflectHas(target, key);
            },
        };
try { if (Inst443 <= 1000 && typeof (handler) != "undefined") {_RecordType("<11951,11958,308>",(handler)); Inst443++; } } catch(e) {}

try { if (Inst508 <= 1000 && typeof (e) != "undefined") {_RecordType("<13777,13778,336>",(e)); Inst508++; } } catch(e) {}
        try {
            // This can fail, e.g. due to "Cannot convert undefined or null to object" or if the object is non-extensible. In that case, do nothing.
try { if (Inst499 <= 1000 && typeof (getPrototypeOf) != "undefined") {_RecordType("<13608,13622,333>",(getPrototypeOf)); Inst499++; } } catch(e) {}try { if (Inst500 <= 1000 && typeof (value) != "undefined") {_RecordType("<13623,13628,333>",(value)); Inst500++; } } catch(e) {}
            originalPrototype = getPrototypeOf(value);
try { if (Inst498 <= 1000 && typeof (originalPrototype) != "undefined") {_RecordType("<13588,13605,333>",(originalPrototype)); Inst498++; } } catch(e) {}
try { if (Inst502 <= 1000 && typeof (ProxyConstructor) != "undefined") {_RecordType("<13663,13679,334>",(ProxyConstructor)); Inst502++; } } catch(e) {}try { if (Inst503 <= 1000 && typeof (originalPrototype) != "undefined") {_RecordType("<13680,13697,334>",(originalPrototype)); Inst503++; } } catch(e) {}try { if (Inst504 <= 1000 && typeof (handler) != "undefined") {_RecordType("<13699,13706,334>",(handler)); Inst504++; } } catch(e) {}
            newPrototype = new ProxyConstructor(originalPrototype, handler);
try { if (Inst501 <= 1000 && typeof (newPrototype) != "undefined") {_RecordType("<13644,13656,334>",(newPrototype)); Inst501++; } } catch(e) {}
try { if (Inst505 <= 1000 && typeof (setPrototypeOf) != "undefined") {_RecordType("<13722,13736,335>",(setPrototypeOf)); Inst505++; } } catch(e) {}try { if (Inst506 <= 1000 && typeof (value) != "undefined") {_RecordType("<13737,13742,335>",(value)); Inst506++; } } catch(e) {}try { if (Inst507 <= 1000 && typeof (newPrototype) != "undefined") {_RecordType("<13744,13756,335>",(newPrototype)); Inst507++; } } catch(e) {}
            setPrototypeOf(value, newPrototype);
        } catch (e) {}
    }

try { if (Inst509 <= 1000 && typeof (probeWithErrorHandling) != "undefined") {_RecordType("<13806,13828,339>",(probeWithErrorHandling)); Inst509++; } } catch(e) {}
    function probeWithErrorHandling(id, value) {
try { if (Inst510 <= 1000 && typeof (id) != "undefined") {_RecordType("<13829,13831,339>",(id)); Inst510++; } } catch(e) {}try { if (Inst511 <= 1000 && typeof (value) != "undefined") {_RecordType("<13833,13838,339>",(value)); Inst511++; } } catch(e) {}
try { if (Inst515 <= 1000 && typeof (e) != "undefined") {_RecordType("<13905,13906,342>",(e)); Inst515++; } } catch(e) {}
        try {
try { if (Inst512 <= 1000 && typeof (probe) != "undefined") {_RecordType("<13870,13875,341>",(probe)); Inst512++; } } catch(e) {}try { if (Inst513 <= 1000 && typeof (id) != "undefined") {_RecordType("<13876,13878,341>",(id)); Inst513++; } } catch(e) {}try { if (Inst514 <= 1000 && typeof (value) != "undefined") {_RecordType("<13880,13885,341>",(value)); Inst514++; } } catch(e) {}
            probe(id, value);
        } catch(e) {
try { if (Inst516 <= 1000 && typeof (reportError) != "undefined") {_RecordType("<13923,13934,343>",(reportError)); Inst516++; } } catch(e) {}try { if (Inst517 <= 1000 && typeof (e) != "undefined") {_RecordType("<13935,13936,343>",(e)); Inst517++; } } catch(e) {}
            reportError(e);
        }
    }

try { if (Inst518 <= 1000 && typeof (probeWithErrorHandling) != "undefined") {_RecordType("<13989,14011,348>",(probeWithErrorHandling)); Inst518++; } } catch(e) {}try { if (Inst519 <= 1000 && typeof (reportResults) != "undefined") {_RecordType("<14037,14050,349>",(reportResults)); Inst519++; } } catch(e) {}
    return {
        probe: probeWithErrorHandling,
        reportResults: reportResults
    };
})();
try { if (Inst2 <= 1000 && typeof (Probe) != "undefined") {_RecordType("<185,190,5>",(Probe)); Inst2++; } } catch(e) {}

try { if (Inst520 <= 1000 && typeof (F1) != "undefined") {_RecordType("<14078,14080,353>",(F1)); Inst520++; } } catch(e) {}
function F1(a3, a4) {
try { if (Inst521 <= 1000 && typeof (a3) != "undefined") {_RecordType("<14081,14083,353>",(a3)); Inst521++; } } catch(e) {}try { if (Inst522 <= 1000 && typeof (a4) != "undefined") {_RecordType("<14085,14087,353>",(a4)); Inst522++; } } catch(e) {}
try { if (Inst523 <= 1000 && typeof (target) != "undefined") {_RecordType("<14105,14111,354>",(target)); Inst523++; } } catch(e) {}
    if (!new.target) { throw 'must be called with new'; }
try { if (Inst525 <= 1000 && typeof (this.constructor) != "undefined") {_RecordType("<14166,14182,355>",(this.constructor)); Inst525++; } } catch(e) {}
    const v5 = this.constructor;
try { if (Inst524 <= 1000 && typeof (v5) != "undefined") {_RecordType("<14161,14163,355>",(v5)); Inst524++; } } catch(e) {}
try { if (Inst526 <= 1000 && typeof (v5) != "undefined") {_RecordType("<14199,14201,356>",(v5)); Inst526++; } } catch(e) {}try { if (Inst527 <= 1000 && typeof (e) != "undefined") {_RecordType("<14215,14216,356>",(e)); Inst527++; } } catch(e) {}
    try { new v5(9); } catch (e) {}
try { if (Inst528 <= 1000 && typeof (Probe.probe) != "undefined") {_RecordType("<14226,14237,357>",(Probe.probe)); Inst528++; } } catch(e) {}try { if (Inst529 <= 1000 && typeof (Probe) != "undefined") {_RecordType("<14226,14231,357>",(Probe)); Inst529++; } } catch(e) {}try { if (Inst530 <= 1000 && typeof (a3.constructor) != "undefined") {_RecordType("<14245,14259,357>",(a3.constructor)); Inst530++; } } catch(e) {}try { if (Inst531 <= 1000 && typeof (a3) != "undefined") {_RecordType("<14245,14247,357>",(a3)); Inst531++; } } catch(e) {}
    Probe.probe("v80", a3.constructor);
}
try { if (Inst532 <= 1000 && typeof (F1) != "undefined") {_RecordType("<14270,14272,359>",(F1)); Inst532++; } } catch(e) {}try { if (Inst533 <= 1000 && typeof (F1) != "undefined") {_RecordType("<14273,14275,359>",(F1)); Inst533++; } } catch(e) {}try { if (Inst534 <= 1000 && typeof (F1) != "undefined") {_RecordType("<14277,14279,359>",(F1)); Inst534++; } } catch(e) {}
new F1(F1, F1);
try { if (Inst535 <= 1000 && typeof (Probe.reportResults) != "undefined") {_RecordType("<14283,14302,360>",(Probe.reportResults)); Inst535++; } } catch(e) {}try { if (Inst536 <= 1000 && typeof (Probe) != "undefined") {_RecordType("<14283,14288,360>",(Probe)); Inst536++; } } catch(e) {}
Probe.reportResults();

// CRASH INFO
// ==========
// TERMSIG: 5
// STDERR:
// #
// # Fatal error in ../../src/objects/map-updater.cc, line 692
// # Debug check failed: old_map_->EquivalentToForTransition( *root_map_, ConcurrencyMode::kSynchronous, new_prototype_).
// #
// #
// #
// #FailureMessage Object: 0x7ffe275517b0
// ==== C stack trace ===============================
// 
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x8e6352) [0x561be1e0f352]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x8e4e27) [0x561be1e0de27]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x8d794a) [0x561be1e0094a]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x8d7225) [0x561be1e00225]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x17f62d2) [0x561be2d1f2d2]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x17f94e5) [0x561be2d224e5]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x17f9245) [0x561be2d22245]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x16bbbdd) [0x561be2be4bdd]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x1b596af) [0x561be30826af]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x1b59122) [0x561be3082122]
//     /home/ttt/fuzz_v8/v8/out/524/d8(+0x3e606b6) [0x561be53896b6]
// STDOUT:
// 
// FUZZER ARGS: .build/x86_64-unknown-linux-gnu/release/FuzzilliCli --engine=hybrid --profile=tt /home/ttt/fuzz_v8/v8/out/524/d8 --storagePath=/home/ttt/crash2 --overwrite
// TARGET ARGS: /home/ttt/fuzz_v8/v8/out/524/d8 --expose-gc --omit-quit --allow-natives-syntax --fuzzing --hole-fuzzing --jit-fuzzing --future --harmony
// CONTRIBUTORS: 
// EXECUTION TIME: 590ms

