var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<20,30,1>",(Uint8Array)); Inst1++; } } catch(e) {}
var wasm_code = new Uint8Array([0x00,0x61,0x73,0x6d,0x01,0x00,0x00,0x00,0x01,0x05,0x01,0x60,0x01,0x6F,0x00,0x03,0x02,0x01,0x00,0x05,0x03,0x01,0x04,0x1A,0x07,0x08,0x01,0x04,0x6D,0x61,0x69,0x6E,0x00,0x00,0x0A,0x16,0x01,0x14,0x00,0x3F,0x00,0x41,0x40,0xFB,0x8B,0x01,0x80,0x00,0x0C,0x00,0x71,0x00,0xFB,0x8E,0x01,0x00,0x00,0x0B]);
try { if (Inst0 <= 1000 && typeof (wasm_code) != "undefined") {_RecordType("<4,13,1>",(wasm_code)); Inst0++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (WebAssembly.Module) != "undefined") {_RecordType("<348,366,2>",(WebAssembly.Module)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<348,359,2>",(WebAssembly)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (wasm_code) != "undefined") {_RecordType("<367,376,2>",(wasm_code)); Inst5++; } } catch(e) {}
var wasm_module = new WebAssembly.Module(wasm_code);
try { if (Inst2 <= 1000 && typeof (wasm_module) != "undefined") {_RecordType("<330,341,2>",(wasm_module)); Inst2++; } } catch(e) {}
try { if (Inst7 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<404,424,3>",(WebAssembly.Instance)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<404,415,3>",(WebAssembly)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (wasm_module) != "undefined") {_RecordType("<425,436,3>",(wasm_module)); Inst9++; } } catch(e) {}
var wasm_instance = new WebAssembly.Instance(wasm_module);
try { if (Inst6 <= 1000 && typeof (wasm_instance) != "undefined") {_RecordType("<384,397,3>",(wasm_instance)); Inst6++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (wasm_instance.exports.main) != "undefined") {_RecordType("<448,474,4>",(wasm_instance.exports.main)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (wasm_instance.exports) != "undefined") {_RecordType("<448,469,4>",(wasm_instance.exports)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (wasm_instance) != "undefined") {_RecordType("<448,461,4>",(wasm_instance)); Inst13++; } } catch(e) {}
var f = wasm_instance.exports.main;
try { if (Inst10 <= 1000 && typeof (f) != "undefined") {_RecordType("<444,445,4>",(f)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (f) != "undefined") {_RecordType("<477,478,5>",(f)); Inst14++; } } catch(e) {}
f();
