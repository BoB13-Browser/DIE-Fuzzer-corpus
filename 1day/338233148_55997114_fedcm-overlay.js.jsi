var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

var ran = false;
try { if (Inst0 <= 1000 && typeof (ran) != "undefined") {_RecordType("<6,9,2>",(ran)); Inst0++; } } catch(e) {}
var newWin;
try { if (Inst1 <= 1000 && typeof (newWin) != "undefined") {_RecordType("<24,30,3>",(newWin)); Inst1++; } } catch(e) {}
try { if (Inst2 <= 1000 && typeof (window.addEventListener) != "undefined") {_RecordType("<33,56,4>",(window.addEventListener)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (window) != "undefined") {_RecordType("<33,39,4>",(window)); Inst3++; } } catch(e) {}
window.addEventListener('click', async () => {
    ran = true;
try { if (Inst4 <= 1000 && typeof (ran) != "undefined") {_RecordType("<85,88,5>",(ran)); Inst4++; } } catch(e) {}
try { if (Inst6 <= 1000 && typeof (window.screenLeft) != "undefined") {_RecordType("<116,133,6>",(window.screenLeft)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (window) != "undefined") {_RecordType("<116,122,6>",(window)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (window.outerWidth) != "undefined") {_RecordType("<137,154,6>",(window.outerWidth)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (window) != "undefined") {_RecordType("<137,143,6>",(window)); Inst9++; } } catch(e) {}
    var leftPos = window.screenLeft + (window.outerWidth / 2) + 2;
try { if (Inst5 <= 1000 && typeof (leftPos) != "undefined") {_RecordType("<106,113,6>",(leftPos)); Inst5++; } } catch(e) {}
try { if (Inst11 <= 1000 && typeof (window.open) != "undefined") {_RecordType("<179,190,7>",(window.open)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (window) != "undefined") {_RecordType("<179,185,7>",(window)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (leftPos) != "undefined") {_RecordType("<241,248,7>",(leftPos)); Inst13++; } } catch(e) {}
    newWin = window.open('about:blank', 'aoTest', 'width=1,height=1,left='+leftPos+',top=0');
try { if (Inst10 <= 1000 && typeof (newWin) != "undefined") {_RecordType("<170,176,7>",(newWin)); Inst10++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (newWin.resizeTo) != "undefined") {_RecordType("<265,280,8>",(newWin.resizeTo)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (newWin) != "undefined") {_RecordType("<265,271,8>",(newWin)); Inst15++; } } catch(e) {}
    newWin.resizeTo(1,1);
try { if (Inst16 <= 1000 && typeof (newWin.eval) != "undefined") {_RecordType("<292,303,9>",(newWin.eval)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (newWin) != "undefined") {_RecordType("<292,298,9>",(newWin)); Inst17++; } } catch(e) {}
    newWin.eval(`
        setInterval(() => {
            if (!window.opener) { window.close(); }
        }, 200);
        navigator.credentials.get({
            identity: {
                providers: [{
                    configURL: "https://ao-fedcm-idp-2.glitch.me/test/fedcm.json",
                    clientId: "1234",
                    nonce: "5678",
                }],
            },
            mediation: "required"
        }).then((creds) => {
            if (creds?.token) {
                window.resizeTo(500,300);
                alert('Got creds. Token: '+creds.token);
                window.close();
            }
        });
    `);
    window.location = 'https://example.com';
try { if (Inst18 <= 1000 && typeof (window.location) != "undefined") {_RecordType("<969,984,30>",(window.location)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (window) != "undefined") {_RecordType("<969,975,30>",(window)); Inst19++; } } catch(e) {}
});

