var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst0 <= 1000 && typeof (opt) != "undefined") {_RecordType("<9,12,1>",(opt)); Inst0++; } } catch(e) {}
function opt(opt_param){
try { if (Inst1 <= 1000 && typeof (opt_param) != "undefined") {_RecordType("<13,22,1>",(opt_param)); Inst1++; } } catch(e) {}
function v0(v1,v2) {
try { if (Inst2 <= 1000 && typeof (v0) != "undefined") {_RecordType("<36,38,3>",(v0)); Inst2++; } } catch(e) {}
    const v3 = v1.byteOffset;
try { if (Inst3 <= 1000 && typeof (v1) != "undefined") {_RecordType("<39,41,3>",(v1)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (v2) != "undefined") {_RecordType("<42,44,3>",(v2)); Inst4++; } } catch(e) {}
    v1[8] = v0;
try { if (Inst6 <= 1000 && typeof (v1.byteOffset) != "undefined") {_RecordType("<65,78,5>",(v1.byteOffset)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (v1) != "undefined") {_RecordType("<65,67,5>",(v1)); Inst7++; } } catch(e) {}
}
try { if (Inst5 <= 1000 && typeof (v3) != "undefined") {_RecordType("<60,62,5>",(v3)); Inst5++; } } catch(e) {}
const v5 = Array();
try { if (Inst10 <= 1000 && typeof (v0) != "undefined") {_RecordType("<94,96,7>",(v0)); Inst10++; } } catch(e) {}
const v6 = v0(Array);
try { if (Inst8 <= 1000 && typeof (v1[8]) != "undefined") {_RecordType("<86,91,7>",(v1[8])); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (v1) != "undefined") {_RecordType("<86,88,7>",(v1)); Inst9++; } } catch(e) {}
let v7 = 0;
for (let v10 = v7; v10 < 256; v10++) {
    const v11 = v0(v5);
try { if (Inst12 <= 1000 && typeof (Array) != "undefined") {_RecordType("<115,120,11>",(Array)); Inst12++; } } catch(e) {}
}
try { if (Inst11 <= 1000 && typeof (v5) != "undefined") {_RecordType("<110,112,11>",(v5)); Inst11++; } } catch(e) {}
const v12 = 0;
try { if (Inst14 <= 1000 && typeof (v0) != "undefined") {_RecordType("<137,139,13>",(v0)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (Array) != "undefined") {_RecordType("<140,145,13>",(Array)); Inst15++; } } catch(e) {}
for (let v15 = 256; v15 < 100; v15++) {
try { if (Inst13 <= 1000 && typeof (v6) != "undefined") {_RecordType("<132,134,13>",(v6)); Inst13++; } } catch(e) {}
    let v16 = 1;
    v16 /= 100;
try { if (Inst16 <= 1000 && typeof (v7) != "undefined") {_RecordType("<154,156,15>",(v7)); Inst16++; } } catch(e) {}
}
try {
try { if (Inst17 <= 1000 && typeof (v10) != "undefined") {_RecordType("<173,176,17>",(v10)); Inst17++; } } catch(e) {}try { if (Inst18 <= 1000 && typeof (v7) != "undefined") {_RecordType("<179,181,17>",(v7)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (v10) != "undefined") {_RecordType("<183,186,17>",(v10)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (v10) != "undefined") {_RecordType("<194,197,17>",(v10)); Inst20++; } } catch(e) {}
    const v18 = Object.create();
try { if (Inst22 <= 1000 && typeof (v0) != "undefined") {_RecordType("<221,223,19>",(v0)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (v5) != "undefined") {_RecordType("<224,226,19>",(v5)); Inst23++; } } catch(e) {}
} catch(v19) {
try { if (Inst21 <= 1000 && typeof (v11) != "undefined") {_RecordType("<215,218,19>",(v11)); Inst21++; } } catch(e) {}
}
const v20 = Array(1);
for (const v21 of v5) {
    do {
try { if (Inst24 <= 1000 && typeof (v12) != "undefined") {_RecordType("<241,244,23>",(v12)); Inst24++; } } catch(e) {}
        for (const v22 in v21) {
            const v23 = 2;
try { if (Inst25 <= 1000 && typeof (v15) != "undefined") {_RecordType("<261,264,25>",(v15)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (v15) != "undefined") {_RecordType("<272,275,25>",(v15)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (v15) != "undefined") {_RecordType("<283,286,25>",(v15)); Inst27++; } } catch(e) {}
        }
        const v24 = v7++;
try { if (Inst28 <= 1000 && typeof (v16) != "undefined") {_RecordType("<302,305,27>",(v16)); Inst28++; } } catch(e) {}
    } while (v7 < v7);
}
try { if (Inst29 <= 1000 && typeof (v16) != "undefined") {_RecordType("<317,320,29>",(v16)); Inst29++; } } catch(e) {}
const v25 = v0(1,v0);
return v25;
}
try { if (Inst33 <= 1000 && typeof (v19) != "undefined") {_RecordType("<386,389,37>",(v19)); Inst33++; } } catch(e) {}
let t = opt(false);
opt(true);
try { if (Inst31 <= 1000 && typeof (Object.create) != "undefined") {_RecordType("<359,372,35>",(Object.create)); Inst31++; } } catch(e) {}try { if (Inst32 <= 1000 && typeof (Object) != "undefined") {_RecordType("<359,365,35>",(Object)); Inst32++; } } catch(e) {}

try { if (Inst30 <= 1000 && typeof (v18) != "undefined") {_RecordType("<353,356,35>",(v18)); Inst30++; } } catch(e) {}
