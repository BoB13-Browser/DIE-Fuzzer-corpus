var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}

try { if (Inst1 <= 1000 && typeof (Array.from) != "undefined") {_RecordType("<18,28,2>",(Array.from)); Inst1++; } } catch(e) {}try { if (Inst2 <= 1000 && typeof (Array) != "undefined") {_RecordType("<18,23,2>",(Array)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (document.styleSheets[0].cssRules) != "undefined") {_RecordType("<29,61,2>",(document.styleSheets[0].cssRules)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (document.styleSheets[0]) != "undefined") {_RecordType("<29,52,2>",(document.styleSheets[0])); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (document.styleSheets) != "undefined") {_RecordType("<29,49,2>",(document.styleSheets)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (document) != "undefined") {_RecordType("<29,37,2>",(document)); Inst6++; } } catch(e) {}
  const rules = Array.from(document.styleSheets[0].cssRules);
try { if (Inst0 <= 1000 && typeof (rules) != "undefined") {_RecordType("<10,15,2>",(rules)); Inst0++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (rules.map(r => r.cssText).join) != "undefined") {_RecordType("<80,110,3>",(rules.map(r => r.cssText).join)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (rules.map) != "undefined") {_RecordType("<80,89,3>",(rules.map)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (rules) != "undefined") {_RecordType("<80,85,3>",(rules)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (r) != "undefined") {_RecordType("<90,91,3>",(r)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (r.cssText) != "undefined") {_RecordType("<95,104,3>",(r.cssText)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (r) != "undefined") {_RecordType("<95,96,3>",(r)); Inst13++; } } catch(e) {}
  const text = rules.map(r => r.cssText).join('\n');
try { if (Inst7 <= 1000 && typeof (text) != "undefined") {_RecordType("<73,77,3>",(text)); Inst7++; } } catch(e) {}
try { if (Inst17 <= 1000 && typeof (text) != "undefined") {_RecordType("<165,169,4>",(text)); Inst17++; } } catch(e) {}
  document.querySelector("pre").textContent = text;
try { if (Inst14 <= 1000 && typeof (document.querySelector("pre").textContent) != "undefined") {_RecordType("<121,162,4>",(document.querySelector("pre").textContent)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (document.querySelector) != "undefined") {_RecordType("<121,143,4>",(document.querySelector)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (document) != "undefined") {_RecordType("<121,129,4>",(document)); Inst16++; } } catch(e) {}

