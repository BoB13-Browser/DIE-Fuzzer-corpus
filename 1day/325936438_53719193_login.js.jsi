var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}


try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<21,25,3>",(test)); Inst0++; } } catch(e) {}
  async function test() {

try { if (Inst5 <= 1000 && typeof (e) != "undefined") {_RecordType("<468,469,35>",(e)); Inst5++; } } catch(e) {}
    try {

try { if (Inst2 <= 1000 && typeof (navigator.credentials.get) != "undefined") {_RecordType("<77,102,7>",(navigator.credentials.get)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (navigator.credentials) != "undefined") {_RecordType("<77,98,7>",(navigator.credentials)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (navigator) != "undefined") {_RecordType("<77,86,7>",(navigator)); Inst4++; } } catch(e) {}
      const credential = await navigator.credentials.get({

        identity: {

          context: 'signup',

          autoReauthn: false,

          mediation: "optional",

          providers: [

          {

            configURL: 'http://localhost:8000/config.json',

            clientId: 'aaa',

            nonce: '******',

          }

          ]

        }

      });
try { if (Inst1 <= 1000 && typeof (credential) != "undefined") {_RecordType("<58,68,7>",(credential)); Inst1++; } } catch(e) {}

    } catch(e) {

try { if (Inst6 <= 1000 && typeof (console.log) != "undefined") {_RecordType("<482,493,37>",(console.log)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (console) != "undefined") {_RecordType("<482,489,37>",(console)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (e) != "undefined") {_RecordType("<494,495,37>",(e)); Inst8++; } } catch(e) {}
      console.log(e);

try { if (Inst9 <= 1000 && typeof (IdentityProvider.close) != "undefined") {_RecordType("<507,529,39>",(IdentityProvider.close)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (IdentityProvider) != "undefined") {_RecordType("<507,523,39>",(IdentityProvider)); Inst10++; } } catch(e) {}
      IdentityProvider.close();

    }

  }

  window.onload = async function() {

try { if (Inst13 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<596,606,47>",(setTimeout)); Inst13++; } } catch(e) {}
    setTimeout(() => {

try { if (Inst14 <= 1000 && typeof (test) != "undefined") {_RecordType("<624,628,49>",(test)); Inst14++; } } catch(e) {}
      test();

    }, 200);

  }
try { if (Inst11 <= 1000 && typeof (window.onload) != "undefined") {_RecordType("<554,567,45>",(window.onload)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (window) != "undefined") {_RecordType("<554,560,45>",(window)); Inst12++; } } catch(e) {}


