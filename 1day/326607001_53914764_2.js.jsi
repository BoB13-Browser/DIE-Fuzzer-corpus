var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
var Inst25 = 0;
var Inst26 = 0;
var Inst27 = 0;
var Inst28 = 0;
var Inst29 = 0;
var Inst30 = 0;
var Inst31 = 0;
var Inst32 = 0;
var Inst33 = 0;
var Inst34 = 0;
var Inst35 = 0;
var Inst36 = 0;
var Inst37 = 0;
var Inst38 = 0;
var Inst39 = 0;
var Inst40 = 0;
var Inst41 = 0;
var Inst42 = 0;
var Inst43 = 0;
var Inst44 = 0;
var Inst45 = 0;
var Inst46 = 0;
var Inst47 = 0;
var Inst48 = 0;
var Inst49 = 0;
var Inst50 = 0;
var Inst51 = 0;
var Inst52 = 0;
var Inst53 = 0;
var Inst54 = 0;
var Inst55 = 0;
var Inst56 = 0;
var Inst57 = 0;
var Inst58 = 0;
var Inst59 = 0;
var Inst60 = 0;
var Inst61 = 0;
var Inst62 = 0;
var Inst63 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
const v3 = [5];
try { if (Inst0 <= 1000 && typeof (v3) != "undefined") {_RecordType("<6,8,1>",(v3)); Inst0++; } } catch(e) {}
[-4294967297];
[-1812067729,-65535];
let v6 = 1;
try { if (Inst1 <= 1000 && typeof (v6) != "undefined") {_RecordType("<60,62,4>",(v6)); Inst1++; } } catch(e) {}
try { if (Inst3 <= 1000 && typeof (Float64Array) != "undefined") {_RecordType("<82,94,5>",(Float64Array)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (v6) != "undefined") {_RecordType("<95,97,5>",(v6)); Inst4++; } } catch(e) {}
let v8 = new Float64Array(v6);
try { if (Inst2 <= 1000 && typeof (v8) != "undefined") {_RecordType("<73,75,5>",(v8)); Inst2++; } } catch(e) {}
try { if (Inst5 <= 1000 && typeof (f9) != "undefined") {_RecordType("<110,112,6>",(f9)); Inst5++; } } catch(e) {}
function f9(a10, a11) {
try { if (Inst6 <= 1000 && typeof (a10) != "undefined") {_RecordType("<113,116,6>",(a10)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (a11) != "undefined") {_RecordType("<118,121,6>",(a11)); Inst7++; } } catch(e) {}
try { if (Inst8 <= 1000 && typeof (v6) != "undefined") {_RecordType("<130,132,7>",(v6)); Inst8++; } } catch(e) {}
    v6++;
try { if (Inst13 <= 1000 && typeof (v3) != "undefined") {_RecordType("<166,168,8>",(v3)); Inst13++; } } catch(e) {}
    v3[Symbol.toStringTag] = v3;
try { if (Inst9 <= 1000 && typeof (v3[Symbol.toStringTag]) != "undefined") {_RecordType("<141,163,8>",(v3[Symbol.toStringTag])); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (v3) != "undefined") {_RecordType("<141,143,8>",(v3)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (Symbol.toStringTag) != "undefined") {_RecordType("<144,162,8>",(Symbol.toStringTag)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (Symbol) != "undefined") {_RecordType("<144,150,8>",(Symbol)); Inst12++; } } catch(e) {}
try { if (Inst14 <= 1000 && typeof (a11) != "undefined") {_RecordType("<182,185,9>",(a11)); Inst14++; } } catch(e) {}
    return a11;
}
try { if (Inst17 <= 1000 && typeof (f9) != "undefined") {_RecordType("<204,206,11>",(f9)); Inst17++; } } catch(e) {}
v8.valueOf = f9;
try { if (Inst15 <= 1000 && typeof (v8.valueOf) != "undefined") {_RecordType("<191,201,11>",(v8.valueOf)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (v8) != "undefined") {_RecordType("<191,193,11>",(v8)); Inst16++; } } catch(e) {}
try { if (Inst19 <= 1000 && typeof (Uint16Array) != "undefined") {_RecordType("<225,236,12>",(Uint16Array)); Inst19++; } } catch(e) {}
const v17 = new Uint16Array(3140);
try { if (Inst18 <= 1000 && typeof (v17) != "undefined") {_RecordType("<215,218,12>",(v17)); Inst18++; } } catch(e) {}
v17.length >>>= 10;
try { if (Inst20 <= 1000 && typeof (v17.length) != "undefined") {_RecordType("<245,255,13>",(v17.length)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (v17) != "undefined") {_RecordType("<245,248,13>",(v17)); Inst21++; } } catch(e) {}
~this;
try { if (Inst22 <= 1000 && typeof (Math.cosh) != "undefined") {_RecordType("<274,283,15>",(Math.cosh)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (Math) != "undefined") {_RecordType("<274,278,15>",(Math)); Inst23++; } } catch(e) {}
Math.cosh(-536870912);
try { if (Inst24 <= 1000 && typeof (v8) != "undefined") {_RecordType("<300,302,16>",(v8)); Inst24++; } } catch(e) {}
--v8;
try { if (Inst25 <= 1000 && typeof (v6) != "undefined") {_RecordType("<307,309,17>",(v6)); Inst25++; } } catch(e) {}
++v6;
try { if (Inst26 <= 1000 && typeof (Math.fround) != "undefined") {_RecordType("<312,323,18>",(Math.fround)); Inst26++; } } catch(e) {}try { if (Inst27 <= 1000 && typeof (Math) != "undefined") {_RecordType("<312,316,18>",(Math)); Inst27++; } } catch(e) {}
Math.fround(-4096);
try { if (Inst28 <= 1000 && typeof (Math.min) != "undefined") {_RecordType("<333,341,19>",(Math.min)); Inst28++; } } catch(e) {}try { if (Inst29 <= 1000 && typeof (Math) != "undefined") {_RecordType("<333,337,19>",(Math)); Inst29++; } } catch(e) {}
Math.min(this);
try { if (Inst30 <= 1000 && typeof (Float32Array) != "undefined") {_RecordType("<354,366,20>",(Float32Array)); Inst30++; } } catch(e) {}
new Float32Array(156);
try { if (Inst31 <= 1000 && typeof (f32) != "undefined") {_RecordType("<383,386,21>",(f32)); Inst31++; } } catch(e) {}
function f32(a33) {
try { if (Inst32 <= 1000 && typeof (a33) != "undefined") {_RecordType("<387,390,21>",(a33)); Inst32++; } } catch(e) {}
try { if (Inst33 <= 1000 && typeof (f34) != "undefined") {_RecordType("<408,411,22>",(f34)); Inst33++; } } catch(e) {}
    function f34(a35) {
try { if (Inst34 <= 1000 && typeof (a35) != "undefined") {_RecordType("<412,415,22>",(a35)); Inst34++; } } catch(e) {}
        for (let v36 = 0; v36 < 5; v36++) {
try { if (Inst35 <= 1000 && typeof (v36) != "undefined") {_RecordType("<437,440,23>",(v36)); Inst35++; } } catch(e) {}try { if (Inst36 <= 1000 && typeof (v36) != "undefined") {_RecordType("<446,449,23>",(v36)); Inst36++; } } catch(e) {}try { if (Inst37 <= 1000 && typeof (v36) != "undefined") {_RecordType("<455,458,23>",(v36)); Inst37++; } } catch(e) {}
try { if (Inst38 <= 1000 && typeof (eval) != "undefined") {_RecordType("<477,481,24>",(eval)); Inst38++; } } catch(e) {}
            eval(`\n    function asmModule() {\n      "use asm";\n      function x(v) {\n        v = v | 0;\n      }\n      return x;\n    }\n    asmModule();\n  `);
        }
try { if (Inst39 <= 1000 && typeof (f34) != "undefined") {_RecordType("<658,661,26>",(f34)); Inst39++; } } catch(e) {}
        return f34;
    }
try { if (Inst41 <= 1000 && typeof (f34) != "undefined") {_RecordType("<687,690,28>",(f34)); Inst41++; } } catch(e) {}
    onmessage = f34;
try { if (Inst40 <= 1000 && typeof (onmessage) != "undefined") {_RecordType("<675,684,28>",(onmessage)); Inst40++; } } catch(e) {}
try { if (Inst42 <= 1000 && typeof (f32) != "undefined") {_RecordType("<704,707,29>",(f32)); Inst42++; } } catch(e) {}
    return f32;
}
try { if (Inst44 <= 1000 && typeof (f32) != "undefined") {_RecordType("<726,729,31>",(f32)); Inst44++; } } catch(e) {}
const v40 = [f32];
try { if (Inst43 <= 1000 && typeof (v40) != "undefined") {_RecordType("<719,722,31>",(v40)); Inst43++; } } catch(e) {}
try { if (Inst45 <= 1000 && typeof (Object.defineProperty) != "undefined") {_RecordType("<733,754,32>",(Object.defineProperty)); Inst45++; } } catch(e) {}try { if (Inst46 <= 1000 && typeof (Object) != "undefined") {_RecordType("<733,739,32>",(Object)); Inst46++; } } catch(e) {}try { if (Inst47 <= 1000 && typeof (v40) != "undefined") {_RecordType("<755,758,32>",(v40)); Inst47++; } } catch(e) {}
Object.defineProperty(v40, 1, { writable: true, value: 3 });
for (let v41 = 0; v41 < 5; v41++) {
try { if (Inst48 <= 1000 && typeof (v41) != "undefined") {_RecordType("<804,807,33>",(v41)); Inst48++; } } catch(e) {}try { if (Inst49 <= 1000 && typeof (v41) != "undefined") {_RecordType("<813,816,33>",(v41)); Inst49++; } } catch(e) {}try { if (Inst50 <= 1000 && typeof (v41) != "undefined") {_RecordType("<822,825,33>",(v41)); Inst50++; } } catch(e) {}
    const o44 = {
        "type": "function",
    };
try { if (Inst51 <= 1000 && typeof (o44) != "undefined") {_RecordType("<842,845,34>",(o44)); Inst51++; } } catch(e) {}
try { if (Inst53 <= 1000 && typeof (Worker) != "undefined") {_RecordType("<908,914,37>",(Worker)); Inst53++; } } catch(e) {}try { if (Inst54 <= 1000 && typeof (f32) != "undefined") {_RecordType("<915,918,37>",(f32)); Inst54++; } } catch(e) {}try { if (Inst55 <= 1000 && typeof (o44) != "undefined") {_RecordType("<920,923,37>",(o44)); Inst55++; } } catch(e) {}
    const v45 = new Worker(f32, o44);
try { if (Inst52 <= 1000 && typeof (v45) != "undefined") {_RecordType("<898,901,37>",(v45)); Inst52++; } } catch(e) {}
try { if (Inst58 <= 1000 && typeof (v45) != "undefined") {_RecordType("<942,945,38>",(v45)); Inst58++; } } catch(e) {}
    v40[v41] = v45;
try { if (Inst56 <= 1000 && typeof (v40[v41]) != "undefined") {_RecordType("<931,939,38>",(v40[v41])); Inst56++; } } catch(e) {}try { if (Inst57 <= 1000 && typeof (v40) != "undefined") {_RecordType("<931,934,38>",(v40)); Inst57++; } } catch(e) {}
    const o46 = {
    };
try { if (Inst59 <= 1000 && typeof (o46) != "undefined") {_RecordType("<958,961,39>",(o46)); Inst59++; } } catch(e) {}
try { if (Inst60 <= 1000 && typeof (v40[v41].postMessage) != "undefined") {_RecordType("<979,999,41>",(v40[v41].postMessage)); Inst60++; } } catch(e) {}try { if (Inst61 <= 1000 && typeof (v40[v41]) != "undefined") {_RecordType("<979,987,41>",(v40[v41])); Inst61++; } } catch(e) {}try { if (Inst62 <= 1000 && typeof (v40) != "undefined") {_RecordType("<979,982,41>",(v40)); Inst62++; } } catch(e) {}try { if (Inst63 <= 1000 && typeof (o46) != "undefined") {_RecordType("<1000,1003,41>",(o46)); Inst63++; } } catch(e) {}
    v40[v41].postMessage(o46);
}
// CRASH INFO
// ==========
// TERMSIG: 11
// STDERR:
// Received signal 11 SEGV_MAPERR 0007fdc1c0b8
// 
// ==== C stack trace ===============================
// 
//  [0x55f3753d13b2]
//  [0x7fddd77cf520]
//  [0x7fddd782e89e]
//  [0x7fddd7830bdb]
//  [0x7fddd7832139]
//  [0x55f3787f2489]
//  [0x55f375af05ad]
//  [0x55f375af03a2]
//  [0x55f375af00a5]
//  [0x55f375b2c079]
//  [0x55f375b0cf7d]
//  [0x55f375b059ad]
//  [0x55f375a1fbb6]
//  [0x55f375a1e3d3]
//  [0x55f375a58c7c]
//  [0x55f375a17c8c]
//  [0x55f375a1d8d4]
//  [0x55f375af8c77]
//  [0x55f37574c9af]
//  [0x55f37574c8ee]
//  [0x55f37708b4d7]
// [end of stack trace]
// STDOUT:
// 

