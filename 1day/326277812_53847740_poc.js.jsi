var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
var Inst17 = 0;
var Inst18 = 0;
var Inst19 = 0;
var Inst20 = 0;
var Inst21 = 0;
var Inst22 = 0;
var Inst23 = 0;
var Inst24 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}


try { if (Inst0 <= 1000 && typeof (test) != "undefined") {_RecordType("<21,25,3>",(test)); Inst0++; } } catch(e) {}
  async function test() {

try { if (Inst2 <= 1000 && typeof (navigator.mediaDevices.getUserMedia) != "undefined") {_RecordType("<45,80,5>",(navigator.mediaDevices.getUserMedia)); Inst2++; } } catch(e) {}try { if (Inst3 <= 1000 && typeof (navigator.mediaDevices) != "undefined") {_RecordType("<45,67,5>",(navigator.mediaDevices)); Inst3++; } } catch(e) {}try { if (Inst4 <= 1000 && typeof (navigator) != "undefined") {_RecordType("<45,54,5>",(navigator)); Inst4++; } } catch(e) {}
    var p = navigator.mediaDevices.getUserMedia({video:true});
try { if (Inst1 <= 1000 && typeof (p) != "undefined") {_RecordType("<41,42,5>",(p)); Inst1++; } } catch(e) {}

try { if (Inst6 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<112,122,7>",(setTimeout)); Inst6++; } } catch(e) {}
    var id = setTimeout(() => {

try { if (Inst7 <= 1000 && typeof (window.location.reload) != "undefined") {_RecordType("<140,162,9>",(window.location.reload)); Inst7++; } } catch(e) {}try { if (Inst8 <= 1000 && typeof (window.location) != "undefined") {_RecordType("<140,155,9>",(window.location)); Inst8++; } } catch(e) {}try { if (Inst9 <= 1000 && typeof (window) != "undefined") {_RecordType("<140,146,9>",(window)); Inst9++; } } catch(e) {}
      window.location.reload();

    }, 150);
try { if (Inst5 <= 1000 && typeof (id) != "undefined") {_RecordType("<107,109,7>",(id)); Inst5++; } } catch(e) {}

try { if (Inst10 <= 1000 && typeof (p.catch) != "undefined") {_RecordType("<189,196,13>",(p.catch)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (p) != "undefined") {_RecordType("<189,190,13>",(p)); Inst11++; } } catch(e) {}try { if (Inst12 <= 1000 && typeof (e) != "undefined") {_RecordType("<198,199,13>",(e)); Inst12++; } } catch(e) {}
    p.catch((e) => {

try { if (Inst13 <= 1000 && typeof (clearTimeout) != "undefined") {_RecordType("<215,227,15>",(clearTimeout)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (id) != "undefined") {_RecordType("<228,230,15>",(id)); Inst14++; } } catch(e) {}
      clearTimeout(id);

try { if (Inst15 <= 1000 && typeof (document.addEventListener) != "undefined") {_RecordType("<242,267,17>",(document.addEventListener)); Inst15++; } } catch(e) {}try { if (Inst16 <= 1000 && typeof (document) != "undefined") {_RecordType("<242,250,17>",(document)); Inst16++; } } catch(e) {}try { if (Inst17 <= 1000 && typeof (ev) != "undefined") {_RecordType("<283,285,17>",(ev)); Inst17++; } } catch(e) {}
      document.addEventListener("mouseleave", (ev) => {

try { if (Inst18 <= 1000 && typeof (setTimeout) != "undefined") {_RecordType("<303,313,19>",(setTimeout)); Inst18++; } } catch(e) {}
        setTimeout(() => {

try { if (Inst19 <= 1000 && typeof (window.location.reload) != "undefined") {_RecordType("<335,357,21>",(window.location.reload)); Inst19++; } } catch(e) {}try { if (Inst20 <= 1000 && typeof (window.location) != "undefined") {_RecordType("<335,350,21>",(window.location)); Inst20++; } } catch(e) {}try { if (Inst21 <= 1000 && typeof (window) != "undefined") {_RecordType("<335,341,21>",(window)); Inst21++; } } catch(e) {}
          window.location.reload();

        }, 4000);

      })

    })

  }

try { if (Inst24 <= 1000 && typeof (test) != "undefined") {_RecordType("<432,436,31>",(test)); Inst24++; } } catch(e) {}
  window.onload = test;
try { if (Inst22 <= 1000 && typeof (window.onload) != "undefined") {_RecordType("<416,429,31>",(window.onload)); Inst22++; } } catch(e) {}try { if (Inst23 <= 1000 && typeof (window) != "undefined") {_RecordType("<416,422,31>",(window)); Inst23++; } } catch(e) {}


