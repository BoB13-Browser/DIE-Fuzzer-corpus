var Inst0 = 0;
var Inst1 = 0;
var Inst2 = 0;
var Inst3 = 0;
var Inst4 = 0;
var Inst5 = 0;
var Inst6 = 0;
var Inst7 = 0;
var Inst8 = 0;
var Inst9 = 0;
var Inst10 = 0;
var Inst11 = 0;
var Inst12 = 0;
var Inst13 = 0;
var Inst14 = 0;
var Inst15 = 0;
var Inst16 = 0;
 
function _TypeOfArray(a) {
	let number = true;	
	let string = true;
	for (let i = 0; i < a.length; i++) {
		if (number && (typeof a[i]) != "number") {
			number = false;	
		}
		if (string && (typeof a[i]) != "string") {
			string = false;	
		}
		if (!number && !string)
			break;
	}
	if (number)
		return "number";
	else if (string)
		return "string";
	else
		return "any";
}

function _TypeIsEqual(t1, t2) {
	return JSON.stringify(t1) === JSON.stringify(t2);
}

function _TypeOf(a, step) {
	var t;
	var type = Object.prototype.toString.call(a).slice(8, -1).toLowerCase();	
	if (type == "array") {
		t = {type : type, extra: {elemType: _TypeOfArray(a)}};
	} else if (type == "object") {
		let shape = [];
        if (step === undefined || step > 0) {
            let keys = Object.keys(a);
            let length = Math.min(100, keys.length);
		    for (let i = 0; i < length; i++) {
			    shape.push([keys[i], _TypeOf(a[keys[i]], step === undefined ? 1 : step - 1)]);	
		    }
        }
		t = {type : type, extra: {shape: shape}};
	} else {
		t = {type : type};
	} 
	return t;
}

function _RecordType(loc, a) {
	var t = _TypeOf(a);
    print("~~~TypeInfo:" + loc + ":" + JSON.stringify(t));
}
try { if (Inst1 <= 1000 && typeof (Uint8Array) != "undefined") {_RecordType("<24,34,1>",(Uint8Array)); Inst1++; } } catch(e) {}
    var wasm_code = new Uint8Array([
  0,97,115,109,1,0,0,0,1,239,129,128,128,0,21,78,1,94,120,1,78,1,94,119,1,78,6,80,0,95,0,80,1,2,95,4,119,1,109,0,127,0,99,1,1,80,0,95,0,80,0,94,127,1,80,0,94,100,2,1,96,3,127,127,127,1,127,96,15,124,123,111,127,127,124,100,111,125,126,106,99,2,123,125,113,123,0,96,7,100,1,100,111,125,127,99,7,125,127,0,96,13,100,4,100,109,110,107,100,108,100,6,115,99,5,107,99,4,127,127,127,0,96,3,115,124,99,3,0,96,1,111,1,100,111,96,1,111,1,127,96,1,127,1,100,111,96,2,111,127,1,127,96,2,111,111,1,100,111,96,3,111,127,127,1,100,111,96,2,111,111,1,127,96,3,99,1,127,127,1,100,111,96,3,111,99,1,127,1,127,96,3,111,99,0,127,1,127,96,1,111,1,100,0,96,3,99,0,127,127,1,100,111,96,5,100,5,127,99,7,100,7,108,10,127,100,1,107,127,100,108,115,100,108,124,123,127,96,10,127,100,1,107,127,100,108,115,100,108,124,123,127,0,2,149,132,128,128,0,17,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,4,99,97,115,116,0,12,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,4,116,101,115,116,0,13,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,12,102,114,111,109,67,104,97,114,67,111,100,101,0,14,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,13,102,114,111,109,67,111,100,101,80,111,105,110,116,0,14,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,10,99,104,97,114,67,111,100,101,65,116,0,15,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,11,99,111,100,101,80,111,105,110,116,65,116,0,15,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,6,108,101,110,103,116,104,0,13,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,6,99,111,110,99,97,116,0,16,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,9,115,117,98,115,116,114,105,110,103,0,17,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,6,101,113,117,97,108,115,0,18,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,7,99,111,109,112,97,114,101,0,18,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,17,102,114,111,109,67,104,97,114,67,111,100,101,65,114,114,97,121,0,19,14,119,97,115,109,58,106,115,45,115,116,114,105,110,103,17,105,110,116,111,67,104,97,114,67,111,100,101,65,114,114,97,121,0,20,17,119,97,115,109,58,116,101,120,116,45,101,110,99,111,100,101,114,19,109,101,97,115,117,114,101,83,116,114,105,110,103,65,115,85,84,70,56,0,13,17,119,97,115,109,58,116,101,120,116,45,101,110,99,111,100,101,114,25,101,110,99,111,100,101,83,116,114,105,110,103,73,110,116,111,85,84,70,56,65,114,114,97,121,0,21,17,119,97,115,109,58,116,101,120,116,45,101,110,99,111,100,101,114,23,101,110,99,111,100,101,83,116,114,105,110,103,84,111,85,84,70,56,65,114,114,97,121,0,22,17,119,97,115,109,58,116,101,120,116,45,100,101,99,111,100,101,114,25,100,101,99,111,100,101,83,116,114,105,110,103,70,114,111,109,85,84,70,56,65,114,114,97,121,0,23,3,130,128,128,128,0,1,7,4,133,128,128,128,0,1,112,1,1,1,5,132,128,128,128,0,1,1,16,32,13,137,128,128,128,0,4,0,8,0,9,0,10,0,11,6,139,131,128,128,0,53,124,1,68,0,0,0,0,0,0,0,0,11,100,106,0,65,162,196,210,183,125,65,170,170,183,51,65,255,255,255,255,7,65,197,255,218,161,6,108,108,65,130,135,231,193,123,65,254,214,209,139,124,106,65,146,139,229,129,123,65,157,195,133,229,123,65,128,155,176,92,65,156,159,173,67,108,106,65,136,192,149,158,121,106,65,183,137,248,159,123,65,217,237,238,238,2,65,221,144,192,158,3,107,65,164,222,2,65,0,106,65,0,106,65,0,106,65,0,108,65,0,108,108,65,0,107,65,0,106,106,65,0,65,0,251,8,0,8,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,127,0,65,0,11,7,136,128,128,128,0,1,4,109,97,105,110,0,17,9,139,128,128,128,0,1,6,0,65,0,11,112,1,210,17,11,12,1,1,10,146,137,128,128,0,1,143,9,25,1,100,1,1,100,109,1,124,1,100,110,1,99,2,1,100,108,1,111,1,100,1,1,100,112,1,114,1,127,1,100,110,1,108,1,100,112,1,100,7,1,127,2,99,7,1,100,107,1,123,1,115,1,114,1,100,111,1,100,108,1,99,5,1,110,6,124,3,127,3,127,3,127,3,127,3,127,3,127,3,127,3,127,3,127,3,127,65,194,141,32,65,227,171,166,10,65,246,0,116,119,65,1,47,0,178,114,65,158,193,0,65,5,254,60,0,229,242,1,254,39,0,244,237,3,65,225,249,200,0,65,198,0,65,20,111,251,6,5,65,220,1,208,7,210,17,65,242,229,126,65,178,143,206,246,3,65,235,6,106,118,251,28,2,24,26,26,26,26,26,65,214,193,132,1,65,201,0,65,251,0,65,20,111,251,6,1,208,107,65,179,144,245,209,0,65,242,2,251,28,208,115,65,239,159,137,8,251,28,68,76,54,166,95,76,227,143,247,65,0,253,15,65,198,242,39,11,2,25,26,26,26,26,26,26,26,26,26,26,11,208,110,213,2,26,65,213,141,230,176,2,65,185,1,65,198,237,186,4,254,16,2,228,1,254,54,1,141,181,2,254,68,1,217,154,3,65,0,253,15,253,128,1,253,12,231,111,135,31,121,131,183,142,64,62,128,160,208,203,30,238,65,0,253,15,253,236,1,253,214,1,253,129,2,65,0,253,15,65,0,253,15,253,235,1,253,57,253,65,253,126,65,0,253,15,253,102,253,25,7,54,2,239,90,252,16,0,254,46,0,135,124,42,2,157,197,1,169,120,11,65,0,253,15,65,0,253,15,253,57,253,129,1,253,196,1,65,144,231,166,54,65,191,234,223,24,108,254,68,1,238,213,1,65,151,151,237,3,65,130,150,167,5,254,40,1,167,75,254,65,2,249,12,65,154,131,51,65,137,186,34,65,233,0,27,65,53,65,0,253,15,253,196,1,254,61,1,230,180,3,108,254,37,2,195,163,2,103,65,226,216,0,65,170,135,192,242,0,65,130,177,236,38,27,71,65,49,65,227,242,32,113,65,137,193,0,65,225,244,199,227,0,117,68,236,105,97,62,113,192,12,102,68,53,172,252,32,76,66,231,25,99,114,65,129,213,1,65,140,41,254,74,0,147,179,3,70,254,39,0,233,173,1,65,132,55,65,131,162,27,65,244,133,154,5,254,30,2,190,1,27,208,111,65,222,236,133,158,127,16,4,110,65,131,127,65,212,0,65,0,19,7,0,3,127,68,17,246,31,59,53,53,67,185,65,15,254,16,2,211,33,34,13,183,99,11,66,138,224,254,167,245,221,244,202,170,127,66,30,89,117,179,65,245,174,170,17,68,159,175,114,37,198,159,149,233,68,243,254,198,117,33,156,144,208,97,254,65,2,176,216,1,190,65,197,143,197,253,2,66,191,220,180,133,225,174,209,154,111,66,131,212,180,200,181,150,195,229,71,81,251,9,5,0,65,136,1,65,241,27,65,248,8,65,20,111,251,6,5,65,173,4,65,179,195,210,0,251,17,5,5,146,152,252,0,254,61,1,195,135,3,11,11,11,11,11,11,11,11,11,65,20,111,251,7,0,251,15,65,4,65,245,226,20,16,17,183,7,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,1,7,1,26,26,26,26,26,26,26,68,39,107,73,71,217,67,77,179,7,2,26,26,26,26,26,26,26,26,26,26,26,26,26,68,152,54,1,184,181,126,156,108,25,68,169,209,18,100,192,147,210,131,11,253,12,49,181,255,172,131,69,91,180,163,123,86,220,230,144,147,55,253,225,1,253,251,1,65,0,253,15,65,0,253,15,253,229,1,253,181,1,253,24,6,65,0,40,2,23,65,156,208,205,7,65,154,248,0,254,44,2,0,71,115,65,202,254,184,226,6,65,1,13,0,1,64,0,65,206,149,132,23,47,1,0,4,64,5,11,112,208,111,208,108,251,23,0,251,23,3,251,2,3,3,251,23,108,251,29,16,5,254,26,1,155,240,3,252,3,65,20,111,251,7,1,33,3,208,3,251,2,3,3,251,23,5,251,22,5,33,4,208,111,16,15,253,12,19,76,220,109,93,139,19,70,183,252,253,8,197,37,58,97,253,201,1,253,25,1,67,115,45,138,181,67,143,223,11,78,91,16,16,67,162,153,107,235,67,33,76,53,55,91,16,5,65,0,253,15,253,195,1,50,0,187,242,3,254,55,0,224,250,1,66,164,136,157,7,89,208,1,65,63,65,224,12,16,11,208,111,16,9,65,191,218,249,2,65,0,253,15,253,99,113,68,217,44,159,242,183,17,225,104,68,209,212,54,20,49,67,51,115,97,13,0,172,208,110,251,23,110,251,23,0,251,23,108,251,30,208,110,213,0,26,172,254,76,0,151,137,1,67,58,198,204,71,145,252,4,89,79,251,28,251,22,6,33,6,208,107,251,22,108,33,8,65,238,153,161,5,65,7,65,20,111,251,6,1,33,10,210,17,33,11,251,0,2,33,14,210,17,33,16,210,17,33,17,251,0,2,33,21,208,110,251,27,212,33,25,65,249,9,251,28,33,26,65,215,129,230,1,11,11,169,128,128,128,0,1,1,38,129,128,148,26,124,253,159,47,212,157,193,107,161,171,149,121,202,46,225,86,174,134,211,147,115,40,77,13,143,197,63,145,188,36,206,35,134,139,0,132,130,128,128,0,4,110,97,109,101,1,249,129,128,128,0,17,0,4,99,97,115,116,1,4,116,101,115,116,2,12,102,114,111,109,67,104,97,114,67,111,100,101,3,13,102,114,111,109,67,111,100,101,80,111,105,110,116,4,10,99,104,97,114,67,111,100,101,65,116,5,11,99,111,100,101,80,111,105,110,116,65,116,6,6,108,101,110,103,116,104,7,6,99,111,110,99,97,116,8,9,115,117,98,115,116,114,105,110,103,9,6,101,113,117,97,108,115,10,7,99,111,109,112,97,114,101,11,17,102,114,111,109,67,104,97,114,67,111,100,101,65,114,114,97,121,12,17,105,110,116,111,67,104,97,114,67,111,100,101,65,114,114,97,121,13,19,109,101,97,115,117,114,101,83,116,114,105,110,103,65,115,85,84,70,56,14,25,101,110,99,111,100,101,83,116,114,105,110,103,73,110,116,111,85,84,70,56,65,114,114,97,121,15,23,101,110,99,111,100,101,83,116,114,105,110,103,84,111,85,84,70,56,65,114,114,97,121,16,25,100,101,99,111,100,101,83,116,114,105,110,103,70,114,111,109,85,84,70,56,65,114,114,97,121
  ]);
try { if (Inst0 <= 1000 && typeof (wasm_code) != "undefined") {_RecordType("<8,17,1>",(wasm_code)); Inst0++; } } catch(e) {}
    let kBuiltins = { builtins: ["js-string", "text-decoder", "text-encoder"] };
try { if (Inst2 <= 1000 && typeof (kBuiltins) != "undefined") {_RecordType("<9156,9165,4>",(kBuiltins)); Inst2++; } } catch(e) {}
try { if (Inst4 <= 1000 && typeof (WebAssembly.Module) != "undefined") {_RecordType("<9256,9274,5>",(WebAssembly.Module)); Inst4++; } } catch(e) {}try { if (Inst5 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<9256,9267,5>",(WebAssembly)); Inst5++; } } catch(e) {}try { if (Inst6 <= 1000 && typeof (wasm_code) != "undefined") {_RecordType("<9275,9284,5>",(wasm_code)); Inst6++; } } catch(e) {}try { if (Inst7 <= 1000 && typeof (kBuiltins) != "undefined") {_RecordType("<9286,9295,5>",(kBuiltins)); Inst7++; } } catch(e) {}
    var wasm_module = new WebAssembly.Module(wasm_code, kBuiltins);
try { if (Inst3 <= 1000 && typeof (wasm_module) != "undefined") {_RecordType("<9238,9249,5>",(wasm_module)); Inst3++; } } catch(e) {}
try { if (Inst9 <= 1000 && typeof (WebAssembly.Instance) != "undefined") {_RecordType("<9327,9347,6>",(WebAssembly.Instance)); Inst9++; } } catch(e) {}try { if (Inst10 <= 1000 && typeof (WebAssembly) != "undefined") {_RecordType("<9327,9338,6>",(WebAssembly)); Inst10++; } } catch(e) {}try { if (Inst11 <= 1000 && typeof (wasm_module) != "undefined") {_RecordType("<9348,9359,6>",(wasm_module)); Inst11++; } } catch(e) {}
    var wasm_instance = new WebAssembly.Instance(wasm_module);
try { if (Inst8 <= 1000 && typeof (wasm_instance) != "undefined") {_RecordType("<9307,9320,6>",(wasm_instance)); Inst8++; } } catch(e) {}
try { if (Inst13 <= 1000 && typeof (wasm_instance.exports.main) != "undefined") {_RecordType("<9375,9401,7>",(wasm_instance.exports.main)); Inst13++; } } catch(e) {}try { if (Inst14 <= 1000 && typeof (wasm_instance.exports) != "undefined") {_RecordType("<9375,9396,7>",(wasm_instance.exports)); Inst14++; } } catch(e) {}try { if (Inst15 <= 1000 && typeof (wasm_instance) != "undefined") {_RecordType("<9375,9388,7>",(wasm_instance)); Inst15++; } } catch(e) {}
    var f = wasm_instance.exports.main;
try { if (Inst12 <= 1000 && typeof (f) != "undefined") {_RecordType("<9371,9372,7>",(f)); Inst12++; } } catch(e) {}
try { if (Inst16 <= 1000 && typeof (f) != "undefined") {_RecordType("<9408,9409,8>",(f)); Inst16++; } } catch(e) {}
    f();

